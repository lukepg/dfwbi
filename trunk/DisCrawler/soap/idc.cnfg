target service:http://192.168.4.45:8080/WebServiceCrawler/services
浔阳晚报
epaper_jjxw_cn_32426
http://epaper.jjxw.cn/xywb
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot; and @class=&quot;bg_img&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@class=&quot;bg_img&quot; and @id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/div/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@class=&quot;bg_img&quot; and @id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;] | /html/body/table[@class=&quot;bg_img&quot; and @id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;middle&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@class=&quot;bg_img&quot; and @id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/strong | /html/body/table[@class=&quot;bg_img&quot; and @id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/div/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@class=&quot;bg_img&quot; and @id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/div/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@class=&quot;bg_img&quot; and @id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/div/table/tbody/tr/td/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
南京日报
njrb_njnews_cn_26969
http://njrb.njnews.cn
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/div[@align=&quot;left&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
贵阳日报
old_gywb_cn_29550
http://old.gywb.cn/gyrb-sub
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/table/tbody/tr/td/p/font"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
巢湖日报
szb_ch365_com_cn_27050
http://szb.ch365.com.cn/chrb
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table[@class=&quot;ft12h&quot; and @align=&quot;left&quot;]/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@align=&quot;left&quot;]/table/tbody/tr/td/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string('')"/> 
          <xsl:variable name="source" select="string('')"/>
          <xsl:variable name="attr" select="string('')"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;lai&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1 | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;c_c&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@id=&quot;articlecontent&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
巢湖晨刊
szb_ch365_com_cn_29435
http://szb.ch365.com.cn/dsck
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table/tbody/tr/td[@align=&quot;center&quot; and @valign=&quot;top&quot;]/table[@class=&quot;putt&quot;]/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/span[@class=&quot;px12&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
兰州晚报
wb_lzbs_com_cn_29528
http://wb.lzbs.com.cn/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/div[@id=&quot;pgn&quot; and @align=&quot;center&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@align=&quot;left&quot;]/a[@class=&quot;bmtext&quot;]"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;left&quot;]/table[@align=&quot;left&quot;]/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@align=&quot;left&quot;]/a[@class=&quot;bmtext&quot;]"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/span[@class=&quot;hljs&quot;]"/> 
          <xsl:variable name="source" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/span[@class=&quot;hljs&quot;]"/>
          <xsl:variable name="attr" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/span[@class=&quot;hljs&quot;]"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@class=&quot;zoomtext&quot; and @valign=&quot;top&quot; and @align=&quot;center&quot; and @bgcolor=&quot;#ffffff&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;middle&quot; and @align=&quot;center&quot; and @bgcolor=&quot;#1783b2&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @bgcolor=&quot;#ffffff&quot;]/span[@class=&quot;suv2&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/div[@id=&quot;pgn&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/span[@class=&quot;hljs&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
黔中早报
asrbs_net_29556
http://www.asrbs.net/site1/aswb/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot; and @bgcolor=&quot;#dddddd&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#f6f3ea&quot;]/table[@bgcolor=&quot;#f6f3ea&quot;]/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt1&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="//span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot; and @bgcolor=&quot;#dddddd&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#f6f3ea&quot;]/table[@bgcolor=&quot;#f6f3ea&quot;]/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt2&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot; and @bgcolor=&quot;#dddddd&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#f6f3ea&quot;]/table[@bgcolor=&quot;#f6f3ea&quot;]/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt1&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot; and @bgcolor=&quot;#dddddd&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#f6f3ea&quot;]/table[@bgcolor=&quot;#f6f3ea&quot;]/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot; and @align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/table[@class=&quot;xilan_content_tt&quot;]/tbody/tr/td[@class=&quot;xilan_content_tt&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
汉江时报
hjsb_hj_cn_27559
http://hjsb.hj.cn/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//div[@class=&quot;text_gd&quot;]/ul/li/a"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table[@class=&quot;ft12h&quot; and @align=&quot;left&quot;]/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@align=&quot;left&quot;]/table/tbody/tr/td/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string('')"/> 
          <xsl:variable name="source" select="string('')"/>
          <xsl:variable name="attr" select="string('')"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;lai&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1 | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;c_c&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@id=&quot;articlecontent&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
中国有色金属报
paper_cnmn_com_cn_27597
http://paper.cnmn.com.cn/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div/form/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td/div/table/tbody/tr/td[@align=&quot;left&quot;]/a"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div/form/table/tbody/tr/td[@align=&quot;center&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td/a[@class=&quot;TitleA&quot;]"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body/form[@id=&quot;form1&quot;]/div/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/div/table[@id=&quot;DetailsView1&quot;]/tbody/tr[@align=&quot;center&quot;]/td"/> 
          <xsl:variable name="source" select="/html/body/form[@id=&quot;form1&quot;]/div/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/div/table[@id=&quot;DetailsView1&quot;]/tbody/tr[@align=&quot;center&quot;]/td"/>
          <xsl:variable name="attr" select="/html/body/form[@id=&quot;form1&quot;]/div/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/div/table[@id=&quot;DetailsView1&quot;]/tbody/tr[@align=&quot;center&quot;]/td"/>       
	  <xsl:variable name="title" select="/html/body/form[@id=&quot;form1&quot;]/div/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/div/table[@id=&quot;DetailsView1&quot;]/tbody/tr[@align=&quot;center&quot;]/td[@class=&quot;line&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/form[@id=&quot;form1&quot;]/div/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/div"/> 
	  <xsl:variable name="content" select="/html/body/form[@id=&quot;form1&quot;]/div/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/div/table[@id=&quot;DetailsView1&quot;]/tbody/tr[@align=&quot;center&quot;]/td[@class=&quot;line&quot;] | /html/body/form[@id=&quot;form1&quot;]/div/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/div/table[@id=&quot;DetailsView1&quot;]/tbody/tr[@align=&quot;center&quot;]/td[@class=&quot;line&quot; and @align=&quot;left&quot;]/span[@id=&quot;DetailsView1_Label1&quot;]/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
齐鲁晚报
r_dzwww_com_26987
http://paper.dzwww.com/qlwb/index.html
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot; and @bgcolor=&quot;#d1181e&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot; and @bgcolor=&quot;#ffffff&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot; and @bgcolor=&quot;#f0f0f0&quot;]/table/tbody/tr/td[@class=&quot;A0&quot; and @align=&quot;center&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/ul[@id=&quot;banlist&quot;]/li[@class=&quot;banci&quot;]/a"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div[@align=&quot;center&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot; and @class=&quot;A0&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/ul[@id=&quot;newslist&quot;]"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="li/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="string(&quot;&quot;)"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot; and @bgcolor=&quot;#d1181e&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot; and @bgcolor=&quot;#ffffff&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/table"/> 
	  <xsl:variable name="content" select="/html/body/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot; and @bgcolor=&quot;#d1181e&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot; and @bgcolor=&quot;#ffffff&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot; and @bgcolor=&quot;#f0f0f0&quot;]/table/tbody/tr/td[@class=&quot;A0&quot; and @align=&quot;center&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/ul[@id=&quot;newslist&quot;]/li/a"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
农村大众
r_dzwww_com_27363
http://paper.dzwww.com/ncdz/index.html
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot; and @bgcolor=&quot;#d1181e&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot; and @bgcolor=&quot;#ffffff&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot; and @bgcolor=&quot;#f0f0f0&quot;]/table/tbody/tr/td[@class=&quot;A0&quot; and @align=&quot;center&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/ul[@id=&quot;banlist&quot;]/li[@class=&quot;banci&quot;]/a"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div[@align=&quot;center&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot; and @class=&quot;A0&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/ul[@id=&quot;newslist&quot;]"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="li/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body/div[@class=&quot;wrap&quot;]/div[@class=&quot;content&quot;]/div[@class=&quot;xilan&quot;]/div[@class=&quot;right&quot;]/div[@class=&quot;neirong1&quot;]/div[@class=&quot;wenzi&quot;]/ul/li[@class=&quot;jianju&quot;]"/> 
          <xsl:variable name="source" select="/html/body/div[@class=&quot;wrap&quot;]/div[@class=&quot;content&quot;]/div[@class=&quot;xilan&quot;]/div[@class=&quot;right&quot;]/div[@class=&quot;neirong1&quot;]/div[@class=&quot;wenzi&quot;]/ul/li[@class=&quot;jianju&quot;]"/>
          <xsl:variable name="attr" select="/html/body/div[@class=&quot;wrap&quot;]/div[@class=&quot;content&quot;]/div[@class=&quot;xilan&quot;]/div[@class=&quot;right&quot;]/div[@class=&quot;neirong1&quot;]/div[@class=&quot;wenzi&quot;]/ul/li[@class=&quot;jianju&quot;]"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;wrap&quot;]/div[@class=&quot;content&quot;]/div[@class=&quot;xilan&quot;]/div[@class=&quot;right&quot;]/div[@class=&quot;neirong1&quot;]/div[@class=&quot;wenzi&quot;]/h1"/> 
	  <xsl:variable name="publishdate" select="string(&quot;&quot;)"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;wrap&quot;]/div[@class=&quot;content&quot;]/div[@class=&quot;xilan&quot;]/div[@class=&quot;right&quot;]/div[@class=&quot;neirong1&quot;]/div[@class=&quot;wenzi&quot;]/h2 | /html/body/div[@class=&quot;wrap&quot;]/div[@class=&quot;content&quot;]/div[@class=&quot;xilan&quot;]/div[@class=&quot;right&quot;]/div[@class=&quot;neirong1&quot;]/div[@class=&quot;wenzi&quot;]/h1 | /html/body/div[@class=&quot;wrap&quot;]/div[@class=&quot;content&quot;]/div[@class=&quot;xilan&quot;]/div[@class=&quot;right&quot;]/div[@class=&quot;neirong1&quot;]/div[@class=&quot;xiangxi&quot;]/div[@id=&quot;content&quot;] | /html/body/div[@class=&quot;wrap&quot;]/div[@class=&quot;content&quot;]/div[@class=&quot;xilan&quot;]/div[@class=&quot;right&quot;]/div[@class=&quot;neirong1&quot;]/div[@id=&quot;benbannews&quot;]/ul[@id=&quot;xiangguan&quot;]/li/a"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
经济导报
r_dzwww_com_27325
http://paper.dzwww.com/jjdb/index.html
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot; and @bgcolor=&quot;#d1181e&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot; and @bgcolor=&quot;#ffffff&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot; and @bgcolor=&quot;#f0f0f0&quot;]/table/tbody/tr/td[@class=&quot;A0&quot; and @align=&quot;center&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/ul[@id=&quot;banlist&quot;]/li[@class=&quot;banci&quot;]/a"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div[@align=&quot;center&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot; and @class=&quot;A0&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/ul[@id=&quot;newslist&quot;]"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="li/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body/div[@class=&quot;wrap&quot;]/div[@class=&quot;content&quot;]/div[@class=&quot;xilan&quot;]/div[@class=&quot;right&quot;]/div[@class=&quot;neirong1&quot;]/div[@class=&quot;wenzi&quot;]/ul/li[@class=&quot;jianju&quot;]"/> 
          <xsl:variable name="source" select="/html/body/div[@class=&quot;wrap&quot;]/div[@class=&quot;content&quot;]/div[@class=&quot;xilan&quot;]/div[@class=&quot;right&quot;]/div[@class=&quot;neirong1&quot;]/div[@class=&quot;wenzi&quot;]/ul/li[@class=&quot;jianju&quot;]"/>
          <xsl:variable name="attr" select="/html/body/div[@class=&quot;wrap&quot;]/div[@class=&quot;content&quot;]/div[@class=&quot;xilan&quot;]/div[@class=&quot;right&quot;]/div[@class=&quot;neirong1&quot;]/div[@class=&quot;wenzi&quot;]/ul/li[@class=&quot;jianju&quot;]"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;wrap&quot;]/div[@class=&quot;content&quot;]/div[@class=&quot;xilan&quot;]/div[@class=&quot;right&quot;]/div[@class=&quot;neirong1&quot;]/div[@class=&quot;wenzi&quot;]/h1"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot; and @bgcolor=&quot;#d1181e&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot; and @bgcolor=&quot;#ffffff&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/table"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;wrap&quot;]/div[@class=&quot;content&quot;]/div[@class=&quot;xilan&quot;]/div[@class=&quot;right&quot;]/div[@class=&quot;neirong1&quot;]/div[@class=&quot;wenzi&quot;]/h2 | /html/body/div[@class=&quot;wrap&quot;]/div[@class=&quot;content&quot;]/div[@class=&quot;xilan&quot;]/div[@class=&quot;right&quot;]/div[@class=&quot;neirong1&quot;]/div[@class=&quot;wenzi&quot;]/h1 | /html/body/div[@class=&quot;wrap&quot;]/div[@class=&quot;content&quot;]/div[@class=&quot;xilan&quot;]/div[@class=&quot;right&quot;]/div[@class=&quot;neirong1&quot;]/div[@class=&quot;xiangxi&quot;]/div[@id=&quot;content&quot;] | /html/body/div[@class=&quot;wrap&quot;]/div[@class=&quot;content&quot;]/div[@class=&quot;xilan&quot;]/div[@class=&quot;right&quot;]/div[@class=&quot;neirong1&quot;]/div[@id=&quot;benbannews&quot;]/ul[@id=&quot;xiangguan&quot;]/li/a"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
大众日报
r_dzwww_com_26971
http://paper.dzwww.com/dzrb/index.html
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot; and @bgcolor=&quot;#d1181e&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot; and @bgcolor=&quot;#ffffff&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot; and @bgcolor=&quot;#f0f0f0&quot;]/table/tbody/tr/td[@class=&quot;A0&quot; and @align=&quot;center&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/ul[@id=&quot;banlist&quot;]/li[@class=&quot;banci&quot;]/a"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div[@align=&quot;center&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot; and @class=&quot;A0&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/ul[@id=&quot;newslist&quot;]"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="li/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string('')"/> 
          <xsl:variable name="source" select="string('')"/>
          <xsl:variable name="attr" select="string('')"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;lai&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1 | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;c_c&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@id=&quot;articlecontent&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
山东法制报
r_dzwww_com_27486
http://paper.dzwww.com/sdfzb/index.html
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot; and @bgcolor=&quot;#d1181e&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot; and @bgcolor=&quot;#ffffff&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot; and @bgcolor=&quot;#f0f0f0&quot;]/table/tbody/tr/td[@class=&quot;A0&quot; and @align=&quot;center&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/ul[@id=&quot;banlist&quot;]/li[@class=&quot;banci&quot;]/a"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div[@align=&quot;center&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot; and @class=&quot;A0&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/ul[@id=&quot;newslist&quot;]"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="li/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string('')"/> 
          <xsl:variable name="source" select="string('')"/>
          <xsl:variable name="attr" select="string('')"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;lai&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1 | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;c_c&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@id=&quot;articlecontent&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
十堰日报
syrb_10yan_com_27514
http://syrb.10yan.com/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//div[@class=&quot;text_gd&quot;]/ul/li/a"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div/div/div/div/div/div[@class=&quot;main_text&quot;]"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="ul/li/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string('')"/> 
          <xsl:variable name="source" select="string('')"/>
          <xsl:variable name="attr" select="string('')"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;lai&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1 | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;c_c&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@id=&quot;articlecontent&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
中国经济导报
ceh_com_cn_27446
http://www.ceh.com.cn:8080/epaper/ceh/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td/table/tbody/tr/td/div/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string('')"/> 
          <xsl:variable name="source" select="string('')"/>
          <xsl:variable name="attr" select="string('')"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;lai&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1 | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;c_c&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@id=&quot;articlecontent&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
中国旅游报
ctnews_com_cn_27293
http://www.ctnews.com.cn/lybgb/lybgb.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/center/table[@bgcolor=&quot;#ffffff&quot;]/tbody/tr/td[@class=&quot;summary&quot; and @valign=&quot;top&quot; and @align=&quot;middle&quot; and @bgcolor=&quot;#2597e8&quot;]/div[@align=&quot;center&quot;]/table/tbody/tr/td[@class=&quot;bai&quot; and @valign=&quot;top&quot; and @align=&quot;center&quot;]/table/tbody/tr/td/a"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//td[@class=&quot;summary&quot;]/div"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="map/area"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string('')"/> 
          <xsl:variable name="source" select="string('')"/>
          <xsl:variable name="attr" select="string('')"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;lai&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1 | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;c_c&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@id=&quot;articlecontent&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
佛山日报
fsonline_com_cn_27027
http://www.fsonline.com.cn/szb
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/div[@id=&quot;pgn&quot;]/ul/li/a"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td/span/b/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string('')"/> 
          <xsl:variable name="source" select="string('')"/>
          <xsl:variable name="attr" select="string('')"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;lai&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1 | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;c_c&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@id=&quot;articlecontent&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
川东周末·川东都市
garb_cn_27323
http://www.garb.cn/epaper/uniflows_2/default.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table[@class=&quot;ft12h&quot; and @align=&quot;left&quot;]/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@align=&quot;left&quot;]/table/tbody/tr/td/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string('')"/> 
          <xsl:variable name="source" select="string('')"/>
          <xsl:variable name="attr" select="string('')"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;lai&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1 | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;c_c&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@id=&quot;articlecontent&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
闽北日报
greatwuyi_com_27267
http://www.greatwuyi.com/mbrb
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@align=&quot;center&quot; and @valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@align=&quot;center&quot; and @valign=&quot;top&quot;]/a[@class=&quot;14bwhite&quot;]"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@align=&quot;center&quot; and @valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@align=&quot;left&quot; and @class=&quot;12h&quot;]"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="a[@class=&quot;jryw&quot;]"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string('')"/> 
          <xsl:variable name="source" select="string('')"/>
          <xsl:variable name="attr" select="string('')"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;lai&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1 | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;c_c&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@id=&quot;articlecontent&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
海峡都市报
hdzxw_com_27308
http://www.hdzxw.com/epaper
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@class=&quot;hei-12p25pnn&quot; and @bgcolor=&quot;#f1ede2&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td/div[@id=&quot;pageNav&quot;]/table/tbody/tr/td[@class=&quot;hei-12p25pnn&quot;]/a"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@class=&quot;hei-12p25pnn&quot; and @valign=&quot;top&quot;]"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td[@class=&quot;hei-14p25pnn&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string('')"/> 
          <xsl:variable name="source" select="string('')"/>
          <xsl:variable name="attr" select="string('')"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;lai&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1 | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;c_c&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@id=&quot;articlecontent&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
济源日报
jyrb_cn_27403
http://www.jyrb.cn:8080/epaper/uniflows/html/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//table[@class=&quot;board_link&quot;]/tbody/tr/td/a"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td/table/tbody/tr/td/div/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string('')"/> 
          <xsl:variable name="source" select="string('')"/>
          <xsl:variable name="attr" select="string('')"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;lai&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1 | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;c_c&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@id=&quot;articlecontent&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
济源日报（王屋晨风）
jyrb_cn_27201
http://www.jyrb.cn:8080/epaper/uniflows2/html/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//table[@class=&quot;board_link&quot;]/tbody/tr/td/a"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td/table/tbody/tr/td/div/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string('')"/> 
          <xsl:variable name="source" select="string('')"/>
          <xsl:variable name="attr" select="string('')"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;lai&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1 | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;c_c&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@id=&quot;articlecontent&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
茂名日报
maomingdaily_com_cn_27287
http://www.maomingdaily.com.cn/mmrb
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table[@class=&quot;ft12h&quot; and @align=&quot;left&quot;]/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@align=&quot;left&quot;]/table/tbody/tr/td/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string('')"/> 
          <xsl:variable name="source" select="string('')"/>
          <xsl:variable name="attr" select="string('')"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;lai&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1 | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;c_c&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@id=&quot;articlecontent&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
茂名晚报
maomingdaily_com_cn_27362
http://www.maomingdaily.com.cn/mmwb
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table[@class=&quot;ft12h&quot; and @align=&quot;left&quot;]/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@align=&quot;left&quot;]/table/tbody/tr/td/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string('')"/> 
          <xsl:variable name="source" select="string('')"/>
          <xsl:variable name="attr" select="string('')"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;lai&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1 | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;c_c&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@id=&quot;articlecontent&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
闽西日报
mxrb_cn_27271
http://www.mxrb.cn/dzb/dzb.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//span/a"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table/tbody/tr/td"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="map/area"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string('')"/> 
          <xsl:variable name="source" select="string('')"/>
          <xsl:variable name="attr" select="string('')"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;lai&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1 | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;c_c&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@id=&quot;articlecontent&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
消费日报
xfrb_com_cn_27281
http://www.xfrb.com.cn/xfrbmap/xfrbmap.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div/table/tbody/tr/td/table/tbody/tr/td/a"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div[@align=&quot;center&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string('')"/> 
          <xsl:variable name="source" select="string('')"/>
          <xsl:variable name="attr" select="string('')"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;lai&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1 | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;c_c&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@id=&quot;articlecontent&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
襄樊日报
xfrb_hj_cn_27555
http://xfrb.hj.cn/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//div[@class=&quot;text_gd&quot;]/ul/li/a"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div/div/div[@class=&quot;pa&quot;]/div/div[@class=&quot;text_bg txt_bord&quot;]/div/div[@class=&quot;main_text text_gd&quot;]/ul[@class=&quot;block&quot;]"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="li/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string('')"/> 
          <xsl:variable name="source" select="string('')"/>
          <xsl:variable name="attr" select="string('')"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;lai&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1 | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;c_c&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@id=&quot;articlecontent&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
襄樊晚报
xfwb_hj_cn_27557
http://xfwb.hj.cn/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//div[@class=&quot;text_gd&quot;]/ul/li/a"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div/div/div[@class=&quot;pa&quot;]/div/div[@class=&quot;text_bg txt_bord&quot;]/div/div[@class=&quot;main_text text_gd&quot;]/ul[@class=&quot;block&quot;]"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="li/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body/div[@id=&quot;zy_main&quot;]/div[@id=&quot;zy_right&quot;]/div[@class=&quot;txt_bord&quot; and @id=&quot;zy_sec&quot;]/form/select/option"/> 
          <xsl:variable name="source" select="/html/body/div[@id=&quot;zy_main&quot;]/div[@id=&quot;zy_right&quot;]/div[@class=&quot;txt_bord&quot; and @id=&quot;zy_sec&quot;]/form/select/option"/>
          <xsl:variable name="attr" select="/html/body/div[@id=&quot;zy_main&quot;]/div[@id=&quot;zy_right&quot;]/div[@class=&quot;txt_bord&quot; and @id=&quot;zy_sec&quot;]/form/select/option"/>       
	  <xsl:variable name="title" select="/html/body/div[@id=&quot;zy_main&quot;]/div[@id=&quot;zy_left&quot;]/div[@id=&quot;zy_zt&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@id=&quot;zy_main&quot;]/div[@id=&quot;zy_left&quot;]/div[@id=&quot;zy_nav&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@id=&quot;zy_main&quot;]/div[@id=&quot;zy_left&quot;]/div[@id=&quot;zy_zt&quot;] | /html/body/div[@id=&quot;zy_main&quot;]/div[@id=&quot;zy_left&quot;]/div[@id=&quot;copytext&quot;]/div[@id=&quot;zy_text&quot;]/div[@id=&quot;zy_text_Content&quot;]/div[@id=&quot;zoom&quot;]/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
深圳商报
szsb_sznews_com_27794
http://szsb.sznews.com
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="map/area"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string('')"/> 
          <xsl:variable name="source" select="string('')"/>
          <xsl:variable name="attr" select="string('')"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;lai&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1 | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;c_c&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@id=&quot;articlecontent&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
宝安日报
barb_sznews_com_27462
http://barb.sznews.com/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/a[@class=&quot;style36&quot;]"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string('')"/> 
          <xsl:variable name="source" select="string('')"/>
          <xsl:variable name="attr" select="string('')"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;lai&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1 | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;c_c&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@id=&quot;articlecontent&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
新华每日电讯
202_84_17_54_27070
http://202.84.17.54/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot; and @bgcolor=&quot;#ffffff&quot;]/tbody/tr/td/table/tbody/tr/td[@bgcolor=&quot;#4ac0ff&quot;]/table[@bgcolor=&quot;#ddf4ff&quot;]/tbody/tr/td[@class=&quot;blu12&quot; and @align=&quot;right&quot;]/table/tbody/tr/td/a[@class=&quot;atitle&quot;]"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td/table/tbody/tr/td[@valign=&quot;top&quot;]"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="table/tbody/tr/td/a[@class=&quot;atitle&quot; and @target=&quot;_blank&quot;]"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body/table[@align=&quot;center&quot; and @bgcolor=&quot;#ffffff&quot;]/tbody/tr/td/table/tbody/tr/td[@valign=&quot;top&quot;]/span/table/tbody/tr/td/span[@id=&quot;contenttext&quot;]/p[@align=&quot;right&quot;]/font | /html/body/table[@align=&quot;center&quot; and @bgcolor=&quot;#ffffff&quot;]/tbody/tr/td/table/tbody/tr/td[@valign=&quot;top&quot;]/span/table[@align=&quot;left&quot;]/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td/span"/> 
          <xsl:variable name="source" select="/html/body/table[@align=&quot;center&quot; and @bgcolor=&quot;#ffffff&quot;]/tbody/tr/td/table/tbody/tr/td[@valign=&quot;top&quot;]/span/table/tbody/tr/td | /html/body/table[@align=&quot;center&quot; and @bgcolor=&quot;#ffffff&quot;]/tbody/tr/td/table/tbody/tr/td[@valign=&quot;top&quot;]/span/table/tbody/tr/td"/>
          <xsl:variable name="attr" select="/html/body/table[@align=&quot;center&quot; and @bgcolor=&quot;#ffffff&quot;]/tbody/tr/td/table/tbody/tr/td[@valign=&quot;top&quot;]/span/table/tbody/tr/td/span[@id=&quot;contenttext&quot;]/p[@align=&quot;right&quot;]/font | /html/body/table[@align=&quot;center&quot; and @bgcolor=&quot;#ffffff&quot;]/tbody/tr/td/table/tbody/tr/td[@valign=&quot;top&quot;]/span/table[@align=&quot;left&quot;]/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td/span[@id=&quot;oldcontenttext&quot;]/p[@align=&quot;right&quot;] | /html/body/table[@align=&quot;center&quot; and @bgcolor=&quot;#ffffff&quot;]/tbody/tr/td/table/tbody/tr/td[@valign=&quot;top&quot;]/span/table[@align=&quot;left&quot;]/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td/span/p"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot; and @bgcolor=&quot;#ffffff&quot;]/tbody/tr/td/table/tbody/tr/td[@valign=&quot;top&quot;]/span/table/tbody/tr/td/span[@id=&quot;contenttext&quot;]/p[@align=&quot;right&quot;]/font"/> 
	  <xsl:variable name="publishdate" select="/html/head | /html/head"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot; and @bgcolor=&quot;#ffffff&quot;]/tbody/tr/td/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;right&quot;]/table/tbody/tr/td[@class=&quot;14&quot; and @align=&quot;middle&quot;] | /html/body/table[@align=&quot;center&quot; and @bgcolor=&quot;#ffffff&quot;]/tbody/tr/td/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/a[@class=&quot;atitle&quot;] | /html/body/table[@align=&quot;center&quot; and @bgcolor=&quot;#ffffff&quot;]/tbody/tr/td/table/tbody/tr/td[@valign=&quot;top&quot;]/span/table/tbody/tr/td/span[@id=&quot;contenttext&quot;]/p/font | /html/body/table[@align=&quot;center&quot; and @bgcolor=&quot;#ffffff&quot;]/tbody/tr/td/table/tbody/tr/td[@valign=&quot;top&quot;]/span/table/tbody/tr/td/span[@id=&quot;contenttext&quot;]/div[@align=&quot;center&quot;]/font/strong | /html/body/table[@align=&quot;center&quot; and @bgcolor=&quot;#ffffff&quot;]/tbody/tr/td/table/tbody/tr/td[@valign=&quot;top&quot;]/span/table/tbody/tr/td/span[@id=&quot;contenttext&quot;]/p[@align=&quot;right&quot;]/font | /html/body/table[@align=&quot;center&quot; and @bgcolor=&quot;#ffffff&quot;]/tbody/tr/td/table/tbody/tr/td[@valign=&quot;top&quot;]/span/table[@align=&quot;center&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/div[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot; and @bgcolor=&quot;#ffffff&quot;]/tbody/tr/td/table/tbody/tr/td[@valign=&quot;top&quot;]/span/table[@align=&quot;left&quot;]/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td/span[@id=&quot;oldcontenttext&quot;]/p | /html/body/table[@align=&quot;center&quot; and @bgcolor=&quot;#ffffff&quot;]/tbody/tr/td/table/tbody/tr/td[@valign=&quot;top&quot;]/span/table[@align=&quot;left&quot;]/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td/span[@id=&quot;oldcontenttext&quot;]/div[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot; and @bgcolor=&quot;#ffffff&quot;]/tbody/tr/td/table/tbody/tr/td[@valign=&quot;top&quot;]/span/table[@align=&quot;left&quot;]/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td/span[@id=&quot;oldcontenttext&quot;]/p[@align=&quot;right&quot;]"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
河北工人报
epaper_hbgrb_net_27009
http://www.hbgrb.net/epaper
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@class=&quot;px12&quot; and @align=&quot;left&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/span[@class=&quot;px12&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/p | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/span[@class=&quot;px12&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/p/strong"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
春城晚报
ccwb_yunnan_cn_27020
http://ccwb.yunnan.cn/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div[@class=&quot;middiv1&quot;]/div[@class=&quot;middiv2&quot;]/div[@class=&quot;layer&quot;]/div/div/div/div"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="div/table/tbody/tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string('')"/> 
          <xsl:variable name="source" select="string('')"/>
          <xsl:variable name="attr" select="string('')"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;lai&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1 | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;c_c&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@id=&quot;articlecontent&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
重庆晨报
cqcbepaper_cqnews_net_27012
http://cqcbepaper.cqnews.net/cqcb/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//td[@align=&quot;left&quot;]/a"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="map/area"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@class=&quot;px12&quot; and @align=&quot;left&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
城市假日
csjr_zjol_com_cn_27372
http://csjr.zjol.com.cn/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/table/tbody/tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	  <xsl:variable name="publishdate" select="/html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@class=&quot;px12&quot; and @align=&quot;left&quot;]/strong | /html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/table/tbody/tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a | /html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong/span[@id=&quot;contenttitle&quot;] | /html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;] | /html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
山东商报
epaper_readmeok_com_27520
http://epaper.readmeok.com/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table[@class=&quot;ft12h&quot; and @align=&quot;left&quot;]/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@align=&quot;left&quot;]/table/tbody/tr/td/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string('')"/> 
          <xsl:variable name="source" select="string('')"/>
          <xsl:variable name="attr" select="string('')"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;lai&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1 | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;c_c&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@id=&quot;articlecontent&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
绍兴日报
epaper_shaoxing_com_cn_27268
http://epaper.shaoxing.com.cn/sxrb
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;center&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span"/> 
          <xsl:variable name="source" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@align=&quot;center&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/span[@class=&quot;px12&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
绵阳晚报
epaper_su-long_com_27250
http://epaper.su-long.com/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="map/area"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt1&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt2&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt1&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td[@class=&quot;font6&quot; and @valign=&quot;top&quot; and @align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/table[@class=&quot;xilan_content_tt&quot;]/tbody/tr/td[@class=&quot;xilan_content_tt&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
产品可靠性报告
jdyxz_cqn_com_cn_27414
http://jdyxz.cqn.com.cn/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div/table/tbody/tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;]"/> 
          <xsl:variable name="source" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr/td"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
中国检验检疫
jyjy_cqn_com_cn_27409
http://jyjy.cqn.com.cn/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="map/area"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
莲池周刊
news_bdall_com_27140
http://news.bdall.com/epaper/lczk/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr/td[@align=&quot;center&quot; and @valign=&quot;top&quot;]/div"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="table/tbody/tr/td[@class=&quot;blue2&quot;]/a[@class=&quot;blue&quot;]"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/p[@class=&quot;text_au&quot;]"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/table/tbody/tr/td[@class=&quot;title_a&quot; and @valign=&quot;middle&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/table/tbody/tr/td[@class=&quot;title_a&quot; and @valign=&quot;middle&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
保定晚报
news_bdall_com_27132
http://news.bdall.com/epaper/bdwb/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="map/area"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/table/tbody/tr/td[@class=&quot;title_a&quot; and @valign=&quot;middle&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/table/tbody/tr/td[@class=&quot;title_a&quot; and @valign=&quot;middle&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
保定日报
news_bdall_com_27137
http://news.bdall.com/epaper/bdrb/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr/td[@align=&quot;center&quot; and @valign=&quot;top&quot;]/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;blue2&quot;]/a[@class=&quot;blue&quot;]"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/p[@class=&quot;text_au&quot;]"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/table/tbody/tr/td[@class=&quot;title_a&quot; and @valign=&quot;middle&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@class=&quot;blue2&quot;]/span/span[@class=&quot;blue2&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/table/tbody/tr/td[@class=&quot;title_a&quot; and @valign=&quot;middle&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/table/tbody/tr/td[@class=&quot;title_a&quot; and @valign=&quot;middle&quot; and @align=&quot;center&quot;]/span[@class=&quot;pretitle&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/p[@class=&quot;text_au&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
时代信报
sdxbepaper_cqnews_net_27138
http://sdxbepaper.cqnews.net/sdxb/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//td[@align=&quot;left&quot;]/a"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table[@class=&quot;ft12h&quot; and @align=&quot;left&quot;]/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@align=&quot;left&quot;]/table/tbody/tr/td/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string('')"/> 
          <xsl:variable name="source" select="string('')"/>
          <xsl:variable name="attr" select="string('')"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;lai&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1 | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;c_c&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@id=&quot;articlecontent&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
都市晨报
sqtg_cnxz_com_cn_27124
http://epaper.cnxz.com.cn/dscb
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//li[@author=&quot;nd&quot;]/a[1]"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div/div[@class=&quot;divbz&quot;]/div/div[@class=&quot;divbz_middle&quot;]/table/tbody/tr/td/div"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="table/tbody/tr/td/table/tbody/tr/td[@align=&quot;left&quot; and @class=&quot;le_12black&quot;]/a[@class=&quot;blue1&quot;]"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="/html/body/div[@class=&quot;xilancontent&quot;]/div[@class=&quot;xilandiv&quot;]/div[@class=&quot;xilan_left&quot;]/div[@class=&quot;xilan_content&quot;]/table[@class=&quot;xilan_content_tt&quot; and @id=&quot;ozoom&quot; and @align=&quot;center&quot;]/tbody/tr/td/table/tbody/tr/td"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;xilancontent&quot;]/div[@class=&quot;xilandiv&quot;]/div[@class=&quot;xilan_left&quot;]/div[@class=&quot;xilan_content&quot;]/div[@class=&quot;xilan_content_title&quot;]/h1"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;xilancontent&quot;]/div[@class=&quot;xilandiv&quot;]/div[@class=&quot;xilan_left&quot;]/div[@class=&quot;xilan_content&quot;]/div[@class=&quot;xilan_content_bq&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;xilancontent&quot;]/div[@class=&quot;xilandiv&quot;]/div[@class=&quot;xilan_left&quot;]/div[@class=&quot;xilan_content&quot;]/div[@class=&quot;xilan_content_title&quot;]/h1 | /html/body/div[@class=&quot;xilancontent&quot;]/div[@class=&quot;xilandiv&quot;]/div[@class=&quot;xilan_left&quot;]/div[@class=&quot;xilan_content&quot;]/div[@class=&quot;xilan_content_title&quot;]/h1/span | /html/body/div[@class=&quot;xilancontent&quot;]/div[@class=&quot;xilandiv&quot;]/div[@class=&quot;xilan_left&quot;]/div[@class=&quot;xilan_content&quot;]/table[@class=&quot;xilan_content_tt&quot; and @id=&quot;ozoom&quot; and @align=&quot;center&quot;]/tbody/tr/td/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
深圳特区报
sztqb_sznews_com_27291
http://sztqb.sznews.com
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="map/area"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@bgcolor=&quot;#ffffff&quot;]/div/table/tbody/tr/td/table/tbody/tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a/div[@id=&quot;mp947774&quot;] | /html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@bgcolor=&quot;#ffffff&quot;]/div/table/tbody/tr/td/table/tbody/tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a/div[@id=&quot;mp947774&quot;]"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@valign=&quot;bottom&quot; and @bgcolor=&quot;#cc0607&quot;] | /html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@valign=&quot;bottom&quot; and @bgcolor=&quot;#cc0607&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
深圳晚报
wb_sznews_com_27292
http://wb.sznews.com/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="map/area"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@valign=&quot;bottom&quot; and @bgcolor=&quot;#cc0607&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
中国质量万里行
wlx_cqn_com_cn_27396
http://wlx.cqn.com.cn/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="map/area"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;]"/> 
          <xsl:variable name="source" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr/td"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
中国国防报
chinamil_com_cn_27501
http://www.chinamil.com.cn/gfbmap/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table[@class=&quot;ft12h&quot; and @align=&quot;left&quot;]/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@align=&quot;left&quot;]/table/tbody/tr/td/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string('')"/> 
          <xsl:variable name="source" select="string('')"/>
          <xsl:variable name="attr" select="string('')"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;lai&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1 | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;c_c&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@id=&quot;articlecontent&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
重庆晚报
cqwb_com_cn_27065
http://www.cqwb.com.cn/cqwb
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div/table/tbody/tr/td[@class=&quot;default&quot; and @align=&quot;left&quot;]/a|/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div/table/tbody/tr[@bgcolor=&quot;#e8e8e8&quot;]/td[@class=&quot;default&quot; and @align=&quot;left&quot;]/a"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="map/area"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@class=&quot;px12&quot; and @align=&quot;left&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/span[@class=&quot;px12&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
定西日报
dingxidaily_com_27521
http://www.dingxidaily.com/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table[@class=&quot;ft12h&quot; and @align=&quot;left&quot;]/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@align=&quot;left&quot;]/table/tbody/tr/td/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string('')"/> 
          <xsl:variable name="source" select="string('')"/>
          <xsl:variable name="attr" select="string('')"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;lai&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1 | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;c_c&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@id=&quot;articlecontent&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
广安日报
garb_cn_27574
http://www.garb.cn/epaper/uniflows/default.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table[@class=&quot;ft12h&quot; and @align=&quot;left&quot;]/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@align=&quot;left&quot;]/table/tbody/tr/td/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string('')"/> 
          <xsl:variable name="source" select="string('')"/>
          <xsl:variable name="attr" select="string('')"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;lai&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1 | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;c_c&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@id=&quot;articlecontent&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
今晚经济周报
jwb_com_cn_27382
http://www.jwb.com.cn/jjzb
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="string(&quot;&quot;)"/> 
	  <xsl:variable name="publishdate" select="string(&quot;&quot;)"/> 
	  <xsl:variable name="content" select="string(&quot;&quot;)"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
兰州日报
lzbs_com_cn_27519
http://www.lzbs.com.cn/rb/rb.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#f3f7fc&quot;]/table/tbody/tr/td/table/tbody/tr/td[@align=&quot;center&quot; and @bgcolor=&quot;#e1ffe3&quot;]/a"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="map/area"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@class=&quot;bk4&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#f7fbff&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/span[@class=&quot;content&quot;]"/> 
          <xsl:variable name="source" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@class=&quot;bk4&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#f7fbff&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/span[@class=&quot;content&quot;]"/>
          <xsl:variable name="attr" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@class=&quot;bk4&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#f7fbff&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/span[@class=&quot;content&quot;]"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@class=&quot;bk4&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#f7fbff&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/span[@class=&quot;16&quot;]"/> 
	  <xsl:variable name="publishdate" select="string(&quot;&quot;)"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@class=&quot;bk4&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#f7fbff&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/span[@class=&quot;16&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@class=&quot;bk4&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#f7fbff&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/span[@class=&quot;content&quot; and @id=&quot;fontzoom&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@class=&quot;bk4&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#f7fbff&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/span[@class=&quot;content&quot; and @id=&quot;fontzoom&quot;]/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
江南晚报
wxrb_com_26965
http://www.wxrb.com/szb/jnwb/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@class=&quot;bgsty01&quot; and @align=&quot;center&quot;]/tbody/tr/td[@class=&quot;bgsty02&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@class=&quot;bmdhpd&quot; and @valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@class=&quot;bmdhnr&quot; and @valign=&quot;top&quot; and @align=&quot;center&quot;]/div/table/tbody/tr/td[@class=&quot;bmblank&quot; and @align=&quot;left&quot;]/a|/html/body/table[@class=&quot;bgsty01&quot; and @align=&quot;center&quot;]/tbody/tr/td[@class=&quot;bgsty02&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@class=&quot;bmdhpd&quot; and @valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@class=&quot;bmdhnr&quot; and @valign=&quot;top&quot; and @align=&quot;center&quot;]/div/table/tbody/tr[@bgcolor=&quot;#d9e7f0&quot;]/td[@class=&quot;bmblank&quot; and @align=&quot;left&quot;]/a"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="map/area"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@class=&quot;bgsty01&quot; and @align=&quot;center&quot;]/tbody/tr/td[@class=&quot;bgsty02&quot; and @valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@class=&quot;maintitle&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@class=&quot;bgsty01&quot; and @align=&quot;center&quot;]/tbody/tr/td[@class=&quot;bgsty02&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@class=&quot;rqcx&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@class=&quot;bgsty01&quot; and @align=&quot;center&quot;]/tbody/tr/td[@class=&quot;bgsty02&quot; and @valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@class=&quot;maintitle&quot; and @align=&quot;center&quot;] | /html/body/table[@class=&quot;bgsty01&quot; and @align=&quot;center&quot;]/tbody/tr/td[@class=&quot;bgsty02&quot; and @valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@class=&quot;addtitle&quot; and @align=&quot;center&quot;] | /html/body/table[@class=&quot;bgsty01&quot; and @align=&quot;center&quot;]/tbody/tr/td[@class=&quot;bgsty02&quot; and @valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
无锡商报
wxrb_com_27539
http://www.wxrb.com/szb/wxsb/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@class=&quot;bgsty01&quot; and @align=&quot;center&quot;]/tbody/tr/td[@class=&quot;bgsty02&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@class=&quot;bmdhpd&quot; and @valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@class=&quot;bmdhnr&quot; and @valign=&quot;top&quot; and @align=&quot;center&quot;]/div/table/tbody/tr/td[@class=&quot;bmblank&quot; and @align=&quot;left&quot;]/a|/html/body/table[@class=&quot;bgsty01&quot; and @align=&quot;center&quot;]/tbody/tr/td[@class=&quot;bgsty02&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@class=&quot;bmdhpd&quot; and @valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@class=&quot;bmdhnr&quot; and @valign=&quot;top&quot; and @align=&quot;center&quot;]/div/table/tbody/tr[@bgcolor=&quot;#d9e7f0&quot;]/td[@class=&quot;bmblank&quot; and @align=&quot;left&quot;]/a"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="map/area"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@class=&quot;bgsty01&quot; and @align=&quot;center&quot;]/tbody/tr/td[@class=&quot;bgsty02&quot; and @valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@class=&quot;maintitle&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@class=&quot;bgsty01&quot; and @align=&quot;center&quot;]/tbody/tr/td[@class=&quot;bgsty02&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@class=&quot;rqcx&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@class=&quot;bgsty01&quot; and @align=&quot;center&quot;]/tbody/tr/td[@class=&quot;bgsty02&quot; and @valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@class=&quot;maintitle&quot; and @align=&quot;center&quot;] | /html/body/table[@class=&quot;bgsty01&quot; and @align=&quot;center&quot;]/tbody/tr/td[@class=&quot;bgsty02&quot; and @valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@class=&quot;addtitle&quot; and @align=&quot;center&quot;] | /html/body/table[@class=&quot;bgsty01&quot; and @align=&quot;center&quot;]/tbody/tr/td[@class=&quot;bgsty02&quot; and @valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
无锡日报
wxrb_com_27158
http://www.wxrb.com/szb/wxrb/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@class=&quot;bgsty01&quot; and @align=&quot;center&quot;]/tbody/tr/td[@class=&quot;bgsty02&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@class=&quot;bmdhpd&quot; and @valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@class=&quot;bmdhnr&quot; and @valign=&quot;top&quot; and @align=&quot;center&quot;]/div/table/tbody/tr/td[@class=&quot;bmblank&quot; and @align=&quot;left&quot;]/a|/html/body/table[@class=&quot;bgsty01&quot; and @align=&quot;center&quot;]/tbody/tr/td[@class=&quot;bgsty02&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@class=&quot;bmdhpd&quot; and @valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@class=&quot;bmdhnr&quot; and @valign=&quot;top&quot; and @align=&quot;center&quot;]/div/table/tbody/tr[@bgcolor=&quot;#d9e7f0&quot;]/td[@class=&quot;bmblank&quot; and @align=&quot;left&quot;]/a"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="map/area"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body/table[@class=&quot;bgsty01&quot; and @align=&quot;center&quot;]/tbody/tr/td[@class=&quot;bgsty02&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@class=&quot;bgsty01&quot; and @align=&quot;center&quot;]/tbody/tr/td[@class=&quot;bgsty02&quot; and @valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@class=&quot;addtitle&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@class=&quot;bgsty01&quot; and @align=&quot;center&quot;]/tbody/tr/td[@class=&quot;bgsty02&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@class=&quot;rqcx&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@class=&quot;bgsty01&quot; and @align=&quot;center&quot;]/tbody/tr/td[@class=&quot;bgsty02&quot; and @valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@class=&quot;maintitle&quot; and @align=&quot;center&quot;] | /html/body/table[@class=&quot;bgsty01&quot; and @align=&quot;center&quot;]/tbody/tr/td[@class=&quot;bgsty02&quot; and @valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@class=&quot;addtitle&quot; and @align=&quot;center&quot;] | /html/body/table[@class=&quot;bgsty01&quot; and @align=&quot;center&quot;]/tbody/tr/td[@class=&quot;bgsty02&quot; and @valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
高尔夫
ycwb_com_27143
http://www.ycwb.com/ePaper/golf
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;left&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
新民周刊
xmzk_xinmin_cn_27390
http://xmzk.xinmin.cn/xmzk
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table/tbody/tr/td/table/tbody/tr/td/center"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="map/area"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table[@class=&quot;detail_table&quot;]/tbody/tr/td/div[@align=&quot;center&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table[@class=&quot;detail_table&quot;]/tbody/tr/td/div[@align=&quot;center&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table[@class=&quot;detail_table&quot;]/tbody/tr/td/div[@align=&quot;center&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/p/font"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
云南日报
yndaily_yunnan_cn_27141
http://yndaily.yunnan.cn
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div/div/div/div/div/div/div/div/table/tbody/tr/td"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="map/area"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;middiv1&quot;]/div[@class=&quot;middiv2&quot;]/div[@class=&quot;layer&quot;]/div[@id=&quot;right&quot;]/table/tbody/tr/td/div/table/tbody/tr/td[@id=&quot;tt&quot;]/div[@id=&quot;ft&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;middiv1&quot;]/div[@class=&quot;middiv2&quot;]/div[@class=&quot;layer&quot;]/div[@id=&quot;left&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@bgcolor=&quot;#ffffff&quot;]/div[@id=&quot;szb&quot;] | /html/body/div[@class=&quot;middiv1&quot;]/div[@class=&quot;middiv2&quot;]/div[@class=&quot;layer&quot;]/div[@id=&quot;right&quot;]/table/tbody/tr/td/table/tbody/tr/td[@align=&quot;center&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;middiv1&quot;]/div[@class=&quot;middiv2&quot;]/div[@class=&quot;layer&quot;]/div[@id=&quot;right&quot;]/table/tbody/tr/td/div/table/tbody/tr/td[@id=&quot;tt&quot;]/div[@id=&quot;bt&quot;] | /html/body/div[@class=&quot;middiv1&quot;]/div[@class=&quot;middiv2&quot;]/div[@class=&quot;layer&quot;]/div[@id=&quot;right&quot;]/table/tbody/tr/td/div/table/tbody/tr/td[@id=&quot;tt&quot;]/div[@id=&quot;ft&quot;] | /html/body/div[@class=&quot;middiv1&quot;]/div[@class=&quot;middiv2&quot;]/div[@class=&quot;layer&quot;]/div[@id=&quot;right&quot;]/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot; and @align=&quot;center&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
中国质量技术监督
zljs_cqn_com_cn_27398
http://zljs.cqn.com.cn/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="map/area"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr/td"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
证券日报
zqrb_ccstock_cc_27533
http://zqrb.ccstock.cc
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="map/area"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;frame&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr/td/table/tbody/tr/td[@class=&quot;h1&quot; and @valign=&quot;middle&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;frame&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/table[@class=&quot;fontstyle01&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;frame&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr/td/table/tbody/tr/td[@class=&quot;h1&quot; and @valign=&quot;middle&quot; and @align=&quot;center&quot;] | /html/body/div[@class=&quot;frame&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr/td/table/tbody/tr/td[@class=&quot;h1&quot; and @valign=&quot;middle&quot; and @align=&quot;center&quot;]/span[@class=&quot;subtitle&quot;] | /html/body/div[@class=&quot;frame&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr/td/table/tbody/tr/td[@class=&quot;content&quot; and @valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td/div[@id=&quot;ozoom&quot;]/founder-content/p | /html/body/founder-title | /html/body/founder-subtitle"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
长沙晚报
cswb_csonline_com_cn_32424
http://cswb.changsha.cn/CSWB/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/noframes/h1/a|/html/body/noframes/h2/a"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table[@class=&quot;ft12h&quot; and @align=&quot;left&quot;]/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@align=&quot;left&quot;]/table/tbody/tr/td/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string('')"/> 
          <xsl:variable name="source" select="string('')"/>
          <xsl:variable name="attr" select="string('')"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;lai&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1 | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;c_c&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@id=&quot;articlecontent&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
九江日报
epaper_jjxw_cn_32425
http://epaper.jjxw.cn/jjrb/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot; and @class=&quot;bg_img&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@class=&quot;bg_img&quot; and @id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/div/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@class=&quot;bg_img&quot; and @id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;middle&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@class=&quot;bg_img&quot; and @id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/strong | /html/body/table[@class=&quot;bg_img&quot; and @id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/div/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@class=&quot;bg_img&quot; and @id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/div/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@class=&quot;bg_img&quot; and @id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/div/table/tbody/tr/td/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
安顺日报
asrbs_net_29554
http://www.asrbs.net/site1/asrb/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table[@class=&quot;ft12h&quot; and @align=&quot;left&quot;]/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@align=&quot;left&quot;]/table/tbody/tr/td/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string('')"/> 
          <xsl:variable name="source" select="string('')"/>
          <xsl:variable name="attr" select="string('')"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;lai&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1 | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;c_c&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@id=&quot;articlecontent&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
毕节日报
gzbj_cn_29549
http://www.gzbj.cn/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt1&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt2&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt1&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/table/tbody/tr/td[@class=&quot;STYLE33&quot; and @align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/span/table[@class=&quot;xilan_content_tt&quot;]/tbody/tr/td[@class=&quot;xilan_content_tt&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
黔南日报
gzqnrb_com_29555
http://www.gzqnrb.com/dzb/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td/table/tbody/tr/td/a[@class=&quot;blue1&quot;]"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@valign=&quot;middle&quot; and @align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@class=&quot;title_a&quot; and @valign=&quot;middle&quot; and @align=&quot;center&quot;]/span[@class=&quot;subtitle&quot;]"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@valign=&quot;middle&quot; and @align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@class=&quot;title_a&quot; and @valign=&quot;middle&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="string(&quot;&quot;)"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@valign=&quot;middle&quot; and @align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@class=&quot;title_a&quot; and @valign=&quot;middle&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@valign=&quot;middle&quot; and @align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@class=&quot;title_a&quot; and @valign=&quot;middle&quot; and @align=&quot;center&quot;]/span[@class=&quot;pretitle&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@valign=&quot;middle&quot; and @align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@class=&quot;title_a&quot; and @valign=&quot;middle&quot; and @align=&quot;center&quot;]/span[@class=&quot;subtitle&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@valign=&quot;middle&quot; and @align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
拉萨晚报
lasa-eveningnews_com_cn_29530
http://www.lasa-eveningnews.com.cn
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//td/a"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td/table/tbody/tr/td/div/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body[@id=&quot;Me&quot; and @bgcolor=&quot;#FFFFF&quot;]/div/table[@class=&quot;main&quot; and @id=&quot;mybody&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td/table/tbody/tr/td[@class=&quot;pubdate&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/div[@class=&quot;content_sro&quot;]/table/tbody/tr/td"/> 
          <xsl:variable name="source" select="/html/body[@id=&quot;Me&quot; and @bgcolor=&quot;#FFFFF&quot;]/div/table[@class=&quot;main&quot; and @id=&quot;mybody&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td/table/tbody/tr/td[@class=&quot;pubdate&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/div[@class=&quot;content_sro&quot;]/table/tbody/tr/td"/>
          <xsl:variable name="attr" select="/html/body[@id=&quot;Me&quot; and @bgcolor=&quot;#FFFFF&quot;]/div/table[@class=&quot;main&quot; and @id=&quot;mybody&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td/table/tbody/tr/td[@class=&quot;pubdate&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/div[@class=&quot;content_sro&quot;]/table/tbody/tr/td | /html/body[@id=&quot;Me&quot; and @bgcolor=&quot;#FFFFF&quot;]/div/table[@class=&quot;main&quot; and @id=&quot;mybody&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td/table/tbody/tr/td[@class=&quot;pubdate&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/div[@class=&quot;content_sro&quot;]/table/tbody/tr/td[@class=&quot;others&quot; and @align=&quot;center&quot;] | /html/body[@id=&quot;Me&quot; and @bgcolor=&quot;#FFFFF&quot;]/div/table[@class=&quot;main&quot; and @id=&quot;mybody&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td/table/tbody/tr/td[@class=&quot;pubdate&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/div[@class=&quot;content_sro&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]"/>       
	  <xsl:variable name="title" select="/html/body[@id=&quot;Me&quot; and @bgcolor=&quot;#FFFFF&quot;]/div/table[@class=&quot;main&quot; and @id=&quot;mybody&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td/table/tbody/tr/td[@class=&quot;pubdate&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;middle&quot; and @align=&quot;center&quot;]/h2[@class=&quot;content_title&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/head | /html/body[@id=&quot;Me&quot; and @bgcolor=&quot;#FFFFF&quot;]/div/table[@class=&quot;main&quot; and @id=&quot;mybody&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@class=&quot;sousuo1&quot;]"/> 
	  <xsl:variable name="content" select="/html/body[@id=&quot;Me&quot; and @bgcolor=&quot;#FFFFF&quot;]/div/table[@class=&quot;main&quot; and @id=&quot;mybody&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td/table/tbody/tr/td[@class=&quot;pubdate&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;middle&quot; and @align=&quot;center&quot;]/h2[@class=&quot;content_title&quot;] | /html/body[@id=&quot;Me&quot; and @bgcolor=&quot;#FFFFF&quot;]/div/table[@class=&quot;main&quot; and @id=&quot;mybody&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td/table/tbody/tr/td[@class=&quot;pubdate&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/div[@class=&quot;content_sro&quot;]/table/tbody/tr/td/table/tbody/tr/td[@class=&quot;content&quot;]/div[@class=&quot;sfont&quot; and @id=&quot;pgcontent&quot;]"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
黔东南日报
qdnrb_cn_29557
http://www.qdnrb.cn/site1/qdnrb/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@bgcolor=&quot;#ffffff&quot;]/td[@class=&quot;px12c&quot; and @align=&quot;center&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
延边日报
ybrbszb_chinajilin_com_cn_29413
http://ybrbszb.chinajilin.com.cn/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table[@class=&quot;ft12h&quot; and @align=&quot;left&quot;]/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@align=&quot;left&quot;]/table/tbody/tr/td/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string('')"/> 
          <xsl:variable name="source" select="string('')"/>
          <xsl:variable name="attr" select="string('')"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;lai&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1 | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;c_c&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@id=&quot;articlecontent&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
21世纪经济报道
nanfangdaily_com_cn_27795
http://www.nanfangdaily.com.cn/epaper/21cn/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//td[@align=&quot;left&quot;]/p/a"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="table/tbody/tr/td/table/tbody/tr/td/a[@class=&quot;14&quot;]"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="string(&quot;&quot;)"/> 
	  <xsl:variable name="publishdate" select="string(&quot;&quot;)"/> 
	  <xsl:variable name="content" select="string(&quot;&quot;)"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
北京青年报
bjyouth_ynet_com_27472
http://bjyouth.ynet.com/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//div[@class=&quot;menu1 left f14 fB line-height&quot;]/a"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div[@class=&quot;area col2_bottom&quot;]/div[@class=&quot;area DJ clear bg&quot;]/div[@class=&quot;ac list1 line-height f14 juzuo&quot;]/ul"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="li/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="/html/body/div[@class=&quot;RC mt0&quot;]/div[@class=&quot;HC&quot;]/div[@class=&quot;hclc&quot;]/div[@class=&quot;bd&quot;]/div[@class=&quot;va pd10&quot;]/p[@class=&quot;pd10 fs12&quot;]"/>
          <xsl:variable name="attr" select="/html/body/div[@class=&quot;RC mt0&quot;]/div[@class=&quot;HC&quot;]/div[@class=&quot;hclc&quot;]/div[@class=&quot;bd&quot;]/div[@class=&quot;va pd10&quot;]/p[@class=&quot;pd10 fs12&quot;]"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;RC mt0&quot;]/div[@class=&quot;HC&quot;]/div[@class=&quot;hcr&quot;]/table[@class=&quot;bd nbdt&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@class=&quot;hc3 nbd pdt10 pdb0 tc fs14&quot;]/a/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;RC mt0&quot;]/div[@class=&quot;HC&quot;]/div[@class=&quot;hclc&quot;]/div[@class=&quot;bd&quot;]/div[@class=&quot;va pd10&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;RC mt0&quot;]/div[@class=&quot;HC&quot;]/div[@class=&quot;hclc&quot;]/div[@class=&quot;bd&quot;]/div[@class=&quot;va pd10&quot;]/h1 | /html/body/div[@class=&quot;RC mt0&quot;]/div[@class=&quot;HC&quot;]/div[@class=&quot;hclc&quot;]/div[@class=&quot;bd&quot;]/div[@class=&quot;vb&quot; and @id=&quot;pzoom&quot;] | /html/body/div[@class=&quot;RC mt0&quot;]/div[@class=&quot;HC&quot;]/div[@class=&quot;hclc&quot;]/div[@class=&quot;hc3&quot;]/ul/li/a | /html/body/div[@class=&quot;RC mt0&quot;]/div[@class=&quot;HC&quot;]/div[@class=&quot;hclc&quot;]/div[@class=&quot;hc4&quot;]/div[@class=&quot;L4&quot;]/a | /html/body/div[@class=&quot;RC mt0&quot;]/div[@class=&quot;HC&quot;]/div[@class=&quot;hcr&quot;]/table[@class=&quot;bd nbdt&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@class=&quot;hc3 nbd pdt10 pdb0 tc fs14&quot;]/a/strong | /html/body/div[@class=&quot;RC mt0&quot;]/div[@class=&quot;HC&quot;]/div[@class=&quot;hcr&quot;]/table[@class=&quot;bd nbdt&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@class=&quot;hc3 tc nbd fs12&quot;]/h6[@class=&quot;fn&quot;] | /html/body/div[@class=&quot;RC mt0&quot;]/div[@class=&quot;HC&quot;]/div[@class=&quot;hcr&quot;]/div[@class=&quot;hc3 fs12&quot;]/ul[@class=&quot;mt10&quot;]/li/a | /html/body/div[@class=&quot;RC mt0&quot;]/div[@class=&quot;HC&quot;]/div[@class=&quot;hcr&quot;]/div[@class=&quot;hc4 nbdb&quot;]/div[@class=&quot;L2&quot;]/a | /html/body/div[@class=&quot;RC mt0&quot;]/div[@class=&quot;HC&quot;]/div[@class=&quot;hcr&quot;]/div[@class=&quot;hc3 pdt0 fs12&quot;]/ul/li/a | /html/body/div[@class=&quot;RC mt0&quot;]/div[@class=&quot;HC&quot;]/div[@class=&quot;hcr&quot;]/div[@class=&quot;hc4&quot;]/div[@class=&quot;L2&quot;]/a"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
京华时报
paper_people_com_cn_26991
http://paper.people.com.cn/jhsb/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div/div[@class=&quot;list_t&quot;]/div[@class=&quot;list_l&quot;]/div[@class=&quot;l_c&quot;]"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="div/ul/li[@class=&quot;one&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string('')"/> 
          <xsl:variable name="source" select="string('')"/>
          <xsl:variable name="attr" select="string('')"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;lai&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1 | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;c_c&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@id=&quot;articlecontent&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
人民日报
paper_people_com_cn_26981
http://paper.people.com.cn/rmrb/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div[@class=&quot;div_bg&quot;]/div[@class=&quot;div_center&quot;]/div/div/div/div/div/div[@class=&quot;div_zfa&quot;]/a"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table[@class=&quot;ft12h&quot; and @align=&quot;left&quot;]/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@align=&quot;left&quot;]/table/tbody/tr/td/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string('')"/> 
          <xsl:variable name="source" select="string('')"/>
          <xsl:variable name="attr" select="string('')"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;lai&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1 | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;c_c&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@id=&quot;articlecontent&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
国际金融报
paper_people_com_cn_27591
http://paper.people.com.cn/gjjrb/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div/div[@class=&quot;list_t&quot;]/div[@class=&quot;list_l&quot;]/div[@class=&quot;l_c&quot;]"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="div/ul/li[@class=&quot;one&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string('')"/> 
          <xsl:variable name="source" select="string('')"/>
          <xsl:variable name="attr" select="string('')"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;lai&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1 | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;c_c&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@id=&quot;articlecontent&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
扬州晚报
yzwb_com_27175
http://yzwb-szb.yznews.com.cn/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id=&quot;pageLink&quot;]"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;middle&quot; and @align=&quot;center&quot;]/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot; and @align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
