/* soapCrawlerCtrlSoapBindingProxy.h
   Generated by gSOAP 2.7.15 from CrawlerCtrl.h
   Copyright(C) 2000-2009, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef soapCrawlerCtrlSoapBindingProxy_H
#define soapCrawlerCtrlSoapBindingProxy_H
#include "soapH.h"

class SOAP_CMAC CrawlerCtrlSoapBindingProxy : public soap
{ public:
	/// Endpoint URL of service 'CrawlerCtrlSoapBindingProxy' (change as needed)
	const char *soap_endpoint;
	/// Constructor
	CrawlerCtrlSoapBindingProxy();
	/// Constructor with copy of another engine state
	CrawlerCtrlSoapBindingProxy(const struct soap&);
	/// Constructor with engine input+output mode control
	CrawlerCtrlSoapBindingProxy(soap_mode iomode);
	/// Constructor with engine input and output mode control
	CrawlerCtrlSoapBindingProxy(soap_mode imode, soap_mode omode);
	/// Destructor frees deserialized data
	virtual	~CrawlerCtrlSoapBindingProxy();
	/// Initializer used by constructors
	virtual	void CrawlerCtrlSoapBindingProxy_init(soap_mode imode, soap_mode omode);
	/// Delete all deserialized data (uses soap_destroy and soap_end)
	virtual	void destroy();
	/// Disables and removes SOAP Header from message
	virtual	void soap_noheader();
	/// Get SOAP Fault structure (NULL when absent)
	virtual	const SOAP_ENV__Fault *soap_fault();
	/// Get SOAP Fault string (NULL when absent)
	virtual	const char *soap_fault_string();
	/// Get SOAP Fault detail as string (NULL when absent)
	virtual	const char *soap_fault_detail();
	/// Force close connection (normally automatic, except for send_X ops)
	virtual	int soap_close_socket();
	/// Print fault
	virtual	void soap_print_fault(FILE*);
#ifndef WITH_LEAN
	/// Print fault to stream
	virtual	void soap_stream_fault(std::ostream&);
	/// Put fault into buffer
	virtual	char *soap_sprint_fault(char *buf, size_t len);
#endif

	/// Web service operation 'add' (returns error code or SOAP_OK)
	virtual	int add(_nyapc1__add *nyapc1__add, _nyapc1__addResponse *nyapc1__addResponse);

	/// Web service operation 'getVersion' (returns error code or SOAP_OK)
	virtual	int getVersion(_nyapc1__getVersion *nyapc1__getVersion, _nyapc1__getVersionResponse *nyapc1__getVersionResponse);

	/// Web service operation 'getJob' (returns error code or SOAP_OK)
	virtual	int getJob(_nyapc1__getJob *nyapc1__getJob, _nyapc1__getJobResponse *nyapc1__getJobResponse);

	/// Web service operation 'addJob' (returns error code or SOAP_OK)
	virtual	int addJob(_nyapc1__addJob *nyapc1__addJob, _nyapc1__addJobResponse *nyapc1__addJobResponse);

	/// Web service operation 'hasTask' (returns error code or SOAP_OK)
	virtual	int hasTask(_nyapc1__hasTask *nyapc1__hasTask, _nyapc1__hasTaskResponse *nyapc1__hasTaskResponse);

	/// Web service operation 'updateJob' (returns error code or SOAP_OK)
	virtual	int updateJob(_nyapc1__updateJob *nyapc1__updateJob, _nyapc1__updateJobResponse *nyapc1__updateJobResponse);

	/// Web service operation 'getWrapper' (returns error code or SOAP_OK)
	virtual	int getWrapper(_nyapc1__getWrapper *nyapc1__getWrapper, _nyapc1__getWrapperResponse *nyapc1__getWrapperResponse);

	/// Web service operation 'addWrapper' (returns error code or SOAP_OK)
	virtual	int addWrapper(_nyapc1__addWrapper *nyapc1__addWrapper, _nyapc1__addWrapperResponse *nyapc1__addWrapperResponse);

	/// Web service operation 'getTask' (returns error code or SOAP_OK)
	virtual	int getTask(_nyapc1__getTask *nyapc1__getTask, _nyapc1__getTaskResponse *nyapc1__getTaskResponse);

	/// Web service operation 'getWrapTask' (returns error code or SOAP_OK)
	virtual	int getWrapTask(_nyapc1__getWrapTask *nyapc1__getWrapTask, _nyapc1__getWrapTaskResponse *nyapc1__getWrapTaskResponse);

	/// Web service operation 'takeWrapTask' (returns error code or SOAP_OK)
	virtual	int takeWrapTask(_nyapc1__takeWrapTask *nyapc1__takeWrapTask, _nyapc1__takeWrapTaskResponse *nyapc1__takeWrapTaskResponse);

	/// Web service operation 'getWrapInvalidTask' (returns error code or SOAP_OK)
	virtual	int getWrapInvalidTask(_nyapc1__getWrapInvalidTask *nyapc1__getWrapInvalidTask, _nyapc1__getWrapInvalidTaskResponse *nyapc1__getWrapInvalidTaskResponse);

	/// Web service operation 'updateWrapper' (returns error code or SOAP_OK)
	virtual	int updateWrapper(_nyapc1__updateWrapper *nyapc1__updateWrapper, _nyapc1__updateWrapperResponse *nyapc1__updateWrapperResponse);

	/// Web service operation 'updateWrapperCheckOk' (returns error code or SOAP_OK)
	virtual	int updateWrapperCheckOk(_nyapc1__updateWrapperCheckOk *nyapc1__updateWrapperCheckOk, _nyapc1__updateWrapperCheckOkResponse *nyapc1__updateWrapperCheckOkResponse);

	/// Web service operation 'getStat' (returns error code or SOAP_OK)
	virtual	int getStat(_nyapc1__getStat *nyapc1__getStat, _nyapc1__getStatResponse *nyapc1__getStatResponse);

	/// Web service operation 'putResult' (returns error code or SOAP_OK)
	virtual	int putResult(_nyapc1__putResult *nyapc1__putResult, _nyapc1__putResultResponse *nyapc1__putResultResponse);

	/// Web service operation 'getJobID' (returns error code or SOAP_OK)
	virtual	int getJobID(_nyapc1__getJobID *nyapc1__getJobID, _nyapc1__getJobIDResponse *nyapc1__getJobIDResponse);

	/// Web service operation 'getJobs' (returns error code or SOAP_OK)
	virtual	int getJobs(_nyapc1__getJobs *nyapc1__getJobs, _nyapc1__getJobsResponse *nyapc1__getJobsResponse);

	/// Web service operation 'getJobsWrapStatInvalid' (returns error code or SOAP_OK)
	virtual	int getJobsWrapStatInvalid(_nyapc1__getJobsWrapStatInvalid *nyapc1__getJobsWrapStatInvalid, _nyapc1__getJobsWrapStatInvalidResponse *nyapc1__getJobsWrapStatInvalidResponse);

	/// Web service operation 'getWrapGen' (returns error code or SOAP_OK)
	virtual	int getWrapGen(_nyapc1__getWrapGen *nyapc1__getWrapGen, _nyapc1__getWrapGenResponse *nyapc1__getWrapGenResponse);

	/// Web service operation 'updateWrapGen' (returns error code or SOAP_OK)
	virtual	int updateWrapGen(_nyapc1__updateWrapGen *nyapc1__updateWrapGen, _nyapc1__updateWrapGenResponse *nyapc1__updateWrapGenResponse);

	/// Web service operation 'getTaskQueue' (returns error code or SOAP_OK)
	virtual	int getTaskQueue(_nyapc1__getTaskQueue *nyapc1__getTaskQueue, _nyapc1__getTaskQueueResponse *nyapc1__getTaskQueueResponse);

	/// Web service operation 'getWrapTaskQueue' (returns error code or SOAP_OK)
	virtual	int getWrapTaskQueue(_nyapc1__getWrapTaskQueue *nyapc1__getWrapTaskQueue, _nyapc1__getWrapTaskQueueResponse *nyapc1__getWrapTaskQueueResponse);

	/// Web service operation 'takeTask' (returns error code or SOAP_OK)
	virtual	int takeTask(_nyapc1__takeTask *nyapc1__takeTask, _nyapc1__takeTaskResponse *nyapc1__takeTaskResponse);

	/// Web service operation 'getTaskByJobId' (returns error code or SOAP_OK)
	virtual	int getTaskByJobId(_nyapc1__getTaskByJobId *nyapc1__getTaskByJobId, _nyapc1__getTaskByJobIdResponse *nyapc1__getTaskByJobIdResponse);

	/// Web service operation 'delJob' (returns error code or SOAP_OK)
	virtual	int delJob(_nyapc1__delJob *nyapc1__delJob, _nyapc1__delJobResponse *nyapc1__delJobResponse);

	/// Web service operation 'updateJobUrl' (returns error code or SOAP_OK)
	virtual	int updateJobUrl(_nyapc1__updateJobUrl *nyapc1__updateJobUrl, _nyapc1__updateJobUrlResponse *nyapc1__updateJobUrlResponse);

	/// Web service operation 'getWrapInvalidTaskByJobId' (returns error code or SOAP_OK)
	virtual	int getWrapInvalidTaskByJobId(_nyapc1__getWrapInvalidTaskByJobId *nyapc1__getWrapInvalidTaskByJobId, _nyapc1__getWrapInvalidTaskByJobIdResponse *nyapc1__getWrapInvalidTaskByJobIdResponse);

	/// Web service operation 'getWrapId' (returns error code or SOAP_OK)
	virtual	int getWrapId(_nyapc1__getWrapId *nyapc1__getWrapId, _nyapc1__getWrapIdResponse *nyapc1__getWrapIdResponse);

	/// Web service operation 'getWraptype' (returns error code or SOAP_OK)
	virtual	int getWraptype(_nyapc1__getWraptype *nyapc1__getWraptype, _nyapc1__getWraptypeResponse *nyapc1__getWraptypeResponse);
};
#endif
