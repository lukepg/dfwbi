/* soapH.h
   Generated by gSOAP 2.7.15 from CrawlerCtrl.h
   Copyright(C) 2000-2009, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifndef WITH_NOIDREF

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 void * SOAP_FMAC4 soap_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 soap_fdelete(struct soap_clist*);
SOAP_FMAC3 void* SOAP_FMAC4 soap_class_id_enter(struct soap*, const char*, void*, int, size_t, const char*, const char*);

SOAP_FMAC3 void* SOAP_FMAC4 soap_container_id_forward(struct soap*, const char*, void*, size_t, int, int, size_t, unsigned int);

SOAP_FMAC3 void SOAP_FMAC4 soap_container_insert(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

#define soap_write_byte(soap, data) ( soap_begin_send(soap) || (soap_serialize_byte(soap, data), 0) || soap_put_byte(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

#define soap_write_int(soap, data) ( soap_begin_send(soap) || (soap_serialize_int(soap, data), 0) || soap_put_int(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef SOAP_TYPE_bool
#define SOAP_TYPE_bool (75)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_bool(struct soap*, bool *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_bool(struct soap*, const char*, int, const bool *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_bool2s(struct soap*, bool);
SOAP_FMAC3 bool * SOAP_FMAC4 soap_in_bool(struct soap*, const char*, bool *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2bool(struct soap*, const char*, bool *);

#define soap_write_bool(soap, data) ( soap_begin_send(soap) || (soap_serialize_bool(soap, data), 0) || soap_put_bool(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_bool(struct soap*, const bool *, const char*, const char*);

#define soap_read_bool(soap, data) ( soap_begin_recv(soap) || !soap_get_bool(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 bool * SOAP_FMAC4 soap_get_bool(struct soap*, bool *, const char*, const char*);

#ifndef SOAP_TYPE_std__string
#define SOAP_TYPE_std__string (71)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__string(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__string(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__string(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_std__string(struct soap*, const char*, std::string*, const char*);

#define soap_write_std__string(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_std__string(struct soap*, const std::string *, const char*, const char*);

#define soap_read_std__string(soap, data) ( soap_begin_recv(soap) || !soap_get_std__string(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_std__string(struct soap*, std::string *, const char*, const char*);

#define soap_new_std__string(soap, n) ::soap_instantiate_std__string(soap, n, NULL, NULL, NULL)


#define soap_delete_std__string(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::string * SOAP_FMAC2 soap_instantiate_std__string(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__string(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_nyapc2__AttSuperClass
#define SOAP_TYPE_nyapc2__AttSuperClass (70)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_nyapc2__AttSuperClass(struct soap*, const char*, int, const nyapc2__AttSuperClass *, const char*);
SOAP_FMAC3 nyapc2__AttSuperClass * SOAP_FMAC4 soap_in_nyapc2__AttSuperClass(struct soap*, const char*, nyapc2__AttSuperClass *, const char*);

#define soap_write_nyapc2__AttSuperClass(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read_nyapc2__AttSuperClass(soap, data) ( soap_begin_recv(soap) || !soap_get_nyapc2__AttSuperClass(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 nyapc2__AttSuperClass * SOAP_FMAC4 soap_get_nyapc2__AttSuperClass(struct soap*, nyapc2__AttSuperClass *, const char*, const char*);

#define soap_new_nyapc2__AttSuperClass(soap, n) ::soap_instantiate_nyapc2__AttSuperClass(soap, n, NULL, NULL, NULL)


#define soap_delete_nyapc2__AttSuperClass(soap, p) soap_delete(soap, p)

SOAP_FMAC1 nyapc2__AttSuperClass * SOAP_FMAC2 soap_instantiate_nyapc2__AttSuperClass(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_nyapc2__AttSuperClass(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__nyapc1__getWraptypeResponse
#define SOAP_TYPE__nyapc1__getWraptypeResponse (69)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__nyapc1__getWraptypeResponse(struct soap*, const char*, int, const _nyapc1__getWraptypeResponse *, const char*);
SOAP_FMAC3 _nyapc1__getWraptypeResponse * SOAP_FMAC4 soap_in__nyapc1__getWraptypeResponse(struct soap*, const char*, _nyapc1__getWraptypeResponse *, const char*);

#define soap_write__nyapc1__getWraptypeResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__nyapc1__getWraptypeResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__nyapc1__getWraptypeResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__getWraptypeResponse * SOAP_FMAC4 soap_get__nyapc1__getWraptypeResponse(struct soap*, _nyapc1__getWraptypeResponse *, const char*, const char*);

#define soap_new__nyapc1__getWraptypeResponse(soap, n) ::soap_instantiate__nyapc1__getWraptypeResponse(soap, n, NULL, NULL, NULL)


#define soap_delete__nyapc1__getWraptypeResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _nyapc1__getWraptypeResponse * SOAP_FMAC2 soap_instantiate__nyapc1__getWraptypeResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__nyapc1__getWraptypeResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__nyapc1__getWraptype
#define SOAP_TYPE__nyapc1__getWraptype (68)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__nyapc1__getWraptype(struct soap*, const char*, int, const _nyapc1__getWraptype *, const char*);
SOAP_FMAC3 _nyapc1__getWraptype * SOAP_FMAC4 soap_in__nyapc1__getWraptype(struct soap*, const char*, _nyapc1__getWraptype *, const char*);

#define soap_write__nyapc1__getWraptype(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__nyapc1__getWraptype(soap, data) ( soap_begin_recv(soap) || !soap_get__nyapc1__getWraptype(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__getWraptype * SOAP_FMAC4 soap_get__nyapc1__getWraptype(struct soap*, _nyapc1__getWraptype *, const char*, const char*);

#define soap_new__nyapc1__getWraptype(soap, n) ::soap_instantiate__nyapc1__getWraptype(soap, n, NULL, NULL, NULL)


#define soap_delete__nyapc1__getWraptype(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _nyapc1__getWraptype * SOAP_FMAC2 soap_instantiate__nyapc1__getWraptype(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__nyapc1__getWraptype(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__nyapc1__getWrapIdResponse
#define SOAP_TYPE__nyapc1__getWrapIdResponse (67)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__nyapc1__getWrapIdResponse(struct soap*, const char*, int, const _nyapc1__getWrapIdResponse *, const char*);
SOAP_FMAC3 _nyapc1__getWrapIdResponse * SOAP_FMAC4 soap_in__nyapc1__getWrapIdResponse(struct soap*, const char*, _nyapc1__getWrapIdResponse *, const char*);

#define soap_write__nyapc1__getWrapIdResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__nyapc1__getWrapIdResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__nyapc1__getWrapIdResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__getWrapIdResponse * SOAP_FMAC4 soap_get__nyapc1__getWrapIdResponse(struct soap*, _nyapc1__getWrapIdResponse *, const char*, const char*);

#define soap_new__nyapc1__getWrapIdResponse(soap, n) ::soap_instantiate__nyapc1__getWrapIdResponse(soap, n, NULL, NULL, NULL)


#define soap_delete__nyapc1__getWrapIdResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _nyapc1__getWrapIdResponse * SOAP_FMAC2 soap_instantiate__nyapc1__getWrapIdResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__nyapc1__getWrapIdResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__nyapc1__getWrapId
#define SOAP_TYPE__nyapc1__getWrapId (66)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__nyapc1__getWrapId(struct soap*, const char*, int, const _nyapc1__getWrapId *, const char*);
SOAP_FMAC3 _nyapc1__getWrapId * SOAP_FMAC4 soap_in__nyapc1__getWrapId(struct soap*, const char*, _nyapc1__getWrapId *, const char*);

#define soap_write__nyapc1__getWrapId(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__nyapc1__getWrapId(soap, data) ( soap_begin_recv(soap) || !soap_get__nyapc1__getWrapId(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__getWrapId * SOAP_FMAC4 soap_get__nyapc1__getWrapId(struct soap*, _nyapc1__getWrapId *, const char*, const char*);

#define soap_new__nyapc1__getWrapId(soap, n) ::soap_instantiate__nyapc1__getWrapId(soap, n, NULL, NULL, NULL)


#define soap_delete__nyapc1__getWrapId(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _nyapc1__getWrapId * SOAP_FMAC2 soap_instantiate__nyapc1__getWrapId(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__nyapc1__getWrapId(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__nyapc1__getWrapInvalidTaskByJobIdResponse
#define SOAP_TYPE__nyapc1__getWrapInvalidTaskByJobIdResponse (65)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__nyapc1__getWrapInvalidTaskByJobIdResponse(struct soap*, const char*, int, const _nyapc1__getWrapInvalidTaskByJobIdResponse *, const char*);
SOAP_FMAC3 _nyapc1__getWrapInvalidTaskByJobIdResponse * SOAP_FMAC4 soap_in__nyapc1__getWrapInvalidTaskByJobIdResponse(struct soap*, const char*, _nyapc1__getWrapInvalidTaskByJobIdResponse *, const char*);

#define soap_write__nyapc1__getWrapInvalidTaskByJobIdResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__nyapc1__getWrapInvalidTaskByJobIdResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__nyapc1__getWrapInvalidTaskByJobIdResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__getWrapInvalidTaskByJobIdResponse * SOAP_FMAC4 soap_get__nyapc1__getWrapInvalidTaskByJobIdResponse(struct soap*, _nyapc1__getWrapInvalidTaskByJobIdResponse *, const char*, const char*);

#define soap_new__nyapc1__getWrapInvalidTaskByJobIdResponse(soap, n) ::soap_instantiate__nyapc1__getWrapInvalidTaskByJobIdResponse(soap, n, NULL, NULL, NULL)


#define soap_delete__nyapc1__getWrapInvalidTaskByJobIdResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _nyapc1__getWrapInvalidTaskByJobIdResponse * SOAP_FMAC2 soap_instantiate__nyapc1__getWrapInvalidTaskByJobIdResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__nyapc1__getWrapInvalidTaskByJobIdResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__nyapc1__getWrapInvalidTaskByJobId
#define SOAP_TYPE__nyapc1__getWrapInvalidTaskByJobId (64)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__nyapc1__getWrapInvalidTaskByJobId(struct soap*, const char*, int, const _nyapc1__getWrapInvalidTaskByJobId *, const char*);
SOAP_FMAC3 _nyapc1__getWrapInvalidTaskByJobId * SOAP_FMAC4 soap_in__nyapc1__getWrapInvalidTaskByJobId(struct soap*, const char*, _nyapc1__getWrapInvalidTaskByJobId *, const char*);

#define soap_write__nyapc1__getWrapInvalidTaskByJobId(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__nyapc1__getWrapInvalidTaskByJobId(soap, data) ( soap_begin_recv(soap) || !soap_get__nyapc1__getWrapInvalidTaskByJobId(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__getWrapInvalidTaskByJobId * SOAP_FMAC4 soap_get__nyapc1__getWrapInvalidTaskByJobId(struct soap*, _nyapc1__getWrapInvalidTaskByJobId *, const char*, const char*);

#define soap_new__nyapc1__getWrapInvalidTaskByJobId(soap, n) ::soap_instantiate__nyapc1__getWrapInvalidTaskByJobId(soap, n, NULL, NULL, NULL)


#define soap_delete__nyapc1__getWrapInvalidTaskByJobId(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _nyapc1__getWrapInvalidTaskByJobId * SOAP_FMAC2 soap_instantiate__nyapc1__getWrapInvalidTaskByJobId(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__nyapc1__getWrapInvalidTaskByJobId(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__nyapc1__updateJobUrlResponse
#define SOAP_TYPE__nyapc1__updateJobUrlResponse (63)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__nyapc1__updateJobUrlResponse(struct soap*, const char*, int, const _nyapc1__updateJobUrlResponse *, const char*);
SOAP_FMAC3 _nyapc1__updateJobUrlResponse * SOAP_FMAC4 soap_in__nyapc1__updateJobUrlResponse(struct soap*, const char*, _nyapc1__updateJobUrlResponse *, const char*);

#define soap_write__nyapc1__updateJobUrlResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__nyapc1__updateJobUrlResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__nyapc1__updateJobUrlResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__updateJobUrlResponse * SOAP_FMAC4 soap_get__nyapc1__updateJobUrlResponse(struct soap*, _nyapc1__updateJobUrlResponse *, const char*, const char*);

#define soap_new__nyapc1__updateJobUrlResponse(soap, n) ::soap_instantiate__nyapc1__updateJobUrlResponse(soap, n, NULL, NULL, NULL)


#define soap_delete__nyapc1__updateJobUrlResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _nyapc1__updateJobUrlResponse * SOAP_FMAC2 soap_instantiate__nyapc1__updateJobUrlResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__nyapc1__updateJobUrlResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__nyapc1__updateJobUrl
#define SOAP_TYPE__nyapc1__updateJobUrl (62)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__nyapc1__updateJobUrl(struct soap*, const char*, int, const _nyapc1__updateJobUrl *, const char*);
SOAP_FMAC3 _nyapc1__updateJobUrl * SOAP_FMAC4 soap_in__nyapc1__updateJobUrl(struct soap*, const char*, _nyapc1__updateJobUrl *, const char*);

#define soap_write__nyapc1__updateJobUrl(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__nyapc1__updateJobUrl(soap, data) ( soap_begin_recv(soap) || !soap_get__nyapc1__updateJobUrl(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__updateJobUrl * SOAP_FMAC4 soap_get__nyapc1__updateJobUrl(struct soap*, _nyapc1__updateJobUrl *, const char*, const char*);

#define soap_new__nyapc1__updateJobUrl(soap, n) ::soap_instantiate__nyapc1__updateJobUrl(soap, n, NULL, NULL, NULL)


#define soap_delete__nyapc1__updateJobUrl(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _nyapc1__updateJobUrl * SOAP_FMAC2 soap_instantiate__nyapc1__updateJobUrl(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__nyapc1__updateJobUrl(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__nyapc1__delJobResponse
#define SOAP_TYPE__nyapc1__delJobResponse (61)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__nyapc1__delJobResponse(struct soap*, const char*, int, const _nyapc1__delJobResponse *, const char*);
SOAP_FMAC3 _nyapc1__delJobResponse * SOAP_FMAC4 soap_in__nyapc1__delJobResponse(struct soap*, const char*, _nyapc1__delJobResponse *, const char*);

#define soap_write__nyapc1__delJobResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__nyapc1__delJobResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__nyapc1__delJobResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__delJobResponse * SOAP_FMAC4 soap_get__nyapc1__delJobResponse(struct soap*, _nyapc1__delJobResponse *, const char*, const char*);

#define soap_new__nyapc1__delJobResponse(soap, n) ::soap_instantiate__nyapc1__delJobResponse(soap, n, NULL, NULL, NULL)


#define soap_delete__nyapc1__delJobResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _nyapc1__delJobResponse * SOAP_FMAC2 soap_instantiate__nyapc1__delJobResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__nyapc1__delJobResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__nyapc1__delJob
#define SOAP_TYPE__nyapc1__delJob (60)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__nyapc1__delJob(struct soap*, const char*, int, const _nyapc1__delJob *, const char*);
SOAP_FMAC3 _nyapc1__delJob * SOAP_FMAC4 soap_in__nyapc1__delJob(struct soap*, const char*, _nyapc1__delJob *, const char*);

#define soap_write__nyapc1__delJob(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__nyapc1__delJob(soap, data) ( soap_begin_recv(soap) || !soap_get__nyapc1__delJob(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__delJob * SOAP_FMAC4 soap_get__nyapc1__delJob(struct soap*, _nyapc1__delJob *, const char*, const char*);

#define soap_new__nyapc1__delJob(soap, n) ::soap_instantiate__nyapc1__delJob(soap, n, NULL, NULL, NULL)


#define soap_delete__nyapc1__delJob(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _nyapc1__delJob * SOAP_FMAC2 soap_instantiate__nyapc1__delJob(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__nyapc1__delJob(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__nyapc1__getTaskByJobIdResponse
#define SOAP_TYPE__nyapc1__getTaskByJobIdResponse (59)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__nyapc1__getTaskByJobIdResponse(struct soap*, const char*, int, const _nyapc1__getTaskByJobIdResponse *, const char*);
SOAP_FMAC3 _nyapc1__getTaskByJobIdResponse * SOAP_FMAC4 soap_in__nyapc1__getTaskByJobIdResponse(struct soap*, const char*, _nyapc1__getTaskByJobIdResponse *, const char*);

#define soap_write__nyapc1__getTaskByJobIdResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__nyapc1__getTaskByJobIdResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__nyapc1__getTaskByJobIdResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__getTaskByJobIdResponse * SOAP_FMAC4 soap_get__nyapc1__getTaskByJobIdResponse(struct soap*, _nyapc1__getTaskByJobIdResponse *, const char*, const char*);

#define soap_new__nyapc1__getTaskByJobIdResponse(soap, n) ::soap_instantiate__nyapc1__getTaskByJobIdResponse(soap, n, NULL, NULL, NULL)


#define soap_delete__nyapc1__getTaskByJobIdResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _nyapc1__getTaskByJobIdResponse * SOAP_FMAC2 soap_instantiate__nyapc1__getTaskByJobIdResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__nyapc1__getTaskByJobIdResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__nyapc1__getTaskByJobId
#define SOAP_TYPE__nyapc1__getTaskByJobId (58)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__nyapc1__getTaskByJobId(struct soap*, const char*, int, const _nyapc1__getTaskByJobId *, const char*);
SOAP_FMAC3 _nyapc1__getTaskByJobId * SOAP_FMAC4 soap_in__nyapc1__getTaskByJobId(struct soap*, const char*, _nyapc1__getTaskByJobId *, const char*);

#define soap_write__nyapc1__getTaskByJobId(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__nyapc1__getTaskByJobId(soap, data) ( soap_begin_recv(soap) || !soap_get__nyapc1__getTaskByJobId(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__getTaskByJobId * SOAP_FMAC4 soap_get__nyapc1__getTaskByJobId(struct soap*, _nyapc1__getTaskByJobId *, const char*, const char*);

#define soap_new__nyapc1__getTaskByJobId(soap, n) ::soap_instantiate__nyapc1__getTaskByJobId(soap, n, NULL, NULL, NULL)


#define soap_delete__nyapc1__getTaskByJobId(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _nyapc1__getTaskByJobId * SOAP_FMAC2 soap_instantiate__nyapc1__getTaskByJobId(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__nyapc1__getTaskByJobId(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__nyapc1__takeTaskResponse
#define SOAP_TYPE__nyapc1__takeTaskResponse (57)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__nyapc1__takeTaskResponse(struct soap*, const char*, int, const _nyapc1__takeTaskResponse *, const char*);
SOAP_FMAC3 _nyapc1__takeTaskResponse * SOAP_FMAC4 soap_in__nyapc1__takeTaskResponse(struct soap*, const char*, _nyapc1__takeTaskResponse *, const char*);

#define soap_write__nyapc1__takeTaskResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__nyapc1__takeTaskResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__nyapc1__takeTaskResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__takeTaskResponse * SOAP_FMAC4 soap_get__nyapc1__takeTaskResponse(struct soap*, _nyapc1__takeTaskResponse *, const char*, const char*);

#define soap_new__nyapc1__takeTaskResponse(soap, n) ::soap_instantiate__nyapc1__takeTaskResponse(soap, n, NULL, NULL, NULL)


#define soap_delete__nyapc1__takeTaskResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _nyapc1__takeTaskResponse * SOAP_FMAC2 soap_instantiate__nyapc1__takeTaskResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__nyapc1__takeTaskResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__nyapc1__takeTask
#define SOAP_TYPE__nyapc1__takeTask (56)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__nyapc1__takeTask(struct soap*, const char*, int, const _nyapc1__takeTask *, const char*);
SOAP_FMAC3 _nyapc1__takeTask * SOAP_FMAC4 soap_in__nyapc1__takeTask(struct soap*, const char*, _nyapc1__takeTask *, const char*);

#define soap_write__nyapc1__takeTask(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__nyapc1__takeTask(soap, data) ( soap_begin_recv(soap) || !soap_get__nyapc1__takeTask(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__takeTask * SOAP_FMAC4 soap_get__nyapc1__takeTask(struct soap*, _nyapc1__takeTask *, const char*, const char*);

#define soap_new__nyapc1__takeTask(soap, n) ::soap_instantiate__nyapc1__takeTask(soap, n, NULL, NULL, NULL)


#define soap_delete__nyapc1__takeTask(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _nyapc1__takeTask * SOAP_FMAC2 soap_instantiate__nyapc1__takeTask(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__nyapc1__takeTask(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__nyapc1__getWrapTaskQueueResponse
#define SOAP_TYPE__nyapc1__getWrapTaskQueueResponse (55)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__nyapc1__getWrapTaskQueueResponse(struct soap*, const char*, int, const _nyapc1__getWrapTaskQueueResponse *, const char*);
SOAP_FMAC3 _nyapc1__getWrapTaskQueueResponse * SOAP_FMAC4 soap_in__nyapc1__getWrapTaskQueueResponse(struct soap*, const char*, _nyapc1__getWrapTaskQueueResponse *, const char*);

#define soap_write__nyapc1__getWrapTaskQueueResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__nyapc1__getWrapTaskQueueResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__nyapc1__getWrapTaskQueueResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__getWrapTaskQueueResponse * SOAP_FMAC4 soap_get__nyapc1__getWrapTaskQueueResponse(struct soap*, _nyapc1__getWrapTaskQueueResponse *, const char*, const char*);

#define soap_new__nyapc1__getWrapTaskQueueResponse(soap, n) ::soap_instantiate__nyapc1__getWrapTaskQueueResponse(soap, n, NULL, NULL, NULL)


#define soap_delete__nyapc1__getWrapTaskQueueResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _nyapc1__getWrapTaskQueueResponse * SOAP_FMAC2 soap_instantiate__nyapc1__getWrapTaskQueueResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__nyapc1__getWrapTaskQueueResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__nyapc1__getWrapTaskQueue
#define SOAP_TYPE__nyapc1__getWrapTaskQueue (54)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__nyapc1__getWrapTaskQueue(struct soap*, const char*, int, const _nyapc1__getWrapTaskQueue *, const char*);
SOAP_FMAC3 _nyapc1__getWrapTaskQueue * SOAP_FMAC4 soap_in__nyapc1__getWrapTaskQueue(struct soap*, const char*, _nyapc1__getWrapTaskQueue *, const char*);

#define soap_write__nyapc1__getWrapTaskQueue(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__nyapc1__getWrapTaskQueue(soap, data) ( soap_begin_recv(soap) || !soap_get__nyapc1__getWrapTaskQueue(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__getWrapTaskQueue * SOAP_FMAC4 soap_get__nyapc1__getWrapTaskQueue(struct soap*, _nyapc1__getWrapTaskQueue *, const char*, const char*);

#define soap_new__nyapc1__getWrapTaskQueue(soap, n) ::soap_instantiate__nyapc1__getWrapTaskQueue(soap, n, NULL, NULL, NULL)


#define soap_delete__nyapc1__getWrapTaskQueue(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _nyapc1__getWrapTaskQueue * SOAP_FMAC2 soap_instantiate__nyapc1__getWrapTaskQueue(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__nyapc1__getWrapTaskQueue(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__nyapc1__getTaskQueueResponse
#define SOAP_TYPE__nyapc1__getTaskQueueResponse (53)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__nyapc1__getTaskQueueResponse(struct soap*, const char*, int, const _nyapc1__getTaskQueueResponse *, const char*);
SOAP_FMAC3 _nyapc1__getTaskQueueResponse * SOAP_FMAC4 soap_in__nyapc1__getTaskQueueResponse(struct soap*, const char*, _nyapc1__getTaskQueueResponse *, const char*);

#define soap_write__nyapc1__getTaskQueueResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__nyapc1__getTaskQueueResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__nyapc1__getTaskQueueResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__getTaskQueueResponse * SOAP_FMAC4 soap_get__nyapc1__getTaskQueueResponse(struct soap*, _nyapc1__getTaskQueueResponse *, const char*, const char*);

#define soap_new__nyapc1__getTaskQueueResponse(soap, n) ::soap_instantiate__nyapc1__getTaskQueueResponse(soap, n, NULL, NULL, NULL)


#define soap_delete__nyapc1__getTaskQueueResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _nyapc1__getTaskQueueResponse * SOAP_FMAC2 soap_instantiate__nyapc1__getTaskQueueResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__nyapc1__getTaskQueueResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__nyapc1__getTaskQueue
#define SOAP_TYPE__nyapc1__getTaskQueue (52)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__nyapc1__getTaskQueue(struct soap*, const char*, int, const _nyapc1__getTaskQueue *, const char*);
SOAP_FMAC3 _nyapc1__getTaskQueue * SOAP_FMAC4 soap_in__nyapc1__getTaskQueue(struct soap*, const char*, _nyapc1__getTaskQueue *, const char*);

#define soap_write__nyapc1__getTaskQueue(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__nyapc1__getTaskQueue(soap, data) ( soap_begin_recv(soap) || !soap_get__nyapc1__getTaskQueue(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__getTaskQueue * SOAP_FMAC4 soap_get__nyapc1__getTaskQueue(struct soap*, _nyapc1__getTaskQueue *, const char*, const char*);

#define soap_new__nyapc1__getTaskQueue(soap, n) ::soap_instantiate__nyapc1__getTaskQueue(soap, n, NULL, NULL, NULL)


#define soap_delete__nyapc1__getTaskQueue(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _nyapc1__getTaskQueue * SOAP_FMAC2 soap_instantiate__nyapc1__getTaskQueue(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__nyapc1__getTaskQueue(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__nyapc1__updateWrapGenResponse
#define SOAP_TYPE__nyapc1__updateWrapGenResponse (51)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__nyapc1__updateWrapGenResponse(struct soap*, const char*, int, const _nyapc1__updateWrapGenResponse *, const char*);
SOAP_FMAC3 _nyapc1__updateWrapGenResponse * SOAP_FMAC4 soap_in__nyapc1__updateWrapGenResponse(struct soap*, const char*, _nyapc1__updateWrapGenResponse *, const char*);

#define soap_write__nyapc1__updateWrapGenResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__nyapc1__updateWrapGenResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__nyapc1__updateWrapGenResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__updateWrapGenResponse * SOAP_FMAC4 soap_get__nyapc1__updateWrapGenResponse(struct soap*, _nyapc1__updateWrapGenResponse *, const char*, const char*);

#define soap_new__nyapc1__updateWrapGenResponse(soap, n) ::soap_instantiate__nyapc1__updateWrapGenResponse(soap, n, NULL, NULL, NULL)


#define soap_delete__nyapc1__updateWrapGenResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _nyapc1__updateWrapGenResponse * SOAP_FMAC2 soap_instantiate__nyapc1__updateWrapGenResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__nyapc1__updateWrapGenResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__nyapc1__updateWrapGen
#define SOAP_TYPE__nyapc1__updateWrapGen (50)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__nyapc1__updateWrapGen(struct soap*, const char*, int, const _nyapc1__updateWrapGen *, const char*);
SOAP_FMAC3 _nyapc1__updateWrapGen * SOAP_FMAC4 soap_in__nyapc1__updateWrapGen(struct soap*, const char*, _nyapc1__updateWrapGen *, const char*);

#define soap_write__nyapc1__updateWrapGen(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__nyapc1__updateWrapGen(soap, data) ( soap_begin_recv(soap) || !soap_get__nyapc1__updateWrapGen(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__updateWrapGen * SOAP_FMAC4 soap_get__nyapc1__updateWrapGen(struct soap*, _nyapc1__updateWrapGen *, const char*, const char*);

#define soap_new__nyapc1__updateWrapGen(soap, n) ::soap_instantiate__nyapc1__updateWrapGen(soap, n, NULL, NULL, NULL)


#define soap_delete__nyapc1__updateWrapGen(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _nyapc1__updateWrapGen * SOAP_FMAC2 soap_instantiate__nyapc1__updateWrapGen(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__nyapc1__updateWrapGen(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__nyapc1__getWrapGenResponse
#define SOAP_TYPE__nyapc1__getWrapGenResponse (49)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__nyapc1__getWrapGenResponse(struct soap*, const char*, int, const _nyapc1__getWrapGenResponse *, const char*);
SOAP_FMAC3 _nyapc1__getWrapGenResponse * SOAP_FMAC4 soap_in__nyapc1__getWrapGenResponse(struct soap*, const char*, _nyapc1__getWrapGenResponse *, const char*);

#define soap_write__nyapc1__getWrapGenResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__nyapc1__getWrapGenResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__nyapc1__getWrapGenResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__getWrapGenResponse * SOAP_FMAC4 soap_get__nyapc1__getWrapGenResponse(struct soap*, _nyapc1__getWrapGenResponse *, const char*, const char*);

#define soap_new__nyapc1__getWrapGenResponse(soap, n) ::soap_instantiate__nyapc1__getWrapGenResponse(soap, n, NULL, NULL, NULL)


#define soap_delete__nyapc1__getWrapGenResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _nyapc1__getWrapGenResponse * SOAP_FMAC2 soap_instantiate__nyapc1__getWrapGenResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__nyapc1__getWrapGenResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__nyapc1__getWrapGen
#define SOAP_TYPE__nyapc1__getWrapGen (48)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__nyapc1__getWrapGen(struct soap*, const char*, int, const _nyapc1__getWrapGen *, const char*);
SOAP_FMAC3 _nyapc1__getWrapGen * SOAP_FMAC4 soap_in__nyapc1__getWrapGen(struct soap*, const char*, _nyapc1__getWrapGen *, const char*);

#define soap_write__nyapc1__getWrapGen(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__nyapc1__getWrapGen(soap, data) ( soap_begin_recv(soap) || !soap_get__nyapc1__getWrapGen(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__getWrapGen * SOAP_FMAC4 soap_get__nyapc1__getWrapGen(struct soap*, _nyapc1__getWrapGen *, const char*, const char*);

#define soap_new__nyapc1__getWrapGen(soap, n) ::soap_instantiate__nyapc1__getWrapGen(soap, n, NULL, NULL, NULL)


#define soap_delete__nyapc1__getWrapGen(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _nyapc1__getWrapGen * SOAP_FMAC2 soap_instantiate__nyapc1__getWrapGen(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__nyapc1__getWrapGen(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__nyapc1__getJobsWrapStatInvalidResponse
#define SOAP_TYPE__nyapc1__getJobsWrapStatInvalidResponse (47)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__nyapc1__getJobsWrapStatInvalidResponse(struct soap*, const char*, int, const _nyapc1__getJobsWrapStatInvalidResponse *, const char*);
SOAP_FMAC3 _nyapc1__getJobsWrapStatInvalidResponse * SOAP_FMAC4 soap_in__nyapc1__getJobsWrapStatInvalidResponse(struct soap*, const char*, _nyapc1__getJobsWrapStatInvalidResponse *, const char*);

#define soap_write__nyapc1__getJobsWrapStatInvalidResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__nyapc1__getJobsWrapStatInvalidResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__nyapc1__getJobsWrapStatInvalidResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__getJobsWrapStatInvalidResponse * SOAP_FMAC4 soap_get__nyapc1__getJobsWrapStatInvalidResponse(struct soap*, _nyapc1__getJobsWrapStatInvalidResponse *, const char*, const char*);

#define soap_new__nyapc1__getJobsWrapStatInvalidResponse(soap, n) ::soap_instantiate__nyapc1__getJobsWrapStatInvalidResponse(soap, n, NULL, NULL, NULL)


#define soap_delete__nyapc1__getJobsWrapStatInvalidResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _nyapc1__getJobsWrapStatInvalidResponse * SOAP_FMAC2 soap_instantiate__nyapc1__getJobsWrapStatInvalidResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__nyapc1__getJobsWrapStatInvalidResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__nyapc1__getJobsWrapStatInvalid
#define SOAP_TYPE__nyapc1__getJobsWrapStatInvalid (46)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__nyapc1__getJobsWrapStatInvalid(struct soap*, const char*, int, const _nyapc1__getJobsWrapStatInvalid *, const char*);
SOAP_FMAC3 _nyapc1__getJobsWrapStatInvalid * SOAP_FMAC4 soap_in__nyapc1__getJobsWrapStatInvalid(struct soap*, const char*, _nyapc1__getJobsWrapStatInvalid *, const char*);

#define soap_write__nyapc1__getJobsWrapStatInvalid(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__nyapc1__getJobsWrapStatInvalid(soap, data) ( soap_begin_recv(soap) || !soap_get__nyapc1__getJobsWrapStatInvalid(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__getJobsWrapStatInvalid * SOAP_FMAC4 soap_get__nyapc1__getJobsWrapStatInvalid(struct soap*, _nyapc1__getJobsWrapStatInvalid *, const char*, const char*);

#define soap_new__nyapc1__getJobsWrapStatInvalid(soap, n) ::soap_instantiate__nyapc1__getJobsWrapStatInvalid(soap, n, NULL, NULL, NULL)


#define soap_delete__nyapc1__getJobsWrapStatInvalid(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _nyapc1__getJobsWrapStatInvalid * SOAP_FMAC2 soap_instantiate__nyapc1__getJobsWrapStatInvalid(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__nyapc1__getJobsWrapStatInvalid(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__nyapc1__getJobsResponse
#define SOAP_TYPE__nyapc1__getJobsResponse (45)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__nyapc1__getJobsResponse(struct soap*, const char*, int, const _nyapc1__getJobsResponse *, const char*);
SOAP_FMAC3 _nyapc1__getJobsResponse * SOAP_FMAC4 soap_in__nyapc1__getJobsResponse(struct soap*, const char*, _nyapc1__getJobsResponse *, const char*);

#define soap_write__nyapc1__getJobsResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__nyapc1__getJobsResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__nyapc1__getJobsResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__getJobsResponse * SOAP_FMAC4 soap_get__nyapc1__getJobsResponse(struct soap*, _nyapc1__getJobsResponse *, const char*, const char*);

#define soap_new__nyapc1__getJobsResponse(soap, n) ::soap_instantiate__nyapc1__getJobsResponse(soap, n, NULL, NULL, NULL)


#define soap_delete__nyapc1__getJobsResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _nyapc1__getJobsResponse * SOAP_FMAC2 soap_instantiate__nyapc1__getJobsResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__nyapc1__getJobsResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__nyapc1__getJobs
#define SOAP_TYPE__nyapc1__getJobs (44)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__nyapc1__getJobs(struct soap*, const char*, int, const _nyapc1__getJobs *, const char*);
SOAP_FMAC3 _nyapc1__getJobs * SOAP_FMAC4 soap_in__nyapc1__getJobs(struct soap*, const char*, _nyapc1__getJobs *, const char*);

#define soap_write__nyapc1__getJobs(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__nyapc1__getJobs(soap, data) ( soap_begin_recv(soap) || !soap_get__nyapc1__getJobs(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__getJobs * SOAP_FMAC4 soap_get__nyapc1__getJobs(struct soap*, _nyapc1__getJobs *, const char*, const char*);

#define soap_new__nyapc1__getJobs(soap, n) ::soap_instantiate__nyapc1__getJobs(soap, n, NULL, NULL, NULL)


#define soap_delete__nyapc1__getJobs(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _nyapc1__getJobs * SOAP_FMAC2 soap_instantiate__nyapc1__getJobs(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__nyapc1__getJobs(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__nyapc1__getJobIDResponse
#define SOAP_TYPE__nyapc1__getJobIDResponse (43)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__nyapc1__getJobIDResponse(struct soap*, const char*, int, const _nyapc1__getJobIDResponse *, const char*);
SOAP_FMAC3 _nyapc1__getJobIDResponse * SOAP_FMAC4 soap_in__nyapc1__getJobIDResponse(struct soap*, const char*, _nyapc1__getJobIDResponse *, const char*);

#define soap_write__nyapc1__getJobIDResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__nyapc1__getJobIDResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__nyapc1__getJobIDResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__getJobIDResponse * SOAP_FMAC4 soap_get__nyapc1__getJobIDResponse(struct soap*, _nyapc1__getJobIDResponse *, const char*, const char*);

#define soap_new__nyapc1__getJobIDResponse(soap, n) ::soap_instantiate__nyapc1__getJobIDResponse(soap, n, NULL, NULL, NULL)


#define soap_delete__nyapc1__getJobIDResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _nyapc1__getJobIDResponse * SOAP_FMAC2 soap_instantiate__nyapc1__getJobIDResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__nyapc1__getJobIDResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__nyapc1__getJobID
#define SOAP_TYPE__nyapc1__getJobID (42)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__nyapc1__getJobID(struct soap*, const char*, int, const _nyapc1__getJobID *, const char*);
SOAP_FMAC3 _nyapc1__getJobID * SOAP_FMAC4 soap_in__nyapc1__getJobID(struct soap*, const char*, _nyapc1__getJobID *, const char*);

#define soap_write__nyapc1__getJobID(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__nyapc1__getJobID(soap, data) ( soap_begin_recv(soap) || !soap_get__nyapc1__getJobID(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__getJobID * SOAP_FMAC4 soap_get__nyapc1__getJobID(struct soap*, _nyapc1__getJobID *, const char*, const char*);

#define soap_new__nyapc1__getJobID(soap, n) ::soap_instantiate__nyapc1__getJobID(soap, n, NULL, NULL, NULL)


#define soap_delete__nyapc1__getJobID(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _nyapc1__getJobID * SOAP_FMAC2 soap_instantiate__nyapc1__getJobID(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__nyapc1__getJobID(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__nyapc1__putResultResponse
#define SOAP_TYPE__nyapc1__putResultResponse (41)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__nyapc1__putResultResponse(struct soap*, const char*, int, const _nyapc1__putResultResponse *, const char*);
SOAP_FMAC3 _nyapc1__putResultResponse * SOAP_FMAC4 soap_in__nyapc1__putResultResponse(struct soap*, const char*, _nyapc1__putResultResponse *, const char*);

#define soap_write__nyapc1__putResultResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__nyapc1__putResultResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__nyapc1__putResultResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__putResultResponse * SOAP_FMAC4 soap_get__nyapc1__putResultResponse(struct soap*, _nyapc1__putResultResponse *, const char*, const char*);

#define soap_new__nyapc1__putResultResponse(soap, n) ::soap_instantiate__nyapc1__putResultResponse(soap, n, NULL, NULL, NULL)


#define soap_delete__nyapc1__putResultResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _nyapc1__putResultResponse * SOAP_FMAC2 soap_instantiate__nyapc1__putResultResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__nyapc1__putResultResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__nyapc1__putResult
#define SOAP_TYPE__nyapc1__putResult (40)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__nyapc1__putResult(struct soap*, const char*, int, const _nyapc1__putResult *, const char*);
SOAP_FMAC3 _nyapc1__putResult * SOAP_FMAC4 soap_in__nyapc1__putResult(struct soap*, const char*, _nyapc1__putResult *, const char*);

#define soap_write__nyapc1__putResult(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__nyapc1__putResult(soap, data) ( soap_begin_recv(soap) || !soap_get__nyapc1__putResult(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__putResult * SOAP_FMAC4 soap_get__nyapc1__putResult(struct soap*, _nyapc1__putResult *, const char*, const char*);

#define soap_new__nyapc1__putResult(soap, n) ::soap_instantiate__nyapc1__putResult(soap, n, NULL, NULL, NULL)


#define soap_delete__nyapc1__putResult(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _nyapc1__putResult * SOAP_FMAC2 soap_instantiate__nyapc1__putResult(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__nyapc1__putResult(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__nyapc1__getStatResponse
#define SOAP_TYPE__nyapc1__getStatResponse (39)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__nyapc1__getStatResponse(struct soap*, const char*, int, const _nyapc1__getStatResponse *, const char*);
SOAP_FMAC3 _nyapc1__getStatResponse * SOAP_FMAC4 soap_in__nyapc1__getStatResponse(struct soap*, const char*, _nyapc1__getStatResponse *, const char*);

#define soap_write__nyapc1__getStatResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__nyapc1__getStatResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__nyapc1__getStatResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__getStatResponse * SOAP_FMAC4 soap_get__nyapc1__getStatResponse(struct soap*, _nyapc1__getStatResponse *, const char*, const char*);

#define soap_new__nyapc1__getStatResponse(soap, n) ::soap_instantiate__nyapc1__getStatResponse(soap, n, NULL, NULL, NULL)


#define soap_delete__nyapc1__getStatResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _nyapc1__getStatResponse * SOAP_FMAC2 soap_instantiate__nyapc1__getStatResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__nyapc1__getStatResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__nyapc1__getStat
#define SOAP_TYPE__nyapc1__getStat (38)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__nyapc1__getStat(struct soap*, const char*, int, const _nyapc1__getStat *, const char*);
SOAP_FMAC3 _nyapc1__getStat * SOAP_FMAC4 soap_in__nyapc1__getStat(struct soap*, const char*, _nyapc1__getStat *, const char*);

#define soap_write__nyapc1__getStat(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__nyapc1__getStat(soap, data) ( soap_begin_recv(soap) || !soap_get__nyapc1__getStat(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__getStat * SOAP_FMAC4 soap_get__nyapc1__getStat(struct soap*, _nyapc1__getStat *, const char*, const char*);

#define soap_new__nyapc1__getStat(soap, n) ::soap_instantiate__nyapc1__getStat(soap, n, NULL, NULL, NULL)


#define soap_delete__nyapc1__getStat(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _nyapc1__getStat * SOAP_FMAC2 soap_instantiate__nyapc1__getStat(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__nyapc1__getStat(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__nyapc1__updateWrapperCheckOkResponse
#define SOAP_TYPE__nyapc1__updateWrapperCheckOkResponse (37)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__nyapc1__updateWrapperCheckOkResponse(struct soap*, const char*, int, const _nyapc1__updateWrapperCheckOkResponse *, const char*);
SOAP_FMAC3 _nyapc1__updateWrapperCheckOkResponse * SOAP_FMAC4 soap_in__nyapc1__updateWrapperCheckOkResponse(struct soap*, const char*, _nyapc1__updateWrapperCheckOkResponse *, const char*);

#define soap_write__nyapc1__updateWrapperCheckOkResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__nyapc1__updateWrapperCheckOkResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__nyapc1__updateWrapperCheckOkResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__updateWrapperCheckOkResponse * SOAP_FMAC4 soap_get__nyapc1__updateWrapperCheckOkResponse(struct soap*, _nyapc1__updateWrapperCheckOkResponse *, const char*, const char*);

#define soap_new__nyapc1__updateWrapperCheckOkResponse(soap, n) ::soap_instantiate__nyapc1__updateWrapperCheckOkResponse(soap, n, NULL, NULL, NULL)


#define soap_delete__nyapc1__updateWrapperCheckOkResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _nyapc1__updateWrapperCheckOkResponse * SOAP_FMAC2 soap_instantiate__nyapc1__updateWrapperCheckOkResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__nyapc1__updateWrapperCheckOkResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__nyapc1__updateWrapperCheckOk
#define SOAP_TYPE__nyapc1__updateWrapperCheckOk (36)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__nyapc1__updateWrapperCheckOk(struct soap*, const char*, int, const _nyapc1__updateWrapperCheckOk *, const char*);
SOAP_FMAC3 _nyapc1__updateWrapperCheckOk * SOAP_FMAC4 soap_in__nyapc1__updateWrapperCheckOk(struct soap*, const char*, _nyapc1__updateWrapperCheckOk *, const char*);

#define soap_write__nyapc1__updateWrapperCheckOk(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__nyapc1__updateWrapperCheckOk(soap, data) ( soap_begin_recv(soap) || !soap_get__nyapc1__updateWrapperCheckOk(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__updateWrapperCheckOk * SOAP_FMAC4 soap_get__nyapc1__updateWrapperCheckOk(struct soap*, _nyapc1__updateWrapperCheckOk *, const char*, const char*);

#define soap_new__nyapc1__updateWrapperCheckOk(soap, n) ::soap_instantiate__nyapc1__updateWrapperCheckOk(soap, n, NULL, NULL, NULL)


#define soap_delete__nyapc1__updateWrapperCheckOk(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _nyapc1__updateWrapperCheckOk * SOAP_FMAC2 soap_instantiate__nyapc1__updateWrapperCheckOk(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__nyapc1__updateWrapperCheckOk(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__nyapc1__updateWrapperResponse
#define SOAP_TYPE__nyapc1__updateWrapperResponse (35)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__nyapc1__updateWrapperResponse(struct soap*, const char*, int, const _nyapc1__updateWrapperResponse *, const char*);
SOAP_FMAC3 _nyapc1__updateWrapperResponse * SOAP_FMAC4 soap_in__nyapc1__updateWrapperResponse(struct soap*, const char*, _nyapc1__updateWrapperResponse *, const char*);

#define soap_write__nyapc1__updateWrapperResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__nyapc1__updateWrapperResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__nyapc1__updateWrapperResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__updateWrapperResponse * SOAP_FMAC4 soap_get__nyapc1__updateWrapperResponse(struct soap*, _nyapc1__updateWrapperResponse *, const char*, const char*);

#define soap_new__nyapc1__updateWrapperResponse(soap, n) ::soap_instantiate__nyapc1__updateWrapperResponse(soap, n, NULL, NULL, NULL)


#define soap_delete__nyapc1__updateWrapperResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _nyapc1__updateWrapperResponse * SOAP_FMAC2 soap_instantiate__nyapc1__updateWrapperResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__nyapc1__updateWrapperResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__nyapc1__updateWrapper
#define SOAP_TYPE__nyapc1__updateWrapper (34)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__nyapc1__updateWrapper(struct soap*, const char*, int, const _nyapc1__updateWrapper *, const char*);
SOAP_FMAC3 _nyapc1__updateWrapper * SOAP_FMAC4 soap_in__nyapc1__updateWrapper(struct soap*, const char*, _nyapc1__updateWrapper *, const char*);

#define soap_write__nyapc1__updateWrapper(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__nyapc1__updateWrapper(soap, data) ( soap_begin_recv(soap) || !soap_get__nyapc1__updateWrapper(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__updateWrapper * SOAP_FMAC4 soap_get__nyapc1__updateWrapper(struct soap*, _nyapc1__updateWrapper *, const char*, const char*);

#define soap_new__nyapc1__updateWrapper(soap, n) ::soap_instantiate__nyapc1__updateWrapper(soap, n, NULL, NULL, NULL)


#define soap_delete__nyapc1__updateWrapper(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _nyapc1__updateWrapper * SOAP_FMAC2 soap_instantiate__nyapc1__updateWrapper(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__nyapc1__updateWrapper(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__nyapc1__getWrapInvalidTaskResponse
#define SOAP_TYPE__nyapc1__getWrapInvalidTaskResponse (33)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__nyapc1__getWrapInvalidTaskResponse(struct soap*, const char*, int, const _nyapc1__getWrapInvalidTaskResponse *, const char*);
SOAP_FMAC3 _nyapc1__getWrapInvalidTaskResponse * SOAP_FMAC4 soap_in__nyapc1__getWrapInvalidTaskResponse(struct soap*, const char*, _nyapc1__getWrapInvalidTaskResponse *, const char*);

#define soap_write__nyapc1__getWrapInvalidTaskResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__nyapc1__getWrapInvalidTaskResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__nyapc1__getWrapInvalidTaskResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__getWrapInvalidTaskResponse * SOAP_FMAC4 soap_get__nyapc1__getWrapInvalidTaskResponse(struct soap*, _nyapc1__getWrapInvalidTaskResponse *, const char*, const char*);

#define soap_new__nyapc1__getWrapInvalidTaskResponse(soap, n) ::soap_instantiate__nyapc1__getWrapInvalidTaskResponse(soap, n, NULL, NULL, NULL)


#define soap_delete__nyapc1__getWrapInvalidTaskResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _nyapc1__getWrapInvalidTaskResponse * SOAP_FMAC2 soap_instantiate__nyapc1__getWrapInvalidTaskResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__nyapc1__getWrapInvalidTaskResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__nyapc1__getWrapInvalidTask
#define SOAP_TYPE__nyapc1__getWrapInvalidTask (32)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__nyapc1__getWrapInvalidTask(struct soap*, const char*, int, const _nyapc1__getWrapInvalidTask *, const char*);
SOAP_FMAC3 _nyapc1__getWrapInvalidTask * SOAP_FMAC4 soap_in__nyapc1__getWrapInvalidTask(struct soap*, const char*, _nyapc1__getWrapInvalidTask *, const char*);

#define soap_write__nyapc1__getWrapInvalidTask(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__nyapc1__getWrapInvalidTask(soap, data) ( soap_begin_recv(soap) || !soap_get__nyapc1__getWrapInvalidTask(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__getWrapInvalidTask * SOAP_FMAC4 soap_get__nyapc1__getWrapInvalidTask(struct soap*, _nyapc1__getWrapInvalidTask *, const char*, const char*);

#define soap_new__nyapc1__getWrapInvalidTask(soap, n) ::soap_instantiate__nyapc1__getWrapInvalidTask(soap, n, NULL, NULL, NULL)


#define soap_delete__nyapc1__getWrapInvalidTask(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _nyapc1__getWrapInvalidTask * SOAP_FMAC2 soap_instantiate__nyapc1__getWrapInvalidTask(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__nyapc1__getWrapInvalidTask(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__nyapc1__takeWrapTaskResponse
#define SOAP_TYPE__nyapc1__takeWrapTaskResponse (31)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__nyapc1__takeWrapTaskResponse(struct soap*, const char*, int, const _nyapc1__takeWrapTaskResponse *, const char*);
SOAP_FMAC3 _nyapc1__takeWrapTaskResponse * SOAP_FMAC4 soap_in__nyapc1__takeWrapTaskResponse(struct soap*, const char*, _nyapc1__takeWrapTaskResponse *, const char*);

#define soap_write__nyapc1__takeWrapTaskResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__nyapc1__takeWrapTaskResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__nyapc1__takeWrapTaskResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__takeWrapTaskResponse * SOAP_FMAC4 soap_get__nyapc1__takeWrapTaskResponse(struct soap*, _nyapc1__takeWrapTaskResponse *, const char*, const char*);

#define soap_new__nyapc1__takeWrapTaskResponse(soap, n) ::soap_instantiate__nyapc1__takeWrapTaskResponse(soap, n, NULL, NULL, NULL)


#define soap_delete__nyapc1__takeWrapTaskResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _nyapc1__takeWrapTaskResponse * SOAP_FMAC2 soap_instantiate__nyapc1__takeWrapTaskResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__nyapc1__takeWrapTaskResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__nyapc1__takeWrapTask
#define SOAP_TYPE__nyapc1__takeWrapTask (30)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__nyapc1__takeWrapTask(struct soap*, const char*, int, const _nyapc1__takeWrapTask *, const char*);
SOAP_FMAC3 _nyapc1__takeWrapTask * SOAP_FMAC4 soap_in__nyapc1__takeWrapTask(struct soap*, const char*, _nyapc1__takeWrapTask *, const char*);

#define soap_write__nyapc1__takeWrapTask(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__nyapc1__takeWrapTask(soap, data) ( soap_begin_recv(soap) || !soap_get__nyapc1__takeWrapTask(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__takeWrapTask * SOAP_FMAC4 soap_get__nyapc1__takeWrapTask(struct soap*, _nyapc1__takeWrapTask *, const char*, const char*);

#define soap_new__nyapc1__takeWrapTask(soap, n) ::soap_instantiate__nyapc1__takeWrapTask(soap, n, NULL, NULL, NULL)


#define soap_delete__nyapc1__takeWrapTask(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _nyapc1__takeWrapTask * SOAP_FMAC2 soap_instantiate__nyapc1__takeWrapTask(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__nyapc1__takeWrapTask(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__nyapc1__getWrapTaskResponse
#define SOAP_TYPE__nyapc1__getWrapTaskResponse (29)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__nyapc1__getWrapTaskResponse(struct soap*, const char*, int, const _nyapc1__getWrapTaskResponse *, const char*);
SOAP_FMAC3 _nyapc1__getWrapTaskResponse * SOAP_FMAC4 soap_in__nyapc1__getWrapTaskResponse(struct soap*, const char*, _nyapc1__getWrapTaskResponse *, const char*);

#define soap_write__nyapc1__getWrapTaskResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__nyapc1__getWrapTaskResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__nyapc1__getWrapTaskResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__getWrapTaskResponse * SOAP_FMAC4 soap_get__nyapc1__getWrapTaskResponse(struct soap*, _nyapc1__getWrapTaskResponse *, const char*, const char*);

#define soap_new__nyapc1__getWrapTaskResponse(soap, n) ::soap_instantiate__nyapc1__getWrapTaskResponse(soap, n, NULL, NULL, NULL)


#define soap_delete__nyapc1__getWrapTaskResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _nyapc1__getWrapTaskResponse * SOAP_FMAC2 soap_instantiate__nyapc1__getWrapTaskResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__nyapc1__getWrapTaskResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__nyapc1__getWrapTask
#define SOAP_TYPE__nyapc1__getWrapTask (28)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__nyapc1__getWrapTask(struct soap*, const char*, int, const _nyapc1__getWrapTask *, const char*);
SOAP_FMAC3 _nyapc1__getWrapTask * SOAP_FMAC4 soap_in__nyapc1__getWrapTask(struct soap*, const char*, _nyapc1__getWrapTask *, const char*);

#define soap_write__nyapc1__getWrapTask(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__nyapc1__getWrapTask(soap, data) ( soap_begin_recv(soap) || !soap_get__nyapc1__getWrapTask(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__getWrapTask * SOAP_FMAC4 soap_get__nyapc1__getWrapTask(struct soap*, _nyapc1__getWrapTask *, const char*, const char*);

#define soap_new__nyapc1__getWrapTask(soap, n) ::soap_instantiate__nyapc1__getWrapTask(soap, n, NULL, NULL, NULL)


#define soap_delete__nyapc1__getWrapTask(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _nyapc1__getWrapTask * SOAP_FMAC2 soap_instantiate__nyapc1__getWrapTask(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__nyapc1__getWrapTask(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__nyapc1__getTaskResponse
#define SOAP_TYPE__nyapc1__getTaskResponse (27)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__nyapc1__getTaskResponse(struct soap*, const char*, int, const _nyapc1__getTaskResponse *, const char*);
SOAP_FMAC3 _nyapc1__getTaskResponse * SOAP_FMAC4 soap_in__nyapc1__getTaskResponse(struct soap*, const char*, _nyapc1__getTaskResponse *, const char*);

#define soap_write__nyapc1__getTaskResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__nyapc1__getTaskResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__nyapc1__getTaskResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__getTaskResponse * SOAP_FMAC4 soap_get__nyapc1__getTaskResponse(struct soap*, _nyapc1__getTaskResponse *, const char*, const char*);

#define soap_new__nyapc1__getTaskResponse(soap, n) ::soap_instantiate__nyapc1__getTaskResponse(soap, n, NULL, NULL, NULL)


#define soap_delete__nyapc1__getTaskResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _nyapc1__getTaskResponse * SOAP_FMAC2 soap_instantiate__nyapc1__getTaskResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__nyapc1__getTaskResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__nyapc1__getTask
#define SOAP_TYPE__nyapc1__getTask (26)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__nyapc1__getTask(struct soap*, const char*, int, const _nyapc1__getTask *, const char*);
SOAP_FMAC3 _nyapc1__getTask * SOAP_FMAC4 soap_in__nyapc1__getTask(struct soap*, const char*, _nyapc1__getTask *, const char*);

#define soap_write__nyapc1__getTask(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__nyapc1__getTask(soap, data) ( soap_begin_recv(soap) || !soap_get__nyapc1__getTask(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__getTask * SOAP_FMAC4 soap_get__nyapc1__getTask(struct soap*, _nyapc1__getTask *, const char*, const char*);

#define soap_new__nyapc1__getTask(soap, n) ::soap_instantiate__nyapc1__getTask(soap, n, NULL, NULL, NULL)


#define soap_delete__nyapc1__getTask(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _nyapc1__getTask * SOAP_FMAC2 soap_instantiate__nyapc1__getTask(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__nyapc1__getTask(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__nyapc1__addWrapperResponse
#define SOAP_TYPE__nyapc1__addWrapperResponse (25)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__nyapc1__addWrapperResponse(struct soap*, const char*, int, const _nyapc1__addWrapperResponse *, const char*);
SOAP_FMAC3 _nyapc1__addWrapperResponse * SOAP_FMAC4 soap_in__nyapc1__addWrapperResponse(struct soap*, const char*, _nyapc1__addWrapperResponse *, const char*);

#define soap_write__nyapc1__addWrapperResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__nyapc1__addWrapperResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__nyapc1__addWrapperResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__addWrapperResponse * SOAP_FMAC4 soap_get__nyapc1__addWrapperResponse(struct soap*, _nyapc1__addWrapperResponse *, const char*, const char*);

#define soap_new__nyapc1__addWrapperResponse(soap, n) ::soap_instantiate__nyapc1__addWrapperResponse(soap, n, NULL, NULL, NULL)


#define soap_delete__nyapc1__addWrapperResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _nyapc1__addWrapperResponse * SOAP_FMAC2 soap_instantiate__nyapc1__addWrapperResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__nyapc1__addWrapperResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__nyapc1__addWrapper
#define SOAP_TYPE__nyapc1__addWrapper (24)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__nyapc1__addWrapper(struct soap*, const char*, int, const _nyapc1__addWrapper *, const char*);
SOAP_FMAC3 _nyapc1__addWrapper * SOAP_FMAC4 soap_in__nyapc1__addWrapper(struct soap*, const char*, _nyapc1__addWrapper *, const char*);

#define soap_write__nyapc1__addWrapper(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__nyapc1__addWrapper(soap, data) ( soap_begin_recv(soap) || !soap_get__nyapc1__addWrapper(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__addWrapper * SOAP_FMAC4 soap_get__nyapc1__addWrapper(struct soap*, _nyapc1__addWrapper *, const char*, const char*);

#define soap_new__nyapc1__addWrapper(soap, n) ::soap_instantiate__nyapc1__addWrapper(soap, n, NULL, NULL, NULL)


#define soap_delete__nyapc1__addWrapper(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _nyapc1__addWrapper * SOAP_FMAC2 soap_instantiate__nyapc1__addWrapper(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__nyapc1__addWrapper(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__nyapc1__getWrapperResponse
#define SOAP_TYPE__nyapc1__getWrapperResponse (23)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__nyapc1__getWrapperResponse(struct soap*, const char*, int, const _nyapc1__getWrapperResponse *, const char*);
SOAP_FMAC3 _nyapc1__getWrapperResponse * SOAP_FMAC4 soap_in__nyapc1__getWrapperResponse(struct soap*, const char*, _nyapc1__getWrapperResponse *, const char*);

#define soap_write__nyapc1__getWrapperResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__nyapc1__getWrapperResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__nyapc1__getWrapperResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__getWrapperResponse * SOAP_FMAC4 soap_get__nyapc1__getWrapperResponse(struct soap*, _nyapc1__getWrapperResponse *, const char*, const char*);

#define soap_new__nyapc1__getWrapperResponse(soap, n) ::soap_instantiate__nyapc1__getWrapperResponse(soap, n, NULL, NULL, NULL)


#define soap_delete__nyapc1__getWrapperResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _nyapc1__getWrapperResponse * SOAP_FMAC2 soap_instantiate__nyapc1__getWrapperResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__nyapc1__getWrapperResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__nyapc1__getWrapper
#define SOAP_TYPE__nyapc1__getWrapper (22)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__nyapc1__getWrapper(struct soap*, const char*, int, const _nyapc1__getWrapper *, const char*);
SOAP_FMAC3 _nyapc1__getWrapper * SOAP_FMAC4 soap_in__nyapc1__getWrapper(struct soap*, const char*, _nyapc1__getWrapper *, const char*);

#define soap_write__nyapc1__getWrapper(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__nyapc1__getWrapper(soap, data) ( soap_begin_recv(soap) || !soap_get__nyapc1__getWrapper(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__getWrapper * SOAP_FMAC4 soap_get__nyapc1__getWrapper(struct soap*, _nyapc1__getWrapper *, const char*, const char*);

#define soap_new__nyapc1__getWrapper(soap, n) ::soap_instantiate__nyapc1__getWrapper(soap, n, NULL, NULL, NULL)


#define soap_delete__nyapc1__getWrapper(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _nyapc1__getWrapper * SOAP_FMAC2 soap_instantiate__nyapc1__getWrapper(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__nyapc1__getWrapper(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__nyapc1__updateJobResponse
#define SOAP_TYPE__nyapc1__updateJobResponse (21)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__nyapc1__updateJobResponse(struct soap*, const char*, int, const _nyapc1__updateJobResponse *, const char*);
SOAP_FMAC3 _nyapc1__updateJobResponse * SOAP_FMAC4 soap_in__nyapc1__updateJobResponse(struct soap*, const char*, _nyapc1__updateJobResponse *, const char*);

#define soap_write__nyapc1__updateJobResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__nyapc1__updateJobResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__nyapc1__updateJobResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__updateJobResponse * SOAP_FMAC4 soap_get__nyapc1__updateJobResponse(struct soap*, _nyapc1__updateJobResponse *, const char*, const char*);

#define soap_new__nyapc1__updateJobResponse(soap, n) ::soap_instantiate__nyapc1__updateJobResponse(soap, n, NULL, NULL, NULL)


#define soap_delete__nyapc1__updateJobResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _nyapc1__updateJobResponse * SOAP_FMAC2 soap_instantiate__nyapc1__updateJobResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__nyapc1__updateJobResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__nyapc1__updateJob
#define SOAP_TYPE__nyapc1__updateJob (20)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__nyapc1__updateJob(struct soap*, const char*, int, const _nyapc1__updateJob *, const char*);
SOAP_FMAC3 _nyapc1__updateJob * SOAP_FMAC4 soap_in__nyapc1__updateJob(struct soap*, const char*, _nyapc1__updateJob *, const char*);

#define soap_write__nyapc1__updateJob(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__nyapc1__updateJob(soap, data) ( soap_begin_recv(soap) || !soap_get__nyapc1__updateJob(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__updateJob * SOAP_FMAC4 soap_get__nyapc1__updateJob(struct soap*, _nyapc1__updateJob *, const char*, const char*);

#define soap_new__nyapc1__updateJob(soap, n) ::soap_instantiate__nyapc1__updateJob(soap, n, NULL, NULL, NULL)


#define soap_delete__nyapc1__updateJob(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _nyapc1__updateJob * SOAP_FMAC2 soap_instantiate__nyapc1__updateJob(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__nyapc1__updateJob(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__nyapc1__hasTaskResponse
#define SOAP_TYPE__nyapc1__hasTaskResponse (19)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__nyapc1__hasTaskResponse(struct soap*, const char*, int, const _nyapc1__hasTaskResponse *, const char*);
SOAP_FMAC3 _nyapc1__hasTaskResponse * SOAP_FMAC4 soap_in__nyapc1__hasTaskResponse(struct soap*, const char*, _nyapc1__hasTaskResponse *, const char*);

#define soap_write__nyapc1__hasTaskResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__nyapc1__hasTaskResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__nyapc1__hasTaskResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__hasTaskResponse * SOAP_FMAC4 soap_get__nyapc1__hasTaskResponse(struct soap*, _nyapc1__hasTaskResponse *, const char*, const char*);

#define soap_new__nyapc1__hasTaskResponse(soap, n) ::soap_instantiate__nyapc1__hasTaskResponse(soap, n, NULL, NULL, NULL)


#define soap_delete__nyapc1__hasTaskResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _nyapc1__hasTaskResponse * SOAP_FMAC2 soap_instantiate__nyapc1__hasTaskResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__nyapc1__hasTaskResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__nyapc1__hasTask
#define SOAP_TYPE__nyapc1__hasTask (18)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__nyapc1__hasTask(struct soap*, const char*, int, const _nyapc1__hasTask *, const char*);
SOAP_FMAC3 _nyapc1__hasTask * SOAP_FMAC4 soap_in__nyapc1__hasTask(struct soap*, const char*, _nyapc1__hasTask *, const char*);

#define soap_write__nyapc1__hasTask(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__nyapc1__hasTask(soap, data) ( soap_begin_recv(soap) || !soap_get__nyapc1__hasTask(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__hasTask * SOAP_FMAC4 soap_get__nyapc1__hasTask(struct soap*, _nyapc1__hasTask *, const char*, const char*);

#define soap_new__nyapc1__hasTask(soap, n) ::soap_instantiate__nyapc1__hasTask(soap, n, NULL, NULL, NULL)


#define soap_delete__nyapc1__hasTask(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _nyapc1__hasTask * SOAP_FMAC2 soap_instantiate__nyapc1__hasTask(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__nyapc1__hasTask(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__nyapc1__addJobResponse
#define SOAP_TYPE__nyapc1__addJobResponse (17)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__nyapc1__addJobResponse(struct soap*, const char*, int, const _nyapc1__addJobResponse *, const char*);
SOAP_FMAC3 _nyapc1__addJobResponse * SOAP_FMAC4 soap_in__nyapc1__addJobResponse(struct soap*, const char*, _nyapc1__addJobResponse *, const char*);

#define soap_write__nyapc1__addJobResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__nyapc1__addJobResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__nyapc1__addJobResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__addJobResponse * SOAP_FMAC4 soap_get__nyapc1__addJobResponse(struct soap*, _nyapc1__addJobResponse *, const char*, const char*);

#define soap_new__nyapc1__addJobResponse(soap, n) ::soap_instantiate__nyapc1__addJobResponse(soap, n, NULL, NULL, NULL)


#define soap_delete__nyapc1__addJobResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _nyapc1__addJobResponse * SOAP_FMAC2 soap_instantiate__nyapc1__addJobResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__nyapc1__addJobResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__nyapc1__addJob
#define SOAP_TYPE__nyapc1__addJob (16)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__nyapc1__addJob(struct soap*, const char*, int, const _nyapc1__addJob *, const char*);
SOAP_FMAC3 _nyapc1__addJob * SOAP_FMAC4 soap_in__nyapc1__addJob(struct soap*, const char*, _nyapc1__addJob *, const char*);

#define soap_write__nyapc1__addJob(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__nyapc1__addJob(soap, data) ( soap_begin_recv(soap) || !soap_get__nyapc1__addJob(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__addJob * SOAP_FMAC4 soap_get__nyapc1__addJob(struct soap*, _nyapc1__addJob *, const char*, const char*);

#define soap_new__nyapc1__addJob(soap, n) ::soap_instantiate__nyapc1__addJob(soap, n, NULL, NULL, NULL)


#define soap_delete__nyapc1__addJob(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _nyapc1__addJob * SOAP_FMAC2 soap_instantiate__nyapc1__addJob(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__nyapc1__addJob(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__nyapc1__getJobResponse
#define SOAP_TYPE__nyapc1__getJobResponse (15)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__nyapc1__getJobResponse(struct soap*, const char*, int, const _nyapc1__getJobResponse *, const char*);
SOAP_FMAC3 _nyapc1__getJobResponse * SOAP_FMAC4 soap_in__nyapc1__getJobResponse(struct soap*, const char*, _nyapc1__getJobResponse *, const char*);

#define soap_write__nyapc1__getJobResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__nyapc1__getJobResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__nyapc1__getJobResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__getJobResponse * SOAP_FMAC4 soap_get__nyapc1__getJobResponse(struct soap*, _nyapc1__getJobResponse *, const char*, const char*);

#define soap_new__nyapc1__getJobResponse(soap, n) ::soap_instantiate__nyapc1__getJobResponse(soap, n, NULL, NULL, NULL)


#define soap_delete__nyapc1__getJobResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _nyapc1__getJobResponse * SOAP_FMAC2 soap_instantiate__nyapc1__getJobResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__nyapc1__getJobResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__nyapc1__getJob
#define SOAP_TYPE__nyapc1__getJob (14)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__nyapc1__getJob(struct soap*, const char*, int, const _nyapc1__getJob *, const char*);
SOAP_FMAC3 _nyapc1__getJob * SOAP_FMAC4 soap_in__nyapc1__getJob(struct soap*, const char*, _nyapc1__getJob *, const char*);

#define soap_write__nyapc1__getJob(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__nyapc1__getJob(soap, data) ( soap_begin_recv(soap) || !soap_get__nyapc1__getJob(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__getJob * SOAP_FMAC4 soap_get__nyapc1__getJob(struct soap*, _nyapc1__getJob *, const char*, const char*);

#define soap_new__nyapc1__getJob(soap, n) ::soap_instantiate__nyapc1__getJob(soap, n, NULL, NULL, NULL)


#define soap_delete__nyapc1__getJob(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _nyapc1__getJob * SOAP_FMAC2 soap_instantiate__nyapc1__getJob(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__nyapc1__getJob(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__nyapc1__getVersionResponse
#define SOAP_TYPE__nyapc1__getVersionResponse (13)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__nyapc1__getVersionResponse(struct soap*, const char*, int, const _nyapc1__getVersionResponse *, const char*);
SOAP_FMAC3 _nyapc1__getVersionResponse * SOAP_FMAC4 soap_in__nyapc1__getVersionResponse(struct soap*, const char*, _nyapc1__getVersionResponse *, const char*);

#define soap_write__nyapc1__getVersionResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__nyapc1__getVersionResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__nyapc1__getVersionResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__getVersionResponse * SOAP_FMAC4 soap_get__nyapc1__getVersionResponse(struct soap*, _nyapc1__getVersionResponse *, const char*, const char*);

#define soap_new__nyapc1__getVersionResponse(soap, n) ::soap_instantiate__nyapc1__getVersionResponse(soap, n, NULL, NULL, NULL)


#define soap_delete__nyapc1__getVersionResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _nyapc1__getVersionResponse * SOAP_FMAC2 soap_instantiate__nyapc1__getVersionResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__nyapc1__getVersionResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__nyapc1__getVersion
#define SOAP_TYPE__nyapc1__getVersion (12)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__nyapc1__getVersion(struct soap*, const char*, int, const _nyapc1__getVersion *, const char*);
SOAP_FMAC3 _nyapc1__getVersion * SOAP_FMAC4 soap_in__nyapc1__getVersion(struct soap*, const char*, _nyapc1__getVersion *, const char*);

#define soap_write__nyapc1__getVersion(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__nyapc1__getVersion(soap, data) ( soap_begin_recv(soap) || !soap_get__nyapc1__getVersion(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__getVersion * SOAP_FMAC4 soap_get__nyapc1__getVersion(struct soap*, _nyapc1__getVersion *, const char*, const char*);

#define soap_new__nyapc1__getVersion(soap, n) ::soap_instantiate__nyapc1__getVersion(soap, n, NULL, NULL, NULL)


#define soap_delete__nyapc1__getVersion(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _nyapc1__getVersion * SOAP_FMAC2 soap_instantiate__nyapc1__getVersion(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__nyapc1__getVersion(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__nyapc1__addResponse
#define SOAP_TYPE__nyapc1__addResponse (11)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__nyapc1__addResponse(struct soap*, const char*, int, const _nyapc1__addResponse *, const char*);
SOAP_FMAC3 _nyapc1__addResponse * SOAP_FMAC4 soap_in__nyapc1__addResponse(struct soap*, const char*, _nyapc1__addResponse *, const char*);

#define soap_write__nyapc1__addResponse(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__nyapc1__addResponse(soap, data) ( soap_begin_recv(soap) || !soap_get__nyapc1__addResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__addResponse * SOAP_FMAC4 soap_get__nyapc1__addResponse(struct soap*, _nyapc1__addResponse *, const char*, const char*);

#define soap_new__nyapc1__addResponse(soap, n) ::soap_instantiate__nyapc1__addResponse(soap, n, NULL, NULL, NULL)


#define soap_delete__nyapc1__addResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _nyapc1__addResponse * SOAP_FMAC2 soap_instantiate__nyapc1__addResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__nyapc1__addResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__nyapc1__add
#define SOAP_TYPE__nyapc1__add (10)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out__nyapc1__add(struct soap*, const char*, int, const _nyapc1__add *, const char*);
SOAP_FMAC3 _nyapc1__add * SOAP_FMAC4 soap_in__nyapc1__add(struct soap*, const char*, _nyapc1__add *, const char*);

#define soap_write__nyapc1__add(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read__nyapc1__add(soap, data) ( soap_begin_recv(soap) || !soap_get__nyapc1__add(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__add * SOAP_FMAC4 soap_get__nyapc1__add(struct soap*, _nyapc1__add *, const char*, const char*);

#define soap_new__nyapc1__add(soap, n) ::soap_instantiate__nyapc1__add(soap, n, NULL, NULL, NULL)


#define soap_delete__nyapc1__add(soap, p) soap_delete(soap, p)

SOAP_FMAC1 _nyapc1__add * SOAP_FMAC2 soap_instantiate__nyapc1__add(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__nyapc1__add(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_nyapc1__Task
#define SOAP_TYPE_nyapc1__Task (9)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_nyapc1__Task(struct soap*, const char*, int, const nyapc1__Task *, const char*);
SOAP_FMAC3 nyapc1__Task * SOAP_FMAC4 soap_in_nyapc1__Task(struct soap*, const char*, nyapc1__Task *, const char*);

#define soap_write_nyapc1__Task(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read_nyapc1__Task(soap, data) ( soap_begin_recv(soap) || !soap_get_nyapc1__Task(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 nyapc1__Task * SOAP_FMAC4 soap_get_nyapc1__Task(struct soap*, nyapc1__Task *, const char*, const char*);

#define soap_new_nyapc1__Task(soap, n) ::soap_instantiate_nyapc1__Task(soap, n, NULL, NULL, NULL)


#define soap_delete_nyapc1__Task(soap, p) soap_delete(soap, p)

SOAP_FMAC1 nyapc1__Task * SOAP_FMAC2 soap_instantiate_nyapc1__Task(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_nyapc1__Task(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_nyapc1__JobAtt
#define SOAP_TYPE_nyapc1__JobAtt (8)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_nyapc1__JobAtt(struct soap*, const char*, int, const nyapc1__JobAtt *, const char*);
SOAP_FMAC3 nyapc1__JobAtt * SOAP_FMAC4 soap_in_nyapc1__JobAtt(struct soap*, const char*, nyapc1__JobAtt *, const char*);

#define soap_write_nyapc1__JobAtt(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, NULL, NULL) || soap_end_send(soap) )


#define soap_read_nyapc1__JobAtt(soap, data) ( soap_begin_recv(soap) || !soap_get_nyapc1__JobAtt(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 nyapc1__JobAtt * SOAP_FMAC4 soap_get_nyapc1__JobAtt(struct soap*, nyapc1__JobAtt *, const char*, const char*);

#define soap_new_nyapc1__JobAtt(soap, n) ::soap_instantiate_nyapc1__JobAtt(soap, n, NULL, NULL, NULL)


#define soap_delete_nyapc1__JobAtt(soap, p) soap_delete(soap, p)

SOAP_FMAC1 nyapc1__JobAtt * SOAP_FMAC2 soap_instantiate_nyapc1__JobAtt(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_nyapc1__JobAtt(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (206)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#define soap_read_SOAP_ENV__Fault(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#define soap_new_SOAP_ENV__Fault(soap, n) ::soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Fault(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Fault(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (205)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#define soap_read_SOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#define soap_new_SOAP_ENV__Reason(soap, n) ::soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Reason(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Reason(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (202)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#define soap_read_SOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#define soap_new_SOAP_ENV__Detail(soap, n) ::soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Detail(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Detail(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (200)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

#define soap_write_SOAP_ENV__Code(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#define soap_read_SOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#define soap_new_SOAP_ENV__Code(soap, n) ::soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Code(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Code(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (199)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

#define soap_write_SOAP_ENV__Header(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#define soap_read_SOAP_ENV__Header(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#define soap_new_SOAP_ENV__Header(soap, n) ::soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Header(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Header(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef SOAP_TYPE___nyapc1__getWraptype
#define SOAP_TYPE___nyapc1__getWraptype (198)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___nyapc1__getWraptype(struct soap*, struct __nyapc1__getWraptype *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___nyapc1__getWraptype(struct soap*, const struct __nyapc1__getWraptype *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___nyapc1__getWraptype(struct soap*, const char*, int, const struct __nyapc1__getWraptype *, const char*);
SOAP_FMAC3 struct __nyapc1__getWraptype * SOAP_FMAC4 soap_in___nyapc1__getWraptype(struct soap*, const char*, struct __nyapc1__getWraptype *, const char*);

#define soap_write___nyapc1__getWraptype(soap, data) ( soap_begin_send(soap) || (soap_serialize___nyapc1__getWraptype(soap, data), 0) || soap_put___nyapc1__getWraptype(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put___nyapc1__getWraptype(struct soap*, const struct __nyapc1__getWraptype *, const char*, const char*);

#define soap_read___nyapc1__getWraptype(soap, data) ( soap_begin_recv(soap) || !soap_get___nyapc1__getWraptype(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct __nyapc1__getWraptype * SOAP_FMAC4 soap_get___nyapc1__getWraptype(struct soap*, struct __nyapc1__getWraptype *, const char*, const char*);

#define soap_new___nyapc1__getWraptype(soap, n) ::soap_instantiate___nyapc1__getWraptype(soap, n, NULL, NULL, NULL)


#define soap_delete___nyapc1__getWraptype(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __nyapc1__getWraptype * SOAP_FMAC2 soap_instantiate___nyapc1__getWraptype(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___nyapc1__getWraptype(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___nyapc1__getWrapId
#define SOAP_TYPE___nyapc1__getWrapId (194)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___nyapc1__getWrapId(struct soap*, struct __nyapc1__getWrapId *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___nyapc1__getWrapId(struct soap*, const struct __nyapc1__getWrapId *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___nyapc1__getWrapId(struct soap*, const char*, int, const struct __nyapc1__getWrapId *, const char*);
SOAP_FMAC3 struct __nyapc1__getWrapId * SOAP_FMAC4 soap_in___nyapc1__getWrapId(struct soap*, const char*, struct __nyapc1__getWrapId *, const char*);

#define soap_write___nyapc1__getWrapId(soap, data) ( soap_begin_send(soap) || (soap_serialize___nyapc1__getWrapId(soap, data), 0) || soap_put___nyapc1__getWrapId(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put___nyapc1__getWrapId(struct soap*, const struct __nyapc1__getWrapId *, const char*, const char*);

#define soap_read___nyapc1__getWrapId(soap, data) ( soap_begin_recv(soap) || !soap_get___nyapc1__getWrapId(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct __nyapc1__getWrapId * SOAP_FMAC4 soap_get___nyapc1__getWrapId(struct soap*, struct __nyapc1__getWrapId *, const char*, const char*);

#define soap_new___nyapc1__getWrapId(soap, n) ::soap_instantiate___nyapc1__getWrapId(soap, n, NULL, NULL, NULL)


#define soap_delete___nyapc1__getWrapId(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __nyapc1__getWrapId * SOAP_FMAC2 soap_instantiate___nyapc1__getWrapId(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___nyapc1__getWrapId(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___nyapc1__getWrapInvalidTaskByJobId
#define SOAP_TYPE___nyapc1__getWrapInvalidTaskByJobId (190)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___nyapc1__getWrapInvalidTaskByJobId(struct soap*, struct __nyapc1__getWrapInvalidTaskByJobId *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___nyapc1__getWrapInvalidTaskByJobId(struct soap*, const struct __nyapc1__getWrapInvalidTaskByJobId *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___nyapc1__getWrapInvalidTaskByJobId(struct soap*, const char*, int, const struct __nyapc1__getWrapInvalidTaskByJobId *, const char*);
SOAP_FMAC3 struct __nyapc1__getWrapInvalidTaskByJobId * SOAP_FMAC4 soap_in___nyapc1__getWrapInvalidTaskByJobId(struct soap*, const char*, struct __nyapc1__getWrapInvalidTaskByJobId *, const char*);

#define soap_write___nyapc1__getWrapInvalidTaskByJobId(soap, data) ( soap_begin_send(soap) || (soap_serialize___nyapc1__getWrapInvalidTaskByJobId(soap, data), 0) || soap_put___nyapc1__getWrapInvalidTaskByJobId(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put___nyapc1__getWrapInvalidTaskByJobId(struct soap*, const struct __nyapc1__getWrapInvalidTaskByJobId *, const char*, const char*);

#define soap_read___nyapc1__getWrapInvalidTaskByJobId(soap, data) ( soap_begin_recv(soap) || !soap_get___nyapc1__getWrapInvalidTaskByJobId(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct __nyapc1__getWrapInvalidTaskByJobId * SOAP_FMAC4 soap_get___nyapc1__getWrapInvalidTaskByJobId(struct soap*, struct __nyapc1__getWrapInvalidTaskByJobId *, const char*, const char*);

#define soap_new___nyapc1__getWrapInvalidTaskByJobId(soap, n) ::soap_instantiate___nyapc1__getWrapInvalidTaskByJobId(soap, n, NULL, NULL, NULL)


#define soap_delete___nyapc1__getWrapInvalidTaskByJobId(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __nyapc1__getWrapInvalidTaskByJobId * SOAP_FMAC2 soap_instantiate___nyapc1__getWrapInvalidTaskByJobId(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___nyapc1__getWrapInvalidTaskByJobId(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___nyapc1__updateJobUrl
#define SOAP_TYPE___nyapc1__updateJobUrl (186)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___nyapc1__updateJobUrl(struct soap*, struct __nyapc1__updateJobUrl *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___nyapc1__updateJobUrl(struct soap*, const struct __nyapc1__updateJobUrl *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___nyapc1__updateJobUrl(struct soap*, const char*, int, const struct __nyapc1__updateJobUrl *, const char*);
SOAP_FMAC3 struct __nyapc1__updateJobUrl * SOAP_FMAC4 soap_in___nyapc1__updateJobUrl(struct soap*, const char*, struct __nyapc1__updateJobUrl *, const char*);

#define soap_write___nyapc1__updateJobUrl(soap, data) ( soap_begin_send(soap) || (soap_serialize___nyapc1__updateJobUrl(soap, data), 0) || soap_put___nyapc1__updateJobUrl(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put___nyapc1__updateJobUrl(struct soap*, const struct __nyapc1__updateJobUrl *, const char*, const char*);

#define soap_read___nyapc1__updateJobUrl(soap, data) ( soap_begin_recv(soap) || !soap_get___nyapc1__updateJobUrl(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct __nyapc1__updateJobUrl * SOAP_FMAC4 soap_get___nyapc1__updateJobUrl(struct soap*, struct __nyapc1__updateJobUrl *, const char*, const char*);

#define soap_new___nyapc1__updateJobUrl(soap, n) ::soap_instantiate___nyapc1__updateJobUrl(soap, n, NULL, NULL, NULL)


#define soap_delete___nyapc1__updateJobUrl(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __nyapc1__updateJobUrl * SOAP_FMAC2 soap_instantiate___nyapc1__updateJobUrl(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___nyapc1__updateJobUrl(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___nyapc1__delJob
#define SOAP_TYPE___nyapc1__delJob (182)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___nyapc1__delJob(struct soap*, struct __nyapc1__delJob *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___nyapc1__delJob(struct soap*, const struct __nyapc1__delJob *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___nyapc1__delJob(struct soap*, const char*, int, const struct __nyapc1__delJob *, const char*);
SOAP_FMAC3 struct __nyapc1__delJob * SOAP_FMAC4 soap_in___nyapc1__delJob(struct soap*, const char*, struct __nyapc1__delJob *, const char*);

#define soap_write___nyapc1__delJob(soap, data) ( soap_begin_send(soap) || (soap_serialize___nyapc1__delJob(soap, data), 0) || soap_put___nyapc1__delJob(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put___nyapc1__delJob(struct soap*, const struct __nyapc1__delJob *, const char*, const char*);

#define soap_read___nyapc1__delJob(soap, data) ( soap_begin_recv(soap) || !soap_get___nyapc1__delJob(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct __nyapc1__delJob * SOAP_FMAC4 soap_get___nyapc1__delJob(struct soap*, struct __nyapc1__delJob *, const char*, const char*);

#define soap_new___nyapc1__delJob(soap, n) ::soap_instantiate___nyapc1__delJob(soap, n, NULL, NULL, NULL)


#define soap_delete___nyapc1__delJob(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __nyapc1__delJob * SOAP_FMAC2 soap_instantiate___nyapc1__delJob(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___nyapc1__delJob(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___nyapc1__getTaskByJobId
#define SOAP_TYPE___nyapc1__getTaskByJobId (178)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___nyapc1__getTaskByJobId(struct soap*, struct __nyapc1__getTaskByJobId *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___nyapc1__getTaskByJobId(struct soap*, const struct __nyapc1__getTaskByJobId *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___nyapc1__getTaskByJobId(struct soap*, const char*, int, const struct __nyapc1__getTaskByJobId *, const char*);
SOAP_FMAC3 struct __nyapc1__getTaskByJobId * SOAP_FMAC4 soap_in___nyapc1__getTaskByJobId(struct soap*, const char*, struct __nyapc1__getTaskByJobId *, const char*);

#define soap_write___nyapc1__getTaskByJobId(soap, data) ( soap_begin_send(soap) || (soap_serialize___nyapc1__getTaskByJobId(soap, data), 0) || soap_put___nyapc1__getTaskByJobId(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put___nyapc1__getTaskByJobId(struct soap*, const struct __nyapc1__getTaskByJobId *, const char*, const char*);

#define soap_read___nyapc1__getTaskByJobId(soap, data) ( soap_begin_recv(soap) || !soap_get___nyapc1__getTaskByJobId(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct __nyapc1__getTaskByJobId * SOAP_FMAC4 soap_get___nyapc1__getTaskByJobId(struct soap*, struct __nyapc1__getTaskByJobId *, const char*, const char*);

#define soap_new___nyapc1__getTaskByJobId(soap, n) ::soap_instantiate___nyapc1__getTaskByJobId(soap, n, NULL, NULL, NULL)


#define soap_delete___nyapc1__getTaskByJobId(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __nyapc1__getTaskByJobId * SOAP_FMAC2 soap_instantiate___nyapc1__getTaskByJobId(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___nyapc1__getTaskByJobId(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___nyapc1__takeTask
#define SOAP_TYPE___nyapc1__takeTask (174)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___nyapc1__takeTask(struct soap*, struct __nyapc1__takeTask *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___nyapc1__takeTask(struct soap*, const struct __nyapc1__takeTask *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___nyapc1__takeTask(struct soap*, const char*, int, const struct __nyapc1__takeTask *, const char*);
SOAP_FMAC3 struct __nyapc1__takeTask * SOAP_FMAC4 soap_in___nyapc1__takeTask(struct soap*, const char*, struct __nyapc1__takeTask *, const char*);

#define soap_write___nyapc1__takeTask(soap, data) ( soap_begin_send(soap) || (soap_serialize___nyapc1__takeTask(soap, data), 0) || soap_put___nyapc1__takeTask(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put___nyapc1__takeTask(struct soap*, const struct __nyapc1__takeTask *, const char*, const char*);

#define soap_read___nyapc1__takeTask(soap, data) ( soap_begin_recv(soap) || !soap_get___nyapc1__takeTask(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct __nyapc1__takeTask * SOAP_FMAC4 soap_get___nyapc1__takeTask(struct soap*, struct __nyapc1__takeTask *, const char*, const char*);

#define soap_new___nyapc1__takeTask(soap, n) ::soap_instantiate___nyapc1__takeTask(soap, n, NULL, NULL, NULL)


#define soap_delete___nyapc1__takeTask(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __nyapc1__takeTask * SOAP_FMAC2 soap_instantiate___nyapc1__takeTask(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___nyapc1__takeTask(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___nyapc1__getWrapTaskQueue
#define SOAP_TYPE___nyapc1__getWrapTaskQueue (170)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___nyapc1__getWrapTaskQueue(struct soap*, struct __nyapc1__getWrapTaskQueue *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___nyapc1__getWrapTaskQueue(struct soap*, const struct __nyapc1__getWrapTaskQueue *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___nyapc1__getWrapTaskQueue(struct soap*, const char*, int, const struct __nyapc1__getWrapTaskQueue *, const char*);
SOAP_FMAC3 struct __nyapc1__getWrapTaskQueue * SOAP_FMAC4 soap_in___nyapc1__getWrapTaskQueue(struct soap*, const char*, struct __nyapc1__getWrapTaskQueue *, const char*);

#define soap_write___nyapc1__getWrapTaskQueue(soap, data) ( soap_begin_send(soap) || (soap_serialize___nyapc1__getWrapTaskQueue(soap, data), 0) || soap_put___nyapc1__getWrapTaskQueue(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put___nyapc1__getWrapTaskQueue(struct soap*, const struct __nyapc1__getWrapTaskQueue *, const char*, const char*);

#define soap_read___nyapc1__getWrapTaskQueue(soap, data) ( soap_begin_recv(soap) || !soap_get___nyapc1__getWrapTaskQueue(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct __nyapc1__getWrapTaskQueue * SOAP_FMAC4 soap_get___nyapc1__getWrapTaskQueue(struct soap*, struct __nyapc1__getWrapTaskQueue *, const char*, const char*);

#define soap_new___nyapc1__getWrapTaskQueue(soap, n) ::soap_instantiate___nyapc1__getWrapTaskQueue(soap, n, NULL, NULL, NULL)


#define soap_delete___nyapc1__getWrapTaskQueue(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __nyapc1__getWrapTaskQueue * SOAP_FMAC2 soap_instantiate___nyapc1__getWrapTaskQueue(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___nyapc1__getWrapTaskQueue(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___nyapc1__getTaskQueue
#define SOAP_TYPE___nyapc1__getTaskQueue (166)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___nyapc1__getTaskQueue(struct soap*, struct __nyapc1__getTaskQueue *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___nyapc1__getTaskQueue(struct soap*, const struct __nyapc1__getTaskQueue *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___nyapc1__getTaskQueue(struct soap*, const char*, int, const struct __nyapc1__getTaskQueue *, const char*);
SOAP_FMAC3 struct __nyapc1__getTaskQueue * SOAP_FMAC4 soap_in___nyapc1__getTaskQueue(struct soap*, const char*, struct __nyapc1__getTaskQueue *, const char*);

#define soap_write___nyapc1__getTaskQueue(soap, data) ( soap_begin_send(soap) || (soap_serialize___nyapc1__getTaskQueue(soap, data), 0) || soap_put___nyapc1__getTaskQueue(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put___nyapc1__getTaskQueue(struct soap*, const struct __nyapc1__getTaskQueue *, const char*, const char*);

#define soap_read___nyapc1__getTaskQueue(soap, data) ( soap_begin_recv(soap) || !soap_get___nyapc1__getTaskQueue(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct __nyapc1__getTaskQueue * SOAP_FMAC4 soap_get___nyapc1__getTaskQueue(struct soap*, struct __nyapc1__getTaskQueue *, const char*, const char*);

#define soap_new___nyapc1__getTaskQueue(soap, n) ::soap_instantiate___nyapc1__getTaskQueue(soap, n, NULL, NULL, NULL)


#define soap_delete___nyapc1__getTaskQueue(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __nyapc1__getTaskQueue * SOAP_FMAC2 soap_instantiate___nyapc1__getTaskQueue(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___nyapc1__getTaskQueue(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___nyapc1__updateWrapGen
#define SOAP_TYPE___nyapc1__updateWrapGen (162)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___nyapc1__updateWrapGen(struct soap*, struct __nyapc1__updateWrapGen *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___nyapc1__updateWrapGen(struct soap*, const struct __nyapc1__updateWrapGen *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___nyapc1__updateWrapGen(struct soap*, const char*, int, const struct __nyapc1__updateWrapGen *, const char*);
SOAP_FMAC3 struct __nyapc1__updateWrapGen * SOAP_FMAC4 soap_in___nyapc1__updateWrapGen(struct soap*, const char*, struct __nyapc1__updateWrapGen *, const char*);

#define soap_write___nyapc1__updateWrapGen(soap, data) ( soap_begin_send(soap) || (soap_serialize___nyapc1__updateWrapGen(soap, data), 0) || soap_put___nyapc1__updateWrapGen(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put___nyapc1__updateWrapGen(struct soap*, const struct __nyapc1__updateWrapGen *, const char*, const char*);

#define soap_read___nyapc1__updateWrapGen(soap, data) ( soap_begin_recv(soap) || !soap_get___nyapc1__updateWrapGen(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct __nyapc1__updateWrapGen * SOAP_FMAC4 soap_get___nyapc1__updateWrapGen(struct soap*, struct __nyapc1__updateWrapGen *, const char*, const char*);

#define soap_new___nyapc1__updateWrapGen(soap, n) ::soap_instantiate___nyapc1__updateWrapGen(soap, n, NULL, NULL, NULL)


#define soap_delete___nyapc1__updateWrapGen(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __nyapc1__updateWrapGen * SOAP_FMAC2 soap_instantiate___nyapc1__updateWrapGen(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___nyapc1__updateWrapGen(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___nyapc1__getWrapGen
#define SOAP_TYPE___nyapc1__getWrapGen (158)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___nyapc1__getWrapGen(struct soap*, struct __nyapc1__getWrapGen *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___nyapc1__getWrapGen(struct soap*, const struct __nyapc1__getWrapGen *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___nyapc1__getWrapGen(struct soap*, const char*, int, const struct __nyapc1__getWrapGen *, const char*);
SOAP_FMAC3 struct __nyapc1__getWrapGen * SOAP_FMAC4 soap_in___nyapc1__getWrapGen(struct soap*, const char*, struct __nyapc1__getWrapGen *, const char*);

#define soap_write___nyapc1__getWrapGen(soap, data) ( soap_begin_send(soap) || (soap_serialize___nyapc1__getWrapGen(soap, data), 0) || soap_put___nyapc1__getWrapGen(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put___nyapc1__getWrapGen(struct soap*, const struct __nyapc1__getWrapGen *, const char*, const char*);

#define soap_read___nyapc1__getWrapGen(soap, data) ( soap_begin_recv(soap) || !soap_get___nyapc1__getWrapGen(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct __nyapc1__getWrapGen * SOAP_FMAC4 soap_get___nyapc1__getWrapGen(struct soap*, struct __nyapc1__getWrapGen *, const char*, const char*);

#define soap_new___nyapc1__getWrapGen(soap, n) ::soap_instantiate___nyapc1__getWrapGen(soap, n, NULL, NULL, NULL)


#define soap_delete___nyapc1__getWrapGen(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __nyapc1__getWrapGen * SOAP_FMAC2 soap_instantiate___nyapc1__getWrapGen(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___nyapc1__getWrapGen(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___nyapc1__getJobsWrapStatInvalid
#define SOAP_TYPE___nyapc1__getJobsWrapStatInvalid (154)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___nyapc1__getJobsWrapStatInvalid(struct soap*, struct __nyapc1__getJobsWrapStatInvalid *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___nyapc1__getJobsWrapStatInvalid(struct soap*, const struct __nyapc1__getJobsWrapStatInvalid *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___nyapc1__getJobsWrapStatInvalid(struct soap*, const char*, int, const struct __nyapc1__getJobsWrapStatInvalid *, const char*);
SOAP_FMAC3 struct __nyapc1__getJobsWrapStatInvalid * SOAP_FMAC4 soap_in___nyapc1__getJobsWrapStatInvalid(struct soap*, const char*, struct __nyapc1__getJobsWrapStatInvalid *, const char*);

#define soap_write___nyapc1__getJobsWrapStatInvalid(soap, data) ( soap_begin_send(soap) || (soap_serialize___nyapc1__getJobsWrapStatInvalid(soap, data), 0) || soap_put___nyapc1__getJobsWrapStatInvalid(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put___nyapc1__getJobsWrapStatInvalid(struct soap*, const struct __nyapc1__getJobsWrapStatInvalid *, const char*, const char*);

#define soap_read___nyapc1__getJobsWrapStatInvalid(soap, data) ( soap_begin_recv(soap) || !soap_get___nyapc1__getJobsWrapStatInvalid(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct __nyapc1__getJobsWrapStatInvalid * SOAP_FMAC4 soap_get___nyapc1__getJobsWrapStatInvalid(struct soap*, struct __nyapc1__getJobsWrapStatInvalid *, const char*, const char*);

#define soap_new___nyapc1__getJobsWrapStatInvalid(soap, n) ::soap_instantiate___nyapc1__getJobsWrapStatInvalid(soap, n, NULL, NULL, NULL)


#define soap_delete___nyapc1__getJobsWrapStatInvalid(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __nyapc1__getJobsWrapStatInvalid * SOAP_FMAC2 soap_instantiate___nyapc1__getJobsWrapStatInvalid(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___nyapc1__getJobsWrapStatInvalid(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___nyapc1__getJobs
#define SOAP_TYPE___nyapc1__getJobs (150)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___nyapc1__getJobs(struct soap*, struct __nyapc1__getJobs *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___nyapc1__getJobs(struct soap*, const struct __nyapc1__getJobs *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___nyapc1__getJobs(struct soap*, const char*, int, const struct __nyapc1__getJobs *, const char*);
SOAP_FMAC3 struct __nyapc1__getJobs * SOAP_FMAC4 soap_in___nyapc1__getJobs(struct soap*, const char*, struct __nyapc1__getJobs *, const char*);

#define soap_write___nyapc1__getJobs(soap, data) ( soap_begin_send(soap) || (soap_serialize___nyapc1__getJobs(soap, data), 0) || soap_put___nyapc1__getJobs(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put___nyapc1__getJobs(struct soap*, const struct __nyapc1__getJobs *, const char*, const char*);

#define soap_read___nyapc1__getJobs(soap, data) ( soap_begin_recv(soap) || !soap_get___nyapc1__getJobs(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct __nyapc1__getJobs * SOAP_FMAC4 soap_get___nyapc1__getJobs(struct soap*, struct __nyapc1__getJobs *, const char*, const char*);

#define soap_new___nyapc1__getJobs(soap, n) ::soap_instantiate___nyapc1__getJobs(soap, n, NULL, NULL, NULL)


#define soap_delete___nyapc1__getJobs(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __nyapc1__getJobs * SOAP_FMAC2 soap_instantiate___nyapc1__getJobs(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___nyapc1__getJobs(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___nyapc1__getJobID
#define SOAP_TYPE___nyapc1__getJobID (146)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___nyapc1__getJobID(struct soap*, struct __nyapc1__getJobID *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___nyapc1__getJobID(struct soap*, const struct __nyapc1__getJobID *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___nyapc1__getJobID(struct soap*, const char*, int, const struct __nyapc1__getJobID *, const char*);
SOAP_FMAC3 struct __nyapc1__getJobID * SOAP_FMAC4 soap_in___nyapc1__getJobID(struct soap*, const char*, struct __nyapc1__getJobID *, const char*);

#define soap_write___nyapc1__getJobID(soap, data) ( soap_begin_send(soap) || (soap_serialize___nyapc1__getJobID(soap, data), 0) || soap_put___nyapc1__getJobID(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put___nyapc1__getJobID(struct soap*, const struct __nyapc1__getJobID *, const char*, const char*);

#define soap_read___nyapc1__getJobID(soap, data) ( soap_begin_recv(soap) || !soap_get___nyapc1__getJobID(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct __nyapc1__getJobID * SOAP_FMAC4 soap_get___nyapc1__getJobID(struct soap*, struct __nyapc1__getJobID *, const char*, const char*);

#define soap_new___nyapc1__getJobID(soap, n) ::soap_instantiate___nyapc1__getJobID(soap, n, NULL, NULL, NULL)


#define soap_delete___nyapc1__getJobID(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __nyapc1__getJobID * SOAP_FMAC2 soap_instantiate___nyapc1__getJobID(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___nyapc1__getJobID(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___nyapc1__putResult
#define SOAP_TYPE___nyapc1__putResult (142)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___nyapc1__putResult(struct soap*, struct __nyapc1__putResult *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___nyapc1__putResult(struct soap*, const struct __nyapc1__putResult *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___nyapc1__putResult(struct soap*, const char*, int, const struct __nyapc1__putResult *, const char*);
SOAP_FMAC3 struct __nyapc1__putResult * SOAP_FMAC4 soap_in___nyapc1__putResult(struct soap*, const char*, struct __nyapc1__putResult *, const char*);

#define soap_write___nyapc1__putResult(soap, data) ( soap_begin_send(soap) || (soap_serialize___nyapc1__putResult(soap, data), 0) || soap_put___nyapc1__putResult(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put___nyapc1__putResult(struct soap*, const struct __nyapc1__putResult *, const char*, const char*);

#define soap_read___nyapc1__putResult(soap, data) ( soap_begin_recv(soap) || !soap_get___nyapc1__putResult(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct __nyapc1__putResult * SOAP_FMAC4 soap_get___nyapc1__putResult(struct soap*, struct __nyapc1__putResult *, const char*, const char*);

#define soap_new___nyapc1__putResult(soap, n) ::soap_instantiate___nyapc1__putResult(soap, n, NULL, NULL, NULL)


#define soap_delete___nyapc1__putResult(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __nyapc1__putResult * SOAP_FMAC2 soap_instantiate___nyapc1__putResult(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___nyapc1__putResult(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___nyapc1__getStat
#define SOAP_TYPE___nyapc1__getStat (138)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___nyapc1__getStat(struct soap*, struct __nyapc1__getStat *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___nyapc1__getStat(struct soap*, const struct __nyapc1__getStat *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___nyapc1__getStat(struct soap*, const char*, int, const struct __nyapc1__getStat *, const char*);
SOAP_FMAC3 struct __nyapc1__getStat * SOAP_FMAC4 soap_in___nyapc1__getStat(struct soap*, const char*, struct __nyapc1__getStat *, const char*);

#define soap_write___nyapc1__getStat(soap, data) ( soap_begin_send(soap) || (soap_serialize___nyapc1__getStat(soap, data), 0) || soap_put___nyapc1__getStat(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put___nyapc1__getStat(struct soap*, const struct __nyapc1__getStat *, const char*, const char*);

#define soap_read___nyapc1__getStat(soap, data) ( soap_begin_recv(soap) || !soap_get___nyapc1__getStat(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct __nyapc1__getStat * SOAP_FMAC4 soap_get___nyapc1__getStat(struct soap*, struct __nyapc1__getStat *, const char*, const char*);

#define soap_new___nyapc1__getStat(soap, n) ::soap_instantiate___nyapc1__getStat(soap, n, NULL, NULL, NULL)


#define soap_delete___nyapc1__getStat(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __nyapc1__getStat * SOAP_FMAC2 soap_instantiate___nyapc1__getStat(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___nyapc1__getStat(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___nyapc1__updateWrapperCheckOk
#define SOAP_TYPE___nyapc1__updateWrapperCheckOk (134)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___nyapc1__updateWrapperCheckOk(struct soap*, struct __nyapc1__updateWrapperCheckOk *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___nyapc1__updateWrapperCheckOk(struct soap*, const struct __nyapc1__updateWrapperCheckOk *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___nyapc1__updateWrapperCheckOk(struct soap*, const char*, int, const struct __nyapc1__updateWrapperCheckOk *, const char*);
SOAP_FMAC3 struct __nyapc1__updateWrapperCheckOk * SOAP_FMAC4 soap_in___nyapc1__updateWrapperCheckOk(struct soap*, const char*, struct __nyapc1__updateWrapperCheckOk *, const char*);

#define soap_write___nyapc1__updateWrapperCheckOk(soap, data) ( soap_begin_send(soap) || (soap_serialize___nyapc1__updateWrapperCheckOk(soap, data), 0) || soap_put___nyapc1__updateWrapperCheckOk(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put___nyapc1__updateWrapperCheckOk(struct soap*, const struct __nyapc1__updateWrapperCheckOk *, const char*, const char*);

#define soap_read___nyapc1__updateWrapperCheckOk(soap, data) ( soap_begin_recv(soap) || !soap_get___nyapc1__updateWrapperCheckOk(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct __nyapc1__updateWrapperCheckOk * SOAP_FMAC4 soap_get___nyapc1__updateWrapperCheckOk(struct soap*, struct __nyapc1__updateWrapperCheckOk *, const char*, const char*);

#define soap_new___nyapc1__updateWrapperCheckOk(soap, n) ::soap_instantiate___nyapc1__updateWrapperCheckOk(soap, n, NULL, NULL, NULL)


#define soap_delete___nyapc1__updateWrapperCheckOk(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __nyapc1__updateWrapperCheckOk * SOAP_FMAC2 soap_instantiate___nyapc1__updateWrapperCheckOk(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___nyapc1__updateWrapperCheckOk(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___nyapc1__updateWrapper
#define SOAP_TYPE___nyapc1__updateWrapper (130)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___nyapc1__updateWrapper(struct soap*, struct __nyapc1__updateWrapper *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___nyapc1__updateWrapper(struct soap*, const struct __nyapc1__updateWrapper *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___nyapc1__updateWrapper(struct soap*, const char*, int, const struct __nyapc1__updateWrapper *, const char*);
SOAP_FMAC3 struct __nyapc1__updateWrapper * SOAP_FMAC4 soap_in___nyapc1__updateWrapper(struct soap*, const char*, struct __nyapc1__updateWrapper *, const char*);

#define soap_write___nyapc1__updateWrapper(soap, data) ( soap_begin_send(soap) || (soap_serialize___nyapc1__updateWrapper(soap, data), 0) || soap_put___nyapc1__updateWrapper(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put___nyapc1__updateWrapper(struct soap*, const struct __nyapc1__updateWrapper *, const char*, const char*);

#define soap_read___nyapc1__updateWrapper(soap, data) ( soap_begin_recv(soap) || !soap_get___nyapc1__updateWrapper(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct __nyapc1__updateWrapper * SOAP_FMAC4 soap_get___nyapc1__updateWrapper(struct soap*, struct __nyapc1__updateWrapper *, const char*, const char*);

#define soap_new___nyapc1__updateWrapper(soap, n) ::soap_instantiate___nyapc1__updateWrapper(soap, n, NULL, NULL, NULL)


#define soap_delete___nyapc1__updateWrapper(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __nyapc1__updateWrapper * SOAP_FMAC2 soap_instantiate___nyapc1__updateWrapper(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___nyapc1__updateWrapper(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___nyapc1__getWrapInvalidTask
#define SOAP_TYPE___nyapc1__getWrapInvalidTask (126)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___nyapc1__getWrapInvalidTask(struct soap*, struct __nyapc1__getWrapInvalidTask *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___nyapc1__getWrapInvalidTask(struct soap*, const struct __nyapc1__getWrapInvalidTask *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___nyapc1__getWrapInvalidTask(struct soap*, const char*, int, const struct __nyapc1__getWrapInvalidTask *, const char*);
SOAP_FMAC3 struct __nyapc1__getWrapInvalidTask * SOAP_FMAC4 soap_in___nyapc1__getWrapInvalidTask(struct soap*, const char*, struct __nyapc1__getWrapInvalidTask *, const char*);

#define soap_write___nyapc1__getWrapInvalidTask(soap, data) ( soap_begin_send(soap) || (soap_serialize___nyapc1__getWrapInvalidTask(soap, data), 0) || soap_put___nyapc1__getWrapInvalidTask(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put___nyapc1__getWrapInvalidTask(struct soap*, const struct __nyapc1__getWrapInvalidTask *, const char*, const char*);

#define soap_read___nyapc1__getWrapInvalidTask(soap, data) ( soap_begin_recv(soap) || !soap_get___nyapc1__getWrapInvalidTask(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct __nyapc1__getWrapInvalidTask * SOAP_FMAC4 soap_get___nyapc1__getWrapInvalidTask(struct soap*, struct __nyapc1__getWrapInvalidTask *, const char*, const char*);

#define soap_new___nyapc1__getWrapInvalidTask(soap, n) ::soap_instantiate___nyapc1__getWrapInvalidTask(soap, n, NULL, NULL, NULL)


#define soap_delete___nyapc1__getWrapInvalidTask(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __nyapc1__getWrapInvalidTask * SOAP_FMAC2 soap_instantiate___nyapc1__getWrapInvalidTask(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___nyapc1__getWrapInvalidTask(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___nyapc1__takeWrapTask
#define SOAP_TYPE___nyapc1__takeWrapTask (122)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___nyapc1__takeWrapTask(struct soap*, struct __nyapc1__takeWrapTask *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___nyapc1__takeWrapTask(struct soap*, const struct __nyapc1__takeWrapTask *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___nyapc1__takeWrapTask(struct soap*, const char*, int, const struct __nyapc1__takeWrapTask *, const char*);
SOAP_FMAC3 struct __nyapc1__takeWrapTask * SOAP_FMAC4 soap_in___nyapc1__takeWrapTask(struct soap*, const char*, struct __nyapc1__takeWrapTask *, const char*);

#define soap_write___nyapc1__takeWrapTask(soap, data) ( soap_begin_send(soap) || (soap_serialize___nyapc1__takeWrapTask(soap, data), 0) || soap_put___nyapc1__takeWrapTask(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put___nyapc1__takeWrapTask(struct soap*, const struct __nyapc1__takeWrapTask *, const char*, const char*);

#define soap_read___nyapc1__takeWrapTask(soap, data) ( soap_begin_recv(soap) || !soap_get___nyapc1__takeWrapTask(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct __nyapc1__takeWrapTask * SOAP_FMAC4 soap_get___nyapc1__takeWrapTask(struct soap*, struct __nyapc1__takeWrapTask *, const char*, const char*);

#define soap_new___nyapc1__takeWrapTask(soap, n) ::soap_instantiate___nyapc1__takeWrapTask(soap, n, NULL, NULL, NULL)


#define soap_delete___nyapc1__takeWrapTask(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __nyapc1__takeWrapTask * SOAP_FMAC2 soap_instantiate___nyapc1__takeWrapTask(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___nyapc1__takeWrapTask(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___nyapc1__getWrapTask
#define SOAP_TYPE___nyapc1__getWrapTask (118)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___nyapc1__getWrapTask(struct soap*, struct __nyapc1__getWrapTask *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___nyapc1__getWrapTask(struct soap*, const struct __nyapc1__getWrapTask *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___nyapc1__getWrapTask(struct soap*, const char*, int, const struct __nyapc1__getWrapTask *, const char*);
SOAP_FMAC3 struct __nyapc1__getWrapTask * SOAP_FMAC4 soap_in___nyapc1__getWrapTask(struct soap*, const char*, struct __nyapc1__getWrapTask *, const char*);

#define soap_write___nyapc1__getWrapTask(soap, data) ( soap_begin_send(soap) || (soap_serialize___nyapc1__getWrapTask(soap, data), 0) || soap_put___nyapc1__getWrapTask(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put___nyapc1__getWrapTask(struct soap*, const struct __nyapc1__getWrapTask *, const char*, const char*);

#define soap_read___nyapc1__getWrapTask(soap, data) ( soap_begin_recv(soap) || !soap_get___nyapc1__getWrapTask(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct __nyapc1__getWrapTask * SOAP_FMAC4 soap_get___nyapc1__getWrapTask(struct soap*, struct __nyapc1__getWrapTask *, const char*, const char*);

#define soap_new___nyapc1__getWrapTask(soap, n) ::soap_instantiate___nyapc1__getWrapTask(soap, n, NULL, NULL, NULL)


#define soap_delete___nyapc1__getWrapTask(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __nyapc1__getWrapTask * SOAP_FMAC2 soap_instantiate___nyapc1__getWrapTask(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___nyapc1__getWrapTask(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___nyapc1__getTask
#define SOAP_TYPE___nyapc1__getTask (114)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___nyapc1__getTask(struct soap*, struct __nyapc1__getTask *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___nyapc1__getTask(struct soap*, const struct __nyapc1__getTask *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___nyapc1__getTask(struct soap*, const char*, int, const struct __nyapc1__getTask *, const char*);
SOAP_FMAC3 struct __nyapc1__getTask * SOAP_FMAC4 soap_in___nyapc1__getTask(struct soap*, const char*, struct __nyapc1__getTask *, const char*);

#define soap_write___nyapc1__getTask(soap, data) ( soap_begin_send(soap) || (soap_serialize___nyapc1__getTask(soap, data), 0) || soap_put___nyapc1__getTask(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put___nyapc1__getTask(struct soap*, const struct __nyapc1__getTask *, const char*, const char*);

#define soap_read___nyapc1__getTask(soap, data) ( soap_begin_recv(soap) || !soap_get___nyapc1__getTask(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct __nyapc1__getTask * SOAP_FMAC4 soap_get___nyapc1__getTask(struct soap*, struct __nyapc1__getTask *, const char*, const char*);

#define soap_new___nyapc1__getTask(soap, n) ::soap_instantiate___nyapc1__getTask(soap, n, NULL, NULL, NULL)


#define soap_delete___nyapc1__getTask(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __nyapc1__getTask * SOAP_FMAC2 soap_instantiate___nyapc1__getTask(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___nyapc1__getTask(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___nyapc1__addWrapper
#define SOAP_TYPE___nyapc1__addWrapper (110)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___nyapc1__addWrapper(struct soap*, struct __nyapc1__addWrapper *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___nyapc1__addWrapper(struct soap*, const struct __nyapc1__addWrapper *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___nyapc1__addWrapper(struct soap*, const char*, int, const struct __nyapc1__addWrapper *, const char*);
SOAP_FMAC3 struct __nyapc1__addWrapper * SOAP_FMAC4 soap_in___nyapc1__addWrapper(struct soap*, const char*, struct __nyapc1__addWrapper *, const char*);

#define soap_write___nyapc1__addWrapper(soap, data) ( soap_begin_send(soap) || (soap_serialize___nyapc1__addWrapper(soap, data), 0) || soap_put___nyapc1__addWrapper(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put___nyapc1__addWrapper(struct soap*, const struct __nyapc1__addWrapper *, const char*, const char*);

#define soap_read___nyapc1__addWrapper(soap, data) ( soap_begin_recv(soap) || !soap_get___nyapc1__addWrapper(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct __nyapc1__addWrapper * SOAP_FMAC4 soap_get___nyapc1__addWrapper(struct soap*, struct __nyapc1__addWrapper *, const char*, const char*);

#define soap_new___nyapc1__addWrapper(soap, n) ::soap_instantiate___nyapc1__addWrapper(soap, n, NULL, NULL, NULL)


#define soap_delete___nyapc1__addWrapper(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __nyapc1__addWrapper * SOAP_FMAC2 soap_instantiate___nyapc1__addWrapper(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___nyapc1__addWrapper(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___nyapc1__getWrapper
#define SOAP_TYPE___nyapc1__getWrapper (106)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___nyapc1__getWrapper(struct soap*, struct __nyapc1__getWrapper *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___nyapc1__getWrapper(struct soap*, const struct __nyapc1__getWrapper *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___nyapc1__getWrapper(struct soap*, const char*, int, const struct __nyapc1__getWrapper *, const char*);
SOAP_FMAC3 struct __nyapc1__getWrapper * SOAP_FMAC4 soap_in___nyapc1__getWrapper(struct soap*, const char*, struct __nyapc1__getWrapper *, const char*);

#define soap_write___nyapc1__getWrapper(soap, data) ( soap_begin_send(soap) || (soap_serialize___nyapc1__getWrapper(soap, data), 0) || soap_put___nyapc1__getWrapper(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put___nyapc1__getWrapper(struct soap*, const struct __nyapc1__getWrapper *, const char*, const char*);

#define soap_read___nyapc1__getWrapper(soap, data) ( soap_begin_recv(soap) || !soap_get___nyapc1__getWrapper(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct __nyapc1__getWrapper * SOAP_FMAC4 soap_get___nyapc1__getWrapper(struct soap*, struct __nyapc1__getWrapper *, const char*, const char*);

#define soap_new___nyapc1__getWrapper(soap, n) ::soap_instantiate___nyapc1__getWrapper(soap, n, NULL, NULL, NULL)


#define soap_delete___nyapc1__getWrapper(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __nyapc1__getWrapper * SOAP_FMAC2 soap_instantiate___nyapc1__getWrapper(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___nyapc1__getWrapper(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___nyapc1__updateJob
#define SOAP_TYPE___nyapc1__updateJob (102)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___nyapc1__updateJob(struct soap*, struct __nyapc1__updateJob *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___nyapc1__updateJob(struct soap*, const struct __nyapc1__updateJob *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___nyapc1__updateJob(struct soap*, const char*, int, const struct __nyapc1__updateJob *, const char*);
SOAP_FMAC3 struct __nyapc1__updateJob * SOAP_FMAC4 soap_in___nyapc1__updateJob(struct soap*, const char*, struct __nyapc1__updateJob *, const char*);

#define soap_write___nyapc1__updateJob(soap, data) ( soap_begin_send(soap) || (soap_serialize___nyapc1__updateJob(soap, data), 0) || soap_put___nyapc1__updateJob(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put___nyapc1__updateJob(struct soap*, const struct __nyapc1__updateJob *, const char*, const char*);

#define soap_read___nyapc1__updateJob(soap, data) ( soap_begin_recv(soap) || !soap_get___nyapc1__updateJob(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct __nyapc1__updateJob * SOAP_FMAC4 soap_get___nyapc1__updateJob(struct soap*, struct __nyapc1__updateJob *, const char*, const char*);

#define soap_new___nyapc1__updateJob(soap, n) ::soap_instantiate___nyapc1__updateJob(soap, n, NULL, NULL, NULL)


#define soap_delete___nyapc1__updateJob(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __nyapc1__updateJob * SOAP_FMAC2 soap_instantiate___nyapc1__updateJob(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___nyapc1__updateJob(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___nyapc1__hasTask
#define SOAP_TYPE___nyapc1__hasTask (98)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___nyapc1__hasTask(struct soap*, struct __nyapc1__hasTask *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___nyapc1__hasTask(struct soap*, const struct __nyapc1__hasTask *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___nyapc1__hasTask(struct soap*, const char*, int, const struct __nyapc1__hasTask *, const char*);
SOAP_FMAC3 struct __nyapc1__hasTask * SOAP_FMAC4 soap_in___nyapc1__hasTask(struct soap*, const char*, struct __nyapc1__hasTask *, const char*);

#define soap_write___nyapc1__hasTask(soap, data) ( soap_begin_send(soap) || (soap_serialize___nyapc1__hasTask(soap, data), 0) || soap_put___nyapc1__hasTask(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put___nyapc1__hasTask(struct soap*, const struct __nyapc1__hasTask *, const char*, const char*);

#define soap_read___nyapc1__hasTask(soap, data) ( soap_begin_recv(soap) || !soap_get___nyapc1__hasTask(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct __nyapc1__hasTask * SOAP_FMAC4 soap_get___nyapc1__hasTask(struct soap*, struct __nyapc1__hasTask *, const char*, const char*);

#define soap_new___nyapc1__hasTask(soap, n) ::soap_instantiate___nyapc1__hasTask(soap, n, NULL, NULL, NULL)


#define soap_delete___nyapc1__hasTask(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __nyapc1__hasTask * SOAP_FMAC2 soap_instantiate___nyapc1__hasTask(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___nyapc1__hasTask(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___nyapc1__addJob
#define SOAP_TYPE___nyapc1__addJob (94)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___nyapc1__addJob(struct soap*, struct __nyapc1__addJob *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___nyapc1__addJob(struct soap*, const struct __nyapc1__addJob *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___nyapc1__addJob(struct soap*, const char*, int, const struct __nyapc1__addJob *, const char*);
SOAP_FMAC3 struct __nyapc1__addJob * SOAP_FMAC4 soap_in___nyapc1__addJob(struct soap*, const char*, struct __nyapc1__addJob *, const char*);

#define soap_write___nyapc1__addJob(soap, data) ( soap_begin_send(soap) || (soap_serialize___nyapc1__addJob(soap, data), 0) || soap_put___nyapc1__addJob(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put___nyapc1__addJob(struct soap*, const struct __nyapc1__addJob *, const char*, const char*);

#define soap_read___nyapc1__addJob(soap, data) ( soap_begin_recv(soap) || !soap_get___nyapc1__addJob(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct __nyapc1__addJob * SOAP_FMAC4 soap_get___nyapc1__addJob(struct soap*, struct __nyapc1__addJob *, const char*, const char*);

#define soap_new___nyapc1__addJob(soap, n) ::soap_instantiate___nyapc1__addJob(soap, n, NULL, NULL, NULL)


#define soap_delete___nyapc1__addJob(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __nyapc1__addJob * SOAP_FMAC2 soap_instantiate___nyapc1__addJob(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___nyapc1__addJob(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___nyapc1__getJob
#define SOAP_TYPE___nyapc1__getJob (90)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___nyapc1__getJob(struct soap*, struct __nyapc1__getJob *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___nyapc1__getJob(struct soap*, const struct __nyapc1__getJob *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___nyapc1__getJob(struct soap*, const char*, int, const struct __nyapc1__getJob *, const char*);
SOAP_FMAC3 struct __nyapc1__getJob * SOAP_FMAC4 soap_in___nyapc1__getJob(struct soap*, const char*, struct __nyapc1__getJob *, const char*);

#define soap_write___nyapc1__getJob(soap, data) ( soap_begin_send(soap) || (soap_serialize___nyapc1__getJob(soap, data), 0) || soap_put___nyapc1__getJob(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put___nyapc1__getJob(struct soap*, const struct __nyapc1__getJob *, const char*, const char*);

#define soap_read___nyapc1__getJob(soap, data) ( soap_begin_recv(soap) || !soap_get___nyapc1__getJob(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct __nyapc1__getJob * SOAP_FMAC4 soap_get___nyapc1__getJob(struct soap*, struct __nyapc1__getJob *, const char*, const char*);

#define soap_new___nyapc1__getJob(soap, n) ::soap_instantiate___nyapc1__getJob(soap, n, NULL, NULL, NULL)


#define soap_delete___nyapc1__getJob(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __nyapc1__getJob * SOAP_FMAC2 soap_instantiate___nyapc1__getJob(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___nyapc1__getJob(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___nyapc1__getVersion
#define SOAP_TYPE___nyapc1__getVersion (86)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___nyapc1__getVersion(struct soap*, struct __nyapc1__getVersion *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___nyapc1__getVersion(struct soap*, const struct __nyapc1__getVersion *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___nyapc1__getVersion(struct soap*, const char*, int, const struct __nyapc1__getVersion *, const char*);
SOAP_FMAC3 struct __nyapc1__getVersion * SOAP_FMAC4 soap_in___nyapc1__getVersion(struct soap*, const char*, struct __nyapc1__getVersion *, const char*);

#define soap_write___nyapc1__getVersion(soap, data) ( soap_begin_send(soap) || (soap_serialize___nyapc1__getVersion(soap, data), 0) || soap_put___nyapc1__getVersion(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put___nyapc1__getVersion(struct soap*, const struct __nyapc1__getVersion *, const char*, const char*);

#define soap_read___nyapc1__getVersion(soap, data) ( soap_begin_recv(soap) || !soap_get___nyapc1__getVersion(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct __nyapc1__getVersion * SOAP_FMAC4 soap_get___nyapc1__getVersion(struct soap*, struct __nyapc1__getVersion *, const char*, const char*);

#define soap_new___nyapc1__getVersion(soap, n) ::soap_instantiate___nyapc1__getVersion(soap, n, NULL, NULL, NULL)


#define soap_delete___nyapc1__getVersion(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __nyapc1__getVersion * SOAP_FMAC2 soap_instantiate___nyapc1__getVersion(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___nyapc1__getVersion(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___nyapc1__add
#define SOAP_TYPE___nyapc1__add (82)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___nyapc1__add(struct soap*, struct __nyapc1__add *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___nyapc1__add(struct soap*, const struct __nyapc1__add *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___nyapc1__add(struct soap*, const char*, int, const struct __nyapc1__add *, const char*);
SOAP_FMAC3 struct __nyapc1__add * SOAP_FMAC4 soap_in___nyapc1__add(struct soap*, const char*, struct __nyapc1__add *, const char*);

#define soap_write___nyapc1__add(soap, data) ( soap_begin_send(soap) || (soap_serialize___nyapc1__add(soap, data), 0) || soap_put___nyapc1__add(soap, data, NULL, NULL) || soap_end_send(soap) )


SOAP_FMAC3 int SOAP_FMAC4 soap_put___nyapc1__add(struct soap*, const struct __nyapc1__add *, const char*, const char*);

#define soap_read___nyapc1__add(soap, data) ( soap_begin_recv(soap) || !soap_get___nyapc1__add(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct __nyapc1__add * SOAP_FMAC4 soap_get___nyapc1__add(struct soap*, struct __nyapc1__add *, const char*, const char*);

#define soap_new___nyapc1__add(soap, n) ::soap_instantiate___nyapc1__add(soap, n, NULL, NULL, NULL)


#define soap_delete___nyapc1__add(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct __nyapc1__add * SOAP_FMAC2 soap_instantiate___nyapc1__add(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy___nyapc1__add(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (208)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);

#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Reason(soap, data), 0) || soap_put_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (207)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);

#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Detail(soap, data), 0) || soap_put_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (201)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);

#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Code(soap, data), 0) || soap_put_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#endif

#ifndef SOAP_TYPE_PointerTo_nyapc1__getWraptypeResponse
#define SOAP_TYPE_PointerTo_nyapc1__getWraptypeResponse (196)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_nyapc1__getWraptypeResponse(struct soap*, _nyapc1__getWraptypeResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_nyapc1__getWraptypeResponse(struct soap*, const char *, int, _nyapc1__getWraptypeResponse *const*, const char *);
SOAP_FMAC3 _nyapc1__getWraptypeResponse ** SOAP_FMAC4 soap_in_PointerTo_nyapc1__getWraptypeResponse(struct soap*, const char*, _nyapc1__getWraptypeResponse **, const char*);

#define soap_write_PointerTo_nyapc1__getWraptypeResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_nyapc1__getWraptypeResponse(soap, data), 0) || soap_put_PointerTo_nyapc1__getWraptypeResponse(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_nyapc1__getWraptypeResponse(struct soap*, _nyapc1__getWraptypeResponse *const*, const char*, const char*);

#define soap_read_PointerTo_nyapc1__getWraptypeResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_nyapc1__getWraptypeResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__getWraptypeResponse ** SOAP_FMAC4 soap_get_PointerTo_nyapc1__getWraptypeResponse(struct soap*, _nyapc1__getWraptypeResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_nyapc1__getWraptype
#define SOAP_TYPE_PointerTo_nyapc1__getWraptype (195)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_nyapc1__getWraptype(struct soap*, _nyapc1__getWraptype *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_nyapc1__getWraptype(struct soap*, const char *, int, _nyapc1__getWraptype *const*, const char *);
SOAP_FMAC3 _nyapc1__getWraptype ** SOAP_FMAC4 soap_in_PointerTo_nyapc1__getWraptype(struct soap*, const char*, _nyapc1__getWraptype **, const char*);

#define soap_write_PointerTo_nyapc1__getWraptype(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_nyapc1__getWraptype(soap, data), 0) || soap_put_PointerTo_nyapc1__getWraptype(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_nyapc1__getWraptype(struct soap*, _nyapc1__getWraptype *const*, const char*, const char*);

#define soap_read_PointerTo_nyapc1__getWraptype(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_nyapc1__getWraptype(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__getWraptype ** SOAP_FMAC4 soap_get_PointerTo_nyapc1__getWraptype(struct soap*, _nyapc1__getWraptype **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_nyapc1__getWrapIdResponse
#define SOAP_TYPE_PointerTo_nyapc1__getWrapIdResponse (192)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_nyapc1__getWrapIdResponse(struct soap*, _nyapc1__getWrapIdResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_nyapc1__getWrapIdResponse(struct soap*, const char *, int, _nyapc1__getWrapIdResponse *const*, const char *);
SOAP_FMAC3 _nyapc1__getWrapIdResponse ** SOAP_FMAC4 soap_in_PointerTo_nyapc1__getWrapIdResponse(struct soap*, const char*, _nyapc1__getWrapIdResponse **, const char*);

#define soap_write_PointerTo_nyapc1__getWrapIdResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_nyapc1__getWrapIdResponse(soap, data), 0) || soap_put_PointerTo_nyapc1__getWrapIdResponse(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_nyapc1__getWrapIdResponse(struct soap*, _nyapc1__getWrapIdResponse *const*, const char*, const char*);

#define soap_read_PointerTo_nyapc1__getWrapIdResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_nyapc1__getWrapIdResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__getWrapIdResponse ** SOAP_FMAC4 soap_get_PointerTo_nyapc1__getWrapIdResponse(struct soap*, _nyapc1__getWrapIdResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_nyapc1__getWrapId
#define SOAP_TYPE_PointerTo_nyapc1__getWrapId (191)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_nyapc1__getWrapId(struct soap*, _nyapc1__getWrapId *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_nyapc1__getWrapId(struct soap*, const char *, int, _nyapc1__getWrapId *const*, const char *);
SOAP_FMAC3 _nyapc1__getWrapId ** SOAP_FMAC4 soap_in_PointerTo_nyapc1__getWrapId(struct soap*, const char*, _nyapc1__getWrapId **, const char*);

#define soap_write_PointerTo_nyapc1__getWrapId(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_nyapc1__getWrapId(soap, data), 0) || soap_put_PointerTo_nyapc1__getWrapId(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_nyapc1__getWrapId(struct soap*, _nyapc1__getWrapId *const*, const char*, const char*);

#define soap_read_PointerTo_nyapc1__getWrapId(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_nyapc1__getWrapId(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__getWrapId ** SOAP_FMAC4 soap_get_PointerTo_nyapc1__getWrapId(struct soap*, _nyapc1__getWrapId **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_nyapc1__getWrapInvalidTaskByJobIdResponse
#define SOAP_TYPE_PointerTo_nyapc1__getWrapInvalidTaskByJobIdResponse (188)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_nyapc1__getWrapInvalidTaskByJobIdResponse(struct soap*, _nyapc1__getWrapInvalidTaskByJobIdResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_nyapc1__getWrapInvalidTaskByJobIdResponse(struct soap*, const char *, int, _nyapc1__getWrapInvalidTaskByJobIdResponse *const*, const char *);
SOAP_FMAC3 _nyapc1__getWrapInvalidTaskByJobIdResponse ** SOAP_FMAC4 soap_in_PointerTo_nyapc1__getWrapInvalidTaskByJobIdResponse(struct soap*, const char*, _nyapc1__getWrapInvalidTaskByJobIdResponse **, const char*);

#define soap_write_PointerTo_nyapc1__getWrapInvalidTaskByJobIdResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_nyapc1__getWrapInvalidTaskByJobIdResponse(soap, data), 0) || soap_put_PointerTo_nyapc1__getWrapInvalidTaskByJobIdResponse(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_nyapc1__getWrapInvalidTaskByJobIdResponse(struct soap*, _nyapc1__getWrapInvalidTaskByJobIdResponse *const*, const char*, const char*);

#define soap_read_PointerTo_nyapc1__getWrapInvalidTaskByJobIdResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_nyapc1__getWrapInvalidTaskByJobIdResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__getWrapInvalidTaskByJobIdResponse ** SOAP_FMAC4 soap_get_PointerTo_nyapc1__getWrapInvalidTaskByJobIdResponse(struct soap*, _nyapc1__getWrapInvalidTaskByJobIdResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_nyapc1__getWrapInvalidTaskByJobId
#define SOAP_TYPE_PointerTo_nyapc1__getWrapInvalidTaskByJobId (187)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_nyapc1__getWrapInvalidTaskByJobId(struct soap*, _nyapc1__getWrapInvalidTaskByJobId *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_nyapc1__getWrapInvalidTaskByJobId(struct soap*, const char *, int, _nyapc1__getWrapInvalidTaskByJobId *const*, const char *);
SOAP_FMAC3 _nyapc1__getWrapInvalidTaskByJobId ** SOAP_FMAC4 soap_in_PointerTo_nyapc1__getWrapInvalidTaskByJobId(struct soap*, const char*, _nyapc1__getWrapInvalidTaskByJobId **, const char*);

#define soap_write_PointerTo_nyapc1__getWrapInvalidTaskByJobId(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_nyapc1__getWrapInvalidTaskByJobId(soap, data), 0) || soap_put_PointerTo_nyapc1__getWrapInvalidTaskByJobId(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_nyapc1__getWrapInvalidTaskByJobId(struct soap*, _nyapc1__getWrapInvalidTaskByJobId *const*, const char*, const char*);

#define soap_read_PointerTo_nyapc1__getWrapInvalidTaskByJobId(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_nyapc1__getWrapInvalidTaskByJobId(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__getWrapInvalidTaskByJobId ** SOAP_FMAC4 soap_get_PointerTo_nyapc1__getWrapInvalidTaskByJobId(struct soap*, _nyapc1__getWrapInvalidTaskByJobId **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_nyapc1__updateJobUrlResponse
#define SOAP_TYPE_PointerTo_nyapc1__updateJobUrlResponse (184)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_nyapc1__updateJobUrlResponse(struct soap*, _nyapc1__updateJobUrlResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_nyapc1__updateJobUrlResponse(struct soap*, const char *, int, _nyapc1__updateJobUrlResponse *const*, const char *);
SOAP_FMAC3 _nyapc1__updateJobUrlResponse ** SOAP_FMAC4 soap_in_PointerTo_nyapc1__updateJobUrlResponse(struct soap*, const char*, _nyapc1__updateJobUrlResponse **, const char*);

#define soap_write_PointerTo_nyapc1__updateJobUrlResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_nyapc1__updateJobUrlResponse(soap, data), 0) || soap_put_PointerTo_nyapc1__updateJobUrlResponse(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_nyapc1__updateJobUrlResponse(struct soap*, _nyapc1__updateJobUrlResponse *const*, const char*, const char*);

#define soap_read_PointerTo_nyapc1__updateJobUrlResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_nyapc1__updateJobUrlResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__updateJobUrlResponse ** SOAP_FMAC4 soap_get_PointerTo_nyapc1__updateJobUrlResponse(struct soap*, _nyapc1__updateJobUrlResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_nyapc1__updateJobUrl
#define SOAP_TYPE_PointerTo_nyapc1__updateJobUrl (183)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_nyapc1__updateJobUrl(struct soap*, _nyapc1__updateJobUrl *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_nyapc1__updateJobUrl(struct soap*, const char *, int, _nyapc1__updateJobUrl *const*, const char *);
SOAP_FMAC3 _nyapc1__updateJobUrl ** SOAP_FMAC4 soap_in_PointerTo_nyapc1__updateJobUrl(struct soap*, const char*, _nyapc1__updateJobUrl **, const char*);

#define soap_write_PointerTo_nyapc1__updateJobUrl(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_nyapc1__updateJobUrl(soap, data), 0) || soap_put_PointerTo_nyapc1__updateJobUrl(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_nyapc1__updateJobUrl(struct soap*, _nyapc1__updateJobUrl *const*, const char*, const char*);

#define soap_read_PointerTo_nyapc1__updateJobUrl(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_nyapc1__updateJobUrl(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__updateJobUrl ** SOAP_FMAC4 soap_get_PointerTo_nyapc1__updateJobUrl(struct soap*, _nyapc1__updateJobUrl **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_nyapc1__delJobResponse
#define SOAP_TYPE_PointerTo_nyapc1__delJobResponse (180)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_nyapc1__delJobResponse(struct soap*, _nyapc1__delJobResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_nyapc1__delJobResponse(struct soap*, const char *, int, _nyapc1__delJobResponse *const*, const char *);
SOAP_FMAC3 _nyapc1__delJobResponse ** SOAP_FMAC4 soap_in_PointerTo_nyapc1__delJobResponse(struct soap*, const char*, _nyapc1__delJobResponse **, const char*);

#define soap_write_PointerTo_nyapc1__delJobResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_nyapc1__delJobResponse(soap, data), 0) || soap_put_PointerTo_nyapc1__delJobResponse(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_nyapc1__delJobResponse(struct soap*, _nyapc1__delJobResponse *const*, const char*, const char*);

#define soap_read_PointerTo_nyapc1__delJobResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_nyapc1__delJobResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__delJobResponse ** SOAP_FMAC4 soap_get_PointerTo_nyapc1__delJobResponse(struct soap*, _nyapc1__delJobResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_nyapc1__delJob
#define SOAP_TYPE_PointerTo_nyapc1__delJob (179)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_nyapc1__delJob(struct soap*, _nyapc1__delJob *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_nyapc1__delJob(struct soap*, const char *, int, _nyapc1__delJob *const*, const char *);
SOAP_FMAC3 _nyapc1__delJob ** SOAP_FMAC4 soap_in_PointerTo_nyapc1__delJob(struct soap*, const char*, _nyapc1__delJob **, const char*);

#define soap_write_PointerTo_nyapc1__delJob(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_nyapc1__delJob(soap, data), 0) || soap_put_PointerTo_nyapc1__delJob(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_nyapc1__delJob(struct soap*, _nyapc1__delJob *const*, const char*, const char*);

#define soap_read_PointerTo_nyapc1__delJob(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_nyapc1__delJob(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__delJob ** SOAP_FMAC4 soap_get_PointerTo_nyapc1__delJob(struct soap*, _nyapc1__delJob **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_nyapc1__getTaskByJobIdResponse
#define SOAP_TYPE_PointerTo_nyapc1__getTaskByJobIdResponse (176)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_nyapc1__getTaskByJobIdResponse(struct soap*, _nyapc1__getTaskByJobIdResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_nyapc1__getTaskByJobIdResponse(struct soap*, const char *, int, _nyapc1__getTaskByJobIdResponse *const*, const char *);
SOAP_FMAC3 _nyapc1__getTaskByJobIdResponse ** SOAP_FMAC4 soap_in_PointerTo_nyapc1__getTaskByJobIdResponse(struct soap*, const char*, _nyapc1__getTaskByJobIdResponse **, const char*);

#define soap_write_PointerTo_nyapc1__getTaskByJobIdResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_nyapc1__getTaskByJobIdResponse(soap, data), 0) || soap_put_PointerTo_nyapc1__getTaskByJobIdResponse(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_nyapc1__getTaskByJobIdResponse(struct soap*, _nyapc1__getTaskByJobIdResponse *const*, const char*, const char*);

#define soap_read_PointerTo_nyapc1__getTaskByJobIdResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_nyapc1__getTaskByJobIdResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__getTaskByJobIdResponse ** SOAP_FMAC4 soap_get_PointerTo_nyapc1__getTaskByJobIdResponse(struct soap*, _nyapc1__getTaskByJobIdResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_nyapc1__getTaskByJobId
#define SOAP_TYPE_PointerTo_nyapc1__getTaskByJobId (175)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_nyapc1__getTaskByJobId(struct soap*, _nyapc1__getTaskByJobId *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_nyapc1__getTaskByJobId(struct soap*, const char *, int, _nyapc1__getTaskByJobId *const*, const char *);
SOAP_FMAC3 _nyapc1__getTaskByJobId ** SOAP_FMAC4 soap_in_PointerTo_nyapc1__getTaskByJobId(struct soap*, const char*, _nyapc1__getTaskByJobId **, const char*);

#define soap_write_PointerTo_nyapc1__getTaskByJobId(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_nyapc1__getTaskByJobId(soap, data), 0) || soap_put_PointerTo_nyapc1__getTaskByJobId(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_nyapc1__getTaskByJobId(struct soap*, _nyapc1__getTaskByJobId *const*, const char*, const char*);

#define soap_read_PointerTo_nyapc1__getTaskByJobId(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_nyapc1__getTaskByJobId(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__getTaskByJobId ** SOAP_FMAC4 soap_get_PointerTo_nyapc1__getTaskByJobId(struct soap*, _nyapc1__getTaskByJobId **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_nyapc1__takeTaskResponse
#define SOAP_TYPE_PointerTo_nyapc1__takeTaskResponse (172)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_nyapc1__takeTaskResponse(struct soap*, _nyapc1__takeTaskResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_nyapc1__takeTaskResponse(struct soap*, const char *, int, _nyapc1__takeTaskResponse *const*, const char *);
SOAP_FMAC3 _nyapc1__takeTaskResponse ** SOAP_FMAC4 soap_in_PointerTo_nyapc1__takeTaskResponse(struct soap*, const char*, _nyapc1__takeTaskResponse **, const char*);

#define soap_write_PointerTo_nyapc1__takeTaskResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_nyapc1__takeTaskResponse(soap, data), 0) || soap_put_PointerTo_nyapc1__takeTaskResponse(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_nyapc1__takeTaskResponse(struct soap*, _nyapc1__takeTaskResponse *const*, const char*, const char*);

#define soap_read_PointerTo_nyapc1__takeTaskResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_nyapc1__takeTaskResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__takeTaskResponse ** SOAP_FMAC4 soap_get_PointerTo_nyapc1__takeTaskResponse(struct soap*, _nyapc1__takeTaskResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_nyapc1__takeTask
#define SOAP_TYPE_PointerTo_nyapc1__takeTask (171)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_nyapc1__takeTask(struct soap*, _nyapc1__takeTask *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_nyapc1__takeTask(struct soap*, const char *, int, _nyapc1__takeTask *const*, const char *);
SOAP_FMAC3 _nyapc1__takeTask ** SOAP_FMAC4 soap_in_PointerTo_nyapc1__takeTask(struct soap*, const char*, _nyapc1__takeTask **, const char*);

#define soap_write_PointerTo_nyapc1__takeTask(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_nyapc1__takeTask(soap, data), 0) || soap_put_PointerTo_nyapc1__takeTask(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_nyapc1__takeTask(struct soap*, _nyapc1__takeTask *const*, const char*, const char*);

#define soap_read_PointerTo_nyapc1__takeTask(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_nyapc1__takeTask(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__takeTask ** SOAP_FMAC4 soap_get_PointerTo_nyapc1__takeTask(struct soap*, _nyapc1__takeTask **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_nyapc1__getWrapTaskQueueResponse
#define SOAP_TYPE_PointerTo_nyapc1__getWrapTaskQueueResponse (168)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_nyapc1__getWrapTaskQueueResponse(struct soap*, _nyapc1__getWrapTaskQueueResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_nyapc1__getWrapTaskQueueResponse(struct soap*, const char *, int, _nyapc1__getWrapTaskQueueResponse *const*, const char *);
SOAP_FMAC3 _nyapc1__getWrapTaskQueueResponse ** SOAP_FMAC4 soap_in_PointerTo_nyapc1__getWrapTaskQueueResponse(struct soap*, const char*, _nyapc1__getWrapTaskQueueResponse **, const char*);

#define soap_write_PointerTo_nyapc1__getWrapTaskQueueResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_nyapc1__getWrapTaskQueueResponse(soap, data), 0) || soap_put_PointerTo_nyapc1__getWrapTaskQueueResponse(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_nyapc1__getWrapTaskQueueResponse(struct soap*, _nyapc1__getWrapTaskQueueResponse *const*, const char*, const char*);

#define soap_read_PointerTo_nyapc1__getWrapTaskQueueResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_nyapc1__getWrapTaskQueueResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__getWrapTaskQueueResponse ** SOAP_FMAC4 soap_get_PointerTo_nyapc1__getWrapTaskQueueResponse(struct soap*, _nyapc1__getWrapTaskQueueResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_nyapc1__getWrapTaskQueue
#define SOAP_TYPE_PointerTo_nyapc1__getWrapTaskQueue (167)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_nyapc1__getWrapTaskQueue(struct soap*, _nyapc1__getWrapTaskQueue *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_nyapc1__getWrapTaskQueue(struct soap*, const char *, int, _nyapc1__getWrapTaskQueue *const*, const char *);
SOAP_FMAC3 _nyapc1__getWrapTaskQueue ** SOAP_FMAC4 soap_in_PointerTo_nyapc1__getWrapTaskQueue(struct soap*, const char*, _nyapc1__getWrapTaskQueue **, const char*);

#define soap_write_PointerTo_nyapc1__getWrapTaskQueue(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_nyapc1__getWrapTaskQueue(soap, data), 0) || soap_put_PointerTo_nyapc1__getWrapTaskQueue(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_nyapc1__getWrapTaskQueue(struct soap*, _nyapc1__getWrapTaskQueue *const*, const char*, const char*);

#define soap_read_PointerTo_nyapc1__getWrapTaskQueue(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_nyapc1__getWrapTaskQueue(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__getWrapTaskQueue ** SOAP_FMAC4 soap_get_PointerTo_nyapc1__getWrapTaskQueue(struct soap*, _nyapc1__getWrapTaskQueue **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_nyapc1__getTaskQueueResponse
#define SOAP_TYPE_PointerTo_nyapc1__getTaskQueueResponse (164)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_nyapc1__getTaskQueueResponse(struct soap*, _nyapc1__getTaskQueueResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_nyapc1__getTaskQueueResponse(struct soap*, const char *, int, _nyapc1__getTaskQueueResponse *const*, const char *);
SOAP_FMAC3 _nyapc1__getTaskQueueResponse ** SOAP_FMAC4 soap_in_PointerTo_nyapc1__getTaskQueueResponse(struct soap*, const char*, _nyapc1__getTaskQueueResponse **, const char*);

#define soap_write_PointerTo_nyapc1__getTaskQueueResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_nyapc1__getTaskQueueResponse(soap, data), 0) || soap_put_PointerTo_nyapc1__getTaskQueueResponse(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_nyapc1__getTaskQueueResponse(struct soap*, _nyapc1__getTaskQueueResponse *const*, const char*, const char*);

#define soap_read_PointerTo_nyapc1__getTaskQueueResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_nyapc1__getTaskQueueResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__getTaskQueueResponse ** SOAP_FMAC4 soap_get_PointerTo_nyapc1__getTaskQueueResponse(struct soap*, _nyapc1__getTaskQueueResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_nyapc1__getTaskQueue
#define SOAP_TYPE_PointerTo_nyapc1__getTaskQueue (163)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_nyapc1__getTaskQueue(struct soap*, _nyapc1__getTaskQueue *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_nyapc1__getTaskQueue(struct soap*, const char *, int, _nyapc1__getTaskQueue *const*, const char *);
SOAP_FMAC3 _nyapc1__getTaskQueue ** SOAP_FMAC4 soap_in_PointerTo_nyapc1__getTaskQueue(struct soap*, const char*, _nyapc1__getTaskQueue **, const char*);

#define soap_write_PointerTo_nyapc1__getTaskQueue(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_nyapc1__getTaskQueue(soap, data), 0) || soap_put_PointerTo_nyapc1__getTaskQueue(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_nyapc1__getTaskQueue(struct soap*, _nyapc1__getTaskQueue *const*, const char*, const char*);

#define soap_read_PointerTo_nyapc1__getTaskQueue(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_nyapc1__getTaskQueue(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__getTaskQueue ** SOAP_FMAC4 soap_get_PointerTo_nyapc1__getTaskQueue(struct soap*, _nyapc1__getTaskQueue **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_nyapc1__updateWrapGenResponse
#define SOAP_TYPE_PointerTo_nyapc1__updateWrapGenResponse (160)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_nyapc1__updateWrapGenResponse(struct soap*, _nyapc1__updateWrapGenResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_nyapc1__updateWrapGenResponse(struct soap*, const char *, int, _nyapc1__updateWrapGenResponse *const*, const char *);
SOAP_FMAC3 _nyapc1__updateWrapGenResponse ** SOAP_FMAC4 soap_in_PointerTo_nyapc1__updateWrapGenResponse(struct soap*, const char*, _nyapc1__updateWrapGenResponse **, const char*);

#define soap_write_PointerTo_nyapc1__updateWrapGenResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_nyapc1__updateWrapGenResponse(soap, data), 0) || soap_put_PointerTo_nyapc1__updateWrapGenResponse(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_nyapc1__updateWrapGenResponse(struct soap*, _nyapc1__updateWrapGenResponse *const*, const char*, const char*);

#define soap_read_PointerTo_nyapc1__updateWrapGenResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_nyapc1__updateWrapGenResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__updateWrapGenResponse ** SOAP_FMAC4 soap_get_PointerTo_nyapc1__updateWrapGenResponse(struct soap*, _nyapc1__updateWrapGenResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_nyapc1__updateWrapGen
#define SOAP_TYPE_PointerTo_nyapc1__updateWrapGen (159)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_nyapc1__updateWrapGen(struct soap*, _nyapc1__updateWrapGen *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_nyapc1__updateWrapGen(struct soap*, const char *, int, _nyapc1__updateWrapGen *const*, const char *);
SOAP_FMAC3 _nyapc1__updateWrapGen ** SOAP_FMAC4 soap_in_PointerTo_nyapc1__updateWrapGen(struct soap*, const char*, _nyapc1__updateWrapGen **, const char*);

#define soap_write_PointerTo_nyapc1__updateWrapGen(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_nyapc1__updateWrapGen(soap, data), 0) || soap_put_PointerTo_nyapc1__updateWrapGen(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_nyapc1__updateWrapGen(struct soap*, _nyapc1__updateWrapGen *const*, const char*, const char*);

#define soap_read_PointerTo_nyapc1__updateWrapGen(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_nyapc1__updateWrapGen(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__updateWrapGen ** SOAP_FMAC4 soap_get_PointerTo_nyapc1__updateWrapGen(struct soap*, _nyapc1__updateWrapGen **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_nyapc1__getWrapGenResponse
#define SOAP_TYPE_PointerTo_nyapc1__getWrapGenResponse (156)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_nyapc1__getWrapGenResponse(struct soap*, _nyapc1__getWrapGenResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_nyapc1__getWrapGenResponse(struct soap*, const char *, int, _nyapc1__getWrapGenResponse *const*, const char *);
SOAP_FMAC3 _nyapc1__getWrapGenResponse ** SOAP_FMAC4 soap_in_PointerTo_nyapc1__getWrapGenResponse(struct soap*, const char*, _nyapc1__getWrapGenResponse **, const char*);

#define soap_write_PointerTo_nyapc1__getWrapGenResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_nyapc1__getWrapGenResponse(soap, data), 0) || soap_put_PointerTo_nyapc1__getWrapGenResponse(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_nyapc1__getWrapGenResponse(struct soap*, _nyapc1__getWrapGenResponse *const*, const char*, const char*);

#define soap_read_PointerTo_nyapc1__getWrapGenResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_nyapc1__getWrapGenResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__getWrapGenResponse ** SOAP_FMAC4 soap_get_PointerTo_nyapc1__getWrapGenResponse(struct soap*, _nyapc1__getWrapGenResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_nyapc1__getWrapGen
#define SOAP_TYPE_PointerTo_nyapc1__getWrapGen (155)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_nyapc1__getWrapGen(struct soap*, _nyapc1__getWrapGen *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_nyapc1__getWrapGen(struct soap*, const char *, int, _nyapc1__getWrapGen *const*, const char *);
SOAP_FMAC3 _nyapc1__getWrapGen ** SOAP_FMAC4 soap_in_PointerTo_nyapc1__getWrapGen(struct soap*, const char*, _nyapc1__getWrapGen **, const char*);

#define soap_write_PointerTo_nyapc1__getWrapGen(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_nyapc1__getWrapGen(soap, data), 0) || soap_put_PointerTo_nyapc1__getWrapGen(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_nyapc1__getWrapGen(struct soap*, _nyapc1__getWrapGen *const*, const char*, const char*);

#define soap_read_PointerTo_nyapc1__getWrapGen(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_nyapc1__getWrapGen(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__getWrapGen ** SOAP_FMAC4 soap_get_PointerTo_nyapc1__getWrapGen(struct soap*, _nyapc1__getWrapGen **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_nyapc1__getJobsWrapStatInvalidResponse
#define SOAP_TYPE_PointerTo_nyapc1__getJobsWrapStatInvalidResponse (152)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_nyapc1__getJobsWrapStatInvalidResponse(struct soap*, _nyapc1__getJobsWrapStatInvalidResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_nyapc1__getJobsWrapStatInvalidResponse(struct soap*, const char *, int, _nyapc1__getJobsWrapStatInvalidResponse *const*, const char *);
SOAP_FMAC3 _nyapc1__getJobsWrapStatInvalidResponse ** SOAP_FMAC4 soap_in_PointerTo_nyapc1__getJobsWrapStatInvalidResponse(struct soap*, const char*, _nyapc1__getJobsWrapStatInvalidResponse **, const char*);

#define soap_write_PointerTo_nyapc1__getJobsWrapStatInvalidResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_nyapc1__getJobsWrapStatInvalidResponse(soap, data), 0) || soap_put_PointerTo_nyapc1__getJobsWrapStatInvalidResponse(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_nyapc1__getJobsWrapStatInvalidResponse(struct soap*, _nyapc1__getJobsWrapStatInvalidResponse *const*, const char*, const char*);

#define soap_read_PointerTo_nyapc1__getJobsWrapStatInvalidResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_nyapc1__getJobsWrapStatInvalidResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__getJobsWrapStatInvalidResponse ** SOAP_FMAC4 soap_get_PointerTo_nyapc1__getJobsWrapStatInvalidResponse(struct soap*, _nyapc1__getJobsWrapStatInvalidResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_nyapc1__getJobsWrapStatInvalid
#define SOAP_TYPE_PointerTo_nyapc1__getJobsWrapStatInvalid (151)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_nyapc1__getJobsWrapStatInvalid(struct soap*, _nyapc1__getJobsWrapStatInvalid *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_nyapc1__getJobsWrapStatInvalid(struct soap*, const char *, int, _nyapc1__getJobsWrapStatInvalid *const*, const char *);
SOAP_FMAC3 _nyapc1__getJobsWrapStatInvalid ** SOAP_FMAC4 soap_in_PointerTo_nyapc1__getJobsWrapStatInvalid(struct soap*, const char*, _nyapc1__getJobsWrapStatInvalid **, const char*);

#define soap_write_PointerTo_nyapc1__getJobsWrapStatInvalid(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_nyapc1__getJobsWrapStatInvalid(soap, data), 0) || soap_put_PointerTo_nyapc1__getJobsWrapStatInvalid(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_nyapc1__getJobsWrapStatInvalid(struct soap*, _nyapc1__getJobsWrapStatInvalid *const*, const char*, const char*);

#define soap_read_PointerTo_nyapc1__getJobsWrapStatInvalid(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_nyapc1__getJobsWrapStatInvalid(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__getJobsWrapStatInvalid ** SOAP_FMAC4 soap_get_PointerTo_nyapc1__getJobsWrapStatInvalid(struct soap*, _nyapc1__getJobsWrapStatInvalid **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_nyapc1__getJobsResponse
#define SOAP_TYPE_PointerTo_nyapc1__getJobsResponse (148)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_nyapc1__getJobsResponse(struct soap*, _nyapc1__getJobsResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_nyapc1__getJobsResponse(struct soap*, const char *, int, _nyapc1__getJobsResponse *const*, const char *);
SOAP_FMAC3 _nyapc1__getJobsResponse ** SOAP_FMAC4 soap_in_PointerTo_nyapc1__getJobsResponse(struct soap*, const char*, _nyapc1__getJobsResponse **, const char*);

#define soap_write_PointerTo_nyapc1__getJobsResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_nyapc1__getJobsResponse(soap, data), 0) || soap_put_PointerTo_nyapc1__getJobsResponse(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_nyapc1__getJobsResponse(struct soap*, _nyapc1__getJobsResponse *const*, const char*, const char*);

#define soap_read_PointerTo_nyapc1__getJobsResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_nyapc1__getJobsResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__getJobsResponse ** SOAP_FMAC4 soap_get_PointerTo_nyapc1__getJobsResponse(struct soap*, _nyapc1__getJobsResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_nyapc1__getJobs
#define SOAP_TYPE_PointerTo_nyapc1__getJobs (147)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_nyapc1__getJobs(struct soap*, _nyapc1__getJobs *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_nyapc1__getJobs(struct soap*, const char *, int, _nyapc1__getJobs *const*, const char *);
SOAP_FMAC3 _nyapc1__getJobs ** SOAP_FMAC4 soap_in_PointerTo_nyapc1__getJobs(struct soap*, const char*, _nyapc1__getJobs **, const char*);

#define soap_write_PointerTo_nyapc1__getJobs(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_nyapc1__getJobs(soap, data), 0) || soap_put_PointerTo_nyapc1__getJobs(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_nyapc1__getJobs(struct soap*, _nyapc1__getJobs *const*, const char*, const char*);

#define soap_read_PointerTo_nyapc1__getJobs(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_nyapc1__getJobs(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__getJobs ** SOAP_FMAC4 soap_get_PointerTo_nyapc1__getJobs(struct soap*, _nyapc1__getJobs **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_nyapc1__getJobIDResponse
#define SOAP_TYPE_PointerTo_nyapc1__getJobIDResponse (144)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_nyapc1__getJobIDResponse(struct soap*, _nyapc1__getJobIDResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_nyapc1__getJobIDResponse(struct soap*, const char *, int, _nyapc1__getJobIDResponse *const*, const char *);
SOAP_FMAC3 _nyapc1__getJobIDResponse ** SOAP_FMAC4 soap_in_PointerTo_nyapc1__getJobIDResponse(struct soap*, const char*, _nyapc1__getJobIDResponse **, const char*);

#define soap_write_PointerTo_nyapc1__getJobIDResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_nyapc1__getJobIDResponse(soap, data), 0) || soap_put_PointerTo_nyapc1__getJobIDResponse(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_nyapc1__getJobIDResponse(struct soap*, _nyapc1__getJobIDResponse *const*, const char*, const char*);

#define soap_read_PointerTo_nyapc1__getJobIDResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_nyapc1__getJobIDResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__getJobIDResponse ** SOAP_FMAC4 soap_get_PointerTo_nyapc1__getJobIDResponse(struct soap*, _nyapc1__getJobIDResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_nyapc1__getJobID
#define SOAP_TYPE_PointerTo_nyapc1__getJobID (143)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_nyapc1__getJobID(struct soap*, _nyapc1__getJobID *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_nyapc1__getJobID(struct soap*, const char *, int, _nyapc1__getJobID *const*, const char *);
SOAP_FMAC3 _nyapc1__getJobID ** SOAP_FMAC4 soap_in_PointerTo_nyapc1__getJobID(struct soap*, const char*, _nyapc1__getJobID **, const char*);

#define soap_write_PointerTo_nyapc1__getJobID(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_nyapc1__getJobID(soap, data), 0) || soap_put_PointerTo_nyapc1__getJobID(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_nyapc1__getJobID(struct soap*, _nyapc1__getJobID *const*, const char*, const char*);

#define soap_read_PointerTo_nyapc1__getJobID(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_nyapc1__getJobID(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__getJobID ** SOAP_FMAC4 soap_get_PointerTo_nyapc1__getJobID(struct soap*, _nyapc1__getJobID **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_nyapc1__putResultResponse
#define SOAP_TYPE_PointerTo_nyapc1__putResultResponse (140)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_nyapc1__putResultResponse(struct soap*, _nyapc1__putResultResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_nyapc1__putResultResponse(struct soap*, const char *, int, _nyapc1__putResultResponse *const*, const char *);
SOAP_FMAC3 _nyapc1__putResultResponse ** SOAP_FMAC4 soap_in_PointerTo_nyapc1__putResultResponse(struct soap*, const char*, _nyapc1__putResultResponse **, const char*);

#define soap_write_PointerTo_nyapc1__putResultResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_nyapc1__putResultResponse(soap, data), 0) || soap_put_PointerTo_nyapc1__putResultResponse(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_nyapc1__putResultResponse(struct soap*, _nyapc1__putResultResponse *const*, const char*, const char*);

#define soap_read_PointerTo_nyapc1__putResultResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_nyapc1__putResultResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__putResultResponse ** SOAP_FMAC4 soap_get_PointerTo_nyapc1__putResultResponse(struct soap*, _nyapc1__putResultResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_nyapc1__putResult
#define SOAP_TYPE_PointerTo_nyapc1__putResult (139)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_nyapc1__putResult(struct soap*, _nyapc1__putResult *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_nyapc1__putResult(struct soap*, const char *, int, _nyapc1__putResult *const*, const char *);
SOAP_FMAC3 _nyapc1__putResult ** SOAP_FMAC4 soap_in_PointerTo_nyapc1__putResult(struct soap*, const char*, _nyapc1__putResult **, const char*);

#define soap_write_PointerTo_nyapc1__putResult(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_nyapc1__putResult(soap, data), 0) || soap_put_PointerTo_nyapc1__putResult(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_nyapc1__putResult(struct soap*, _nyapc1__putResult *const*, const char*, const char*);

#define soap_read_PointerTo_nyapc1__putResult(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_nyapc1__putResult(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__putResult ** SOAP_FMAC4 soap_get_PointerTo_nyapc1__putResult(struct soap*, _nyapc1__putResult **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_nyapc1__getStatResponse
#define SOAP_TYPE_PointerTo_nyapc1__getStatResponse (136)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_nyapc1__getStatResponse(struct soap*, _nyapc1__getStatResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_nyapc1__getStatResponse(struct soap*, const char *, int, _nyapc1__getStatResponse *const*, const char *);
SOAP_FMAC3 _nyapc1__getStatResponse ** SOAP_FMAC4 soap_in_PointerTo_nyapc1__getStatResponse(struct soap*, const char*, _nyapc1__getStatResponse **, const char*);

#define soap_write_PointerTo_nyapc1__getStatResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_nyapc1__getStatResponse(soap, data), 0) || soap_put_PointerTo_nyapc1__getStatResponse(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_nyapc1__getStatResponse(struct soap*, _nyapc1__getStatResponse *const*, const char*, const char*);

#define soap_read_PointerTo_nyapc1__getStatResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_nyapc1__getStatResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__getStatResponse ** SOAP_FMAC4 soap_get_PointerTo_nyapc1__getStatResponse(struct soap*, _nyapc1__getStatResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_nyapc1__getStat
#define SOAP_TYPE_PointerTo_nyapc1__getStat (135)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_nyapc1__getStat(struct soap*, _nyapc1__getStat *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_nyapc1__getStat(struct soap*, const char *, int, _nyapc1__getStat *const*, const char *);
SOAP_FMAC3 _nyapc1__getStat ** SOAP_FMAC4 soap_in_PointerTo_nyapc1__getStat(struct soap*, const char*, _nyapc1__getStat **, const char*);

#define soap_write_PointerTo_nyapc1__getStat(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_nyapc1__getStat(soap, data), 0) || soap_put_PointerTo_nyapc1__getStat(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_nyapc1__getStat(struct soap*, _nyapc1__getStat *const*, const char*, const char*);

#define soap_read_PointerTo_nyapc1__getStat(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_nyapc1__getStat(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__getStat ** SOAP_FMAC4 soap_get_PointerTo_nyapc1__getStat(struct soap*, _nyapc1__getStat **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_nyapc1__updateWrapperCheckOkResponse
#define SOAP_TYPE_PointerTo_nyapc1__updateWrapperCheckOkResponse (132)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_nyapc1__updateWrapperCheckOkResponse(struct soap*, _nyapc1__updateWrapperCheckOkResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_nyapc1__updateWrapperCheckOkResponse(struct soap*, const char *, int, _nyapc1__updateWrapperCheckOkResponse *const*, const char *);
SOAP_FMAC3 _nyapc1__updateWrapperCheckOkResponse ** SOAP_FMAC4 soap_in_PointerTo_nyapc1__updateWrapperCheckOkResponse(struct soap*, const char*, _nyapc1__updateWrapperCheckOkResponse **, const char*);

#define soap_write_PointerTo_nyapc1__updateWrapperCheckOkResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_nyapc1__updateWrapperCheckOkResponse(soap, data), 0) || soap_put_PointerTo_nyapc1__updateWrapperCheckOkResponse(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_nyapc1__updateWrapperCheckOkResponse(struct soap*, _nyapc1__updateWrapperCheckOkResponse *const*, const char*, const char*);

#define soap_read_PointerTo_nyapc1__updateWrapperCheckOkResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_nyapc1__updateWrapperCheckOkResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__updateWrapperCheckOkResponse ** SOAP_FMAC4 soap_get_PointerTo_nyapc1__updateWrapperCheckOkResponse(struct soap*, _nyapc1__updateWrapperCheckOkResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_nyapc1__updateWrapperCheckOk
#define SOAP_TYPE_PointerTo_nyapc1__updateWrapperCheckOk (131)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_nyapc1__updateWrapperCheckOk(struct soap*, _nyapc1__updateWrapperCheckOk *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_nyapc1__updateWrapperCheckOk(struct soap*, const char *, int, _nyapc1__updateWrapperCheckOk *const*, const char *);
SOAP_FMAC3 _nyapc1__updateWrapperCheckOk ** SOAP_FMAC4 soap_in_PointerTo_nyapc1__updateWrapperCheckOk(struct soap*, const char*, _nyapc1__updateWrapperCheckOk **, const char*);

#define soap_write_PointerTo_nyapc1__updateWrapperCheckOk(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_nyapc1__updateWrapperCheckOk(soap, data), 0) || soap_put_PointerTo_nyapc1__updateWrapperCheckOk(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_nyapc1__updateWrapperCheckOk(struct soap*, _nyapc1__updateWrapperCheckOk *const*, const char*, const char*);

#define soap_read_PointerTo_nyapc1__updateWrapperCheckOk(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_nyapc1__updateWrapperCheckOk(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__updateWrapperCheckOk ** SOAP_FMAC4 soap_get_PointerTo_nyapc1__updateWrapperCheckOk(struct soap*, _nyapc1__updateWrapperCheckOk **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_nyapc1__updateWrapperResponse
#define SOAP_TYPE_PointerTo_nyapc1__updateWrapperResponse (128)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_nyapc1__updateWrapperResponse(struct soap*, _nyapc1__updateWrapperResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_nyapc1__updateWrapperResponse(struct soap*, const char *, int, _nyapc1__updateWrapperResponse *const*, const char *);
SOAP_FMAC3 _nyapc1__updateWrapperResponse ** SOAP_FMAC4 soap_in_PointerTo_nyapc1__updateWrapperResponse(struct soap*, const char*, _nyapc1__updateWrapperResponse **, const char*);

#define soap_write_PointerTo_nyapc1__updateWrapperResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_nyapc1__updateWrapperResponse(soap, data), 0) || soap_put_PointerTo_nyapc1__updateWrapperResponse(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_nyapc1__updateWrapperResponse(struct soap*, _nyapc1__updateWrapperResponse *const*, const char*, const char*);

#define soap_read_PointerTo_nyapc1__updateWrapperResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_nyapc1__updateWrapperResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__updateWrapperResponse ** SOAP_FMAC4 soap_get_PointerTo_nyapc1__updateWrapperResponse(struct soap*, _nyapc1__updateWrapperResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_nyapc1__updateWrapper
#define SOAP_TYPE_PointerTo_nyapc1__updateWrapper (127)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_nyapc1__updateWrapper(struct soap*, _nyapc1__updateWrapper *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_nyapc1__updateWrapper(struct soap*, const char *, int, _nyapc1__updateWrapper *const*, const char *);
SOAP_FMAC3 _nyapc1__updateWrapper ** SOAP_FMAC4 soap_in_PointerTo_nyapc1__updateWrapper(struct soap*, const char*, _nyapc1__updateWrapper **, const char*);

#define soap_write_PointerTo_nyapc1__updateWrapper(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_nyapc1__updateWrapper(soap, data), 0) || soap_put_PointerTo_nyapc1__updateWrapper(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_nyapc1__updateWrapper(struct soap*, _nyapc1__updateWrapper *const*, const char*, const char*);

#define soap_read_PointerTo_nyapc1__updateWrapper(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_nyapc1__updateWrapper(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__updateWrapper ** SOAP_FMAC4 soap_get_PointerTo_nyapc1__updateWrapper(struct soap*, _nyapc1__updateWrapper **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_nyapc1__getWrapInvalidTaskResponse
#define SOAP_TYPE_PointerTo_nyapc1__getWrapInvalidTaskResponse (124)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_nyapc1__getWrapInvalidTaskResponse(struct soap*, _nyapc1__getWrapInvalidTaskResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_nyapc1__getWrapInvalidTaskResponse(struct soap*, const char *, int, _nyapc1__getWrapInvalidTaskResponse *const*, const char *);
SOAP_FMAC3 _nyapc1__getWrapInvalidTaskResponse ** SOAP_FMAC4 soap_in_PointerTo_nyapc1__getWrapInvalidTaskResponse(struct soap*, const char*, _nyapc1__getWrapInvalidTaskResponse **, const char*);

#define soap_write_PointerTo_nyapc1__getWrapInvalidTaskResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_nyapc1__getWrapInvalidTaskResponse(soap, data), 0) || soap_put_PointerTo_nyapc1__getWrapInvalidTaskResponse(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_nyapc1__getWrapInvalidTaskResponse(struct soap*, _nyapc1__getWrapInvalidTaskResponse *const*, const char*, const char*);

#define soap_read_PointerTo_nyapc1__getWrapInvalidTaskResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_nyapc1__getWrapInvalidTaskResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__getWrapInvalidTaskResponse ** SOAP_FMAC4 soap_get_PointerTo_nyapc1__getWrapInvalidTaskResponse(struct soap*, _nyapc1__getWrapInvalidTaskResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_nyapc1__getWrapInvalidTask
#define SOAP_TYPE_PointerTo_nyapc1__getWrapInvalidTask (123)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_nyapc1__getWrapInvalidTask(struct soap*, _nyapc1__getWrapInvalidTask *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_nyapc1__getWrapInvalidTask(struct soap*, const char *, int, _nyapc1__getWrapInvalidTask *const*, const char *);
SOAP_FMAC3 _nyapc1__getWrapInvalidTask ** SOAP_FMAC4 soap_in_PointerTo_nyapc1__getWrapInvalidTask(struct soap*, const char*, _nyapc1__getWrapInvalidTask **, const char*);

#define soap_write_PointerTo_nyapc1__getWrapInvalidTask(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_nyapc1__getWrapInvalidTask(soap, data), 0) || soap_put_PointerTo_nyapc1__getWrapInvalidTask(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_nyapc1__getWrapInvalidTask(struct soap*, _nyapc1__getWrapInvalidTask *const*, const char*, const char*);

#define soap_read_PointerTo_nyapc1__getWrapInvalidTask(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_nyapc1__getWrapInvalidTask(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__getWrapInvalidTask ** SOAP_FMAC4 soap_get_PointerTo_nyapc1__getWrapInvalidTask(struct soap*, _nyapc1__getWrapInvalidTask **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_nyapc1__takeWrapTaskResponse
#define SOAP_TYPE_PointerTo_nyapc1__takeWrapTaskResponse (120)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_nyapc1__takeWrapTaskResponse(struct soap*, _nyapc1__takeWrapTaskResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_nyapc1__takeWrapTaskResponse(struct soap*, const char *, int, _nyapc1__takeWrapTaskResponse *const*, const char *);
SOAP_FMAC3 _nyapc1__takeWrapTaskResponse ** SOAP_FMAC4 soap_in_PointerTo_nyapc1__takeWrapTaskResponse(struct soap*, const char*, _nyapc1__takeWrapTaskResponse **, const char*);

#define soap_write_PointerTo_nyapc1__takeWrapTaskResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_nyapc1__takeWrapTaskResponse(soap, data), 0) || soap_put_PointerTo_nyapc1__takeWrapTaskResponse(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_nyapc1__takeWrapTaskResponse(struct soap*, _nyapc1__takeWrapTaskResponse *const*, const char*, const char*);

#define soap_read_PointerTo_nyapc1__takeWrapTaskResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_nyapc1__takeWrapTaskResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__takeWrapTaskResponse ** SOAP_FMAC4 soap_get_PointerTo_nyapc1__takeWrapTaskResponse(struct soap*, _nyapc1__takeWrapTaskResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_nyapc1__takeWrapTask
#define SOAP_TYPE_PointerTo_nyapc1__takeWrapTask (119)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_nyapc1__takeWrapTask(struct soap*, _nyapc1__takeWrapTask *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_nyapc1__takeWrapTask(struct soap*, const char *, int, _nyapc1__takeWrapTask *const*, const char *);
SOAP_FMAC3 _nyapc1__takeWrapTask ** SOAP_FMAC4 soap_in_PointerTo_nyapc1__takeWrapTask(struct soap*, const char*, _nyapc1__takeWrapTask **, const char*);

#define soap_write_PointerTo_nyapc1__takeWrapTask(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_nyapc1__takeWrapTask(soap, data), 0) || soap_put_PointerTo_nyapc1__takeWrapTask(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_nyapc1__takeWrapTask(struct soap*, _nyapc1__takeWrapTask *const*, const char*, const char*);

#define soap_read_PointerTo_nyapc1__takeWrapTask(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_nyapc1__takeWrapTask(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__takeWrapTask ** SOAP_FMAC4 soap_get_PointerTo_nyapc1__takeWrapTask(struct soap*, _nyapc1__takeWrapTask **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_nyapc1__getWrapTaskResponse
#define SOAP_TYPE_PointerTo_nyapc1__getWrapTaskResponse (116)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_nyapc1__getWrapTaskResponse(struct soap*, _nyapc1__getWrapTaskResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_nyapc1__getWrapTaskResponse(struct soap*, const char *, int, _nyapc1__getWrapTaskResponse *const*, const char *);
SOAP_FMAC3 _nyapc1__getWrapTaskResponse ** SOAP_FMAC4 soap_in_PointerTo_nyapc1__getWrapTaskResponse(struct soap*, const char*, _nyapc1__getWrapTaskResponse **, const char*);

#define soap_write_PointerTo_nyapc1__getWrapTaskResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_nyapc1__getWrapTaskResponse(soap, data), 0) || soap_put_PointerTo_nyapc1__getWrapTaskResponse(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_nyapc1__getWrapTaskResponse(struct soap*, _nyapc1__getWrapTaskResponse *const*, const char*, const char*);

#define soap_read_PointerTo_nyapc1__getWrapTaskResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_nyapc1__getWrapTaskResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__getWrapTaskResponse ** SOAP_FMAC4 soap_get_PointerTo_nyapc1__getWrapTaskResponse(struct soap*, _nyapc1__getWrapTaskResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_nyapc1__getWrapTask
#define SOAP_TYPE_PointerTo_nyapc1__getWrapTask (115)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_nyapc1__getWrapTask(struct soap*, _nyapc1__getWrapTask *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_nyapc1__getWrapTask(struct soap*, const char *, int, _nyapc1__getWrapTask *const*, const char *);
SOAP_FMAC3 _nyapc1__getWrapTask ** SOAP_FMAC4 soap_in_PointerTo_nyapc1__getWrapTask(struct soap*, const char*, _nyapc1__getWrapTask **, const char*);

#define soap_write_PointerTo_nyapc1__getWrapTask(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_nyapc1__getWrapTask(soap, data), 0) || soap_put_PointerTo_nyapc1__getWrapTask(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_nyapc1__getWrapTask(struct soap*, _nyapc1__getWrapTask *const*, const char*, const char*);

#define soap_read_PointerTo_nyapc1__getWrapTask(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_nyapc1__getWrapTask(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__getWrapTask ** SOAP_FMAC4 soap_get_PointerTo_nyapc1__getWrapTask(struct soap*, _nyapc1__getWrapTask **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_nyapc1__getTaskResponse
#define SOAP_TYPE_PointerTo_nyapc1__getTaskResponse (112)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_nyapc1__getTaskResponse(struct soap*, _nyapc1__getTaskResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_nyapc1__getTaskResponse(struct soap*, const char *, int, _nyapc1__getTaskResponse *const*, const char *);
SOAP_FMAC3 _nyapc1__getTaskResponse ** SOAP_FMAC4 soap_in_PointerTo_nyapc1__getTaskResponse(struct soap*, const char*, _nyapc1__getTaskResponse **, const char*);

#define soap_write_PointerTo_nyapc1__getTaskResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_nyapc1__getTaskResponse(soap, data), 0) || soap_put_PointerTo_nyapc1__getTaskResponse(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_nyapc1__getTaskResponse(struct soap*, _nyapc1__getTaskResponse *const*, const char*, const char*);

#define soap_read_PointerTo_nyapc1__getTaskResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_nyapc1__getTaskResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__getTaskResponse ** SOAP_FMAC4 soap_get_PointerTo_nyapc1__getTaskResponse(struct soap*, _nyapc1__getTaskResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_nyapc1__getTask
#define SOAP_TYPE_PointerTo_nyapc1__getTask (111)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_nyapc1__getTask(struct soap*, _nyapc1__getTask *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_nyapc1__getTask(struct soap*, const char *, int, _nyapc1__getTask *const*, const char *);
SOAP_FMAC3 _nyapc1__getTask ** SOAP_FMAC4 soap_in_PointerTo_nyapc1__getTask(struct soap*, const char*, _nyapc1__getTask **, const char*);

#define soap_write_PointerTo_nyapc1__getTask(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_nyapc1__getTask(soap, data), 0) || soap_put_PointerTo_nyapc1__getTask(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_nyapc1__getTask(struct soap*, _nyapc1__getTask *const*, const char*, const char*);

#define soap_read_PointerTo_nyapc1__getTask(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_nyapc1__getTask(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__getTask ** SOAP_FMAC4 soap_get_PointerTo_nyapc1__getTask(struct soap*, _nyapc1__getTask **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_nyapc1__addWrapperResponse
#define SOAP_TYPE_PointerTo_nyapc1__addWrapperResponse (108)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_nyapc1__addWrapperResponse(struct soap*, _nyapc1__addWrapperResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_nyapc1__addWrapperResponse(struct soap*, const char *, int, _nyapc1__addWrapperResponse *const*, const char *);
SOAP_FMAC3 _nyapc1__addWrapperResponse ** SOAP_FMAC4 soap_in_PointerTo_nyapc1__addWrapperResponse(struct soap*, const char*, _nyapc1__addWrapperResponse **, const char*);

#define soap_write_PointerTo_nyapc1__addWrapperResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_nyapc1__addWrapperResponse(soap, data), 0) || soap_put_PointerTo_nyapc1__addWrapperResponse(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_nyapc1__addWrapperResponse(struct soap*, _nyapc1__addWrapperResponse *const*, const char*, const char*);

#define soap_read_PointerTo_nyapc1__addWrapperResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_nyapc1__addWrapperResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__addWrapperResponse ** SOAP_FMAC4 soap_get_PointerTo_nyapc1__addWrapperResponse(struct soap*, _nyapc1__addWrapperResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_nyapc1__addWrapper
#define SOAP_TYPE_PointerTo_nyapc1__addWrapper (107)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_nyapc1__addWrapper(struct soap*, _nyapc1__addWrapper *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_nyapc1__addWrapper(struct soap*, const char *, int, _nyapc1__addWrapper *const*, const char *);
SOAP_FMAC3 _nyapc1__addWrapper ** SOAP_FMAC4 soap_in_PointerTo_nyapc1__addWrapper(struct soap*, const char*, _nyapc1__addWrapper **, const char*);

#define soap_write_PointerTo_nyapc1__addWrapper(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_nyapc1__addWrapper(soap, data), 0) || soap_put_PointerTo_nyapc1__addWrapper(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_nyapc1__addWrapper(struct soap*, _nyapc1__addWrapper *const*, const char*, const char*);

#define soap_read_PointerTo_nyapc1__addWrapper(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_nyapc1__addWrapper(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__addWrapper ** SOAP_FMAC4 soap_get_PointerTo_nyapc1__addWrapper(struct soap*, _nyapc1__addWrapper **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_nyapc1__getWrapperResponse
#define SOAP_TYPE_PointerTo_nyapc1__getWrapperResponse (104)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_nyapc1__getWrapperResponse(struct soap*, _nyapc1__getWrapperResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_nyapc1__getWrapperResponse(struct soap*, const char *, int, _nyapc1__getWrapperResponse *const*, const char *);
SOAP_FMAC3 _nyapc1__getWrapperResponse ** SOAP_FMAC4 soap_in_PointerTo_nyapc1__getWrapperResponse(struct soap*, const char*, _nyapc1__getWrapperResponse **, const char*);

#define soap_write_PointerTo_nyapc1__getWrapperResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_nyapc1__getWrapperResponse(soap, data), 0) || soap_put_PointerTo_nyapc1__getWrapperResponse(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_nyapc1__getWrapperResponse(struct soap*, _nyapc1__getWrapperResponse *const*, const char*, const char*);

#define soap_read_PointerTo_nyapc1__getWrapperResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_nyapc1__getWrapperResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__getWrapperResponse ** SOAP_FMAC4 soap_get_PointerTo_nyapc1__getWrapperResponse(struct soap*, _nyapc1__getWrapperResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_nyapc1__getWrapper
#define SOAP_TYPE_PointerTo_nyapc1__getWrapper (103)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_nyapc1__getWrapper(struct soap*, _nyapc1__getWrapper *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_nyapc1__getWrapper(struct soap*, const char *, int, _nyapc1__getWrapper *const*, const char *);
SOAP_FMAC3 _nyapc1__getWrapper ** SOAP_FMAC4 soap_in_PointerTo_nyapc1__getWrapper(struct soap*, const char*, _nyapc1__getWrapper **, const char*);

#define soap_write_PointerTo_nyapc1__getWrapper(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_nyapc1__getWrapper(soap, data), 0) || soap_put_PointerTo_nyapc1__getWrapper(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_nyapc1__getWrapper(struct soap*, _nyapc1__getWrapper *const*, const char*, const char*);

#define soap_read_PointerTo_nyapc1__getWrapper(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_nyapc1__getWrapper(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__getWrapper ** SOAP_FMAC4 soap_get_PointerTo_nyapc1__getWrapper(struct soap*, _nyapc1__getWrapper **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_nyapc1__updateJobResponse
#define SOAP_TYPE_PointerTo_nyapc1__updateJobResponse (100)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_nyapc1__updateJobResponse(struct soap*, _nyapc1__updateJobResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_nyapc1__updateJobResponse(struct soap*, const char *, int, _nyapc1__updateJobResponse *const*, const char *);
SOAP_FMAC3 _nyapc1__updateJobResponse ** SOAP_FMAC4 soap_in_PointerTo_nyapc1__updateJobResponse(struct soap*, const char*, _nyapc1__updateJobResponse **, const char*);

#define soap_write_PointerTo_nyapc1__updateJobResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_nyapc1__updateJobResponse(soap, data), 0) || soap_put_PointerTo_nyapc1__updateJobResponse(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_nyapc1__updateJobResponse(struct soap*, _nyapc1__updateJobResponse *const*, const char*, const char*);

#define soap_read_PointerTo_nyapc1__updateJobResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_nyapc1__updateJobResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__updateJobResponse ** SOAP_FMAC4 soap_get_PointerTo_nyapc1__updateJobResponse(struct soap*, _nyapc1__updateJobResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_nyapc1__updateJob
#define SOAP_TYPE_PointerTo_nyapc1__updateJob (99)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_nyapc1__updateJob(struct soap*, _nyapc1__updateJob *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_nyapc1__updateJob(struct soap*, const char *, int, _nyapc1__updateJob *const*, const char *);
SOAP_FMAC3 _nyapc1__updateJob ** SOAP_FMAC4 soap_in_PointerTo_nyapc1__updateJob(struct soap*, const char*, _nyapc1__updateJob **, const char*);

#define soap_write_PointerTo_nyapc1__updateJob(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_nyapc1__updateJob(soap, data), 0) || soap_put_PointerTo_nyapc1__updateJob(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_nyapc1__updateJob(struct soap*, _nyapc1__updateJob *const*, const char*, const char*);

#define soap_read_PointerTo_nyapc1__updateJob(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_nyapc1__updateJob(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__updateJob ** SOAP_FMAC4 soap_get_PointerTo_nyapc1__updateJob(struct soap*, _nyapc1__updateJob **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_nyapc1__hasTaskResponse
#define SOAP_TYPE_PointerTo_nyapc1__hasTaskResponse (96)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_nyapc1__hasTaskResponse(struct soap*, _nyapc1__hasTaskResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_nyapc1__hasTaskResponse(struct soap*, const char *, int, _nyapc1__hasTaskResponse *const*, const char *);
SOAP_FMAC3 _nyapc1__hasTaskResponse ** SOAP_FMAC4 soap_in_PointerTo_nyapc1__hasTaskResponse(struct soap*, const char*, _nyapc1__hasTaskResponse **, const char*);

#define soap_write_PointerTo_nyapc1__hasTaskResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_nyapc1__hasTaskResponse(soap, data), 0) || soap_put_PointerTo_nyapc1__hasTaskResponse(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_nyapc1__hasTaskResponse(struct soap*, _nyapc1__hasTaskResponse *const*, const char*, const char*);

#define soap_read_PointerTo_nyapc1__hasTaskResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_nyapc1__hasTaskResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__hasTaskResponse ** SOAP_FMAC4 soap_get_PointerTo_nyapc1__hasTaskResponse(struct soap*, _nyapc1__hasTaskResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_nyapc1__hasTask
#define SOAP_TYPE_PointerTo_nyapc1__hasTask (95)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_nyapc1__hasTask(struct soap*, _nyapc1__hasTask *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_nyapc1__hasTask(struct soap*, const char *, int, _nyapc1__hasTask *const*, const char *);
SOAP_FMAC3 _nyapc1__hasTask ** SOAP_FMAC4 soap_in_PointerTo_nyapc1__hasTask(struct soap*, const char*, _nyapc1__hasTask **, const char*);

#define soap_write_PointerTo_nyapc1__hasTask(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_nyapc1__hasTask(soap, data), 0) || soap_put_PointerTo_nyapc1__hasTask(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_nyapc1__hasTask(struct soap*, _nyapc1__hasTask *const*, const char*, const char*);

#define soap_read_PointerTo_nyapc1__hasTask(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_nyapc1__hasTask(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__hasTask ** SOAP_FMAC4 soap_get_PointerTo_nyapc1__hasTask(struct soap*, _nyapc1__hasTask **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_nyapc1__addJobResponse
#define SOAP_TYPE_PointerTo_nyapc1__addJobResponse (92)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_nyapc1__addJobResponse(struct soap*, _nyapc1__addJobResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_nyapc1__addJobResponse(struct soap*, const char *, int, _nyapc1__addJobResponse *const*, const char *);
SOAP_FMAC3 _nyapc1__addJobResponse ** SOAP_FMAC4 soap_in_PointerTo_nyapc1__addJobResponse(struct soap*, const char*, _nyapc1__addJobResponse **, const char*);

#define soap_write_PointerTo_nyapc1__addJobResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_nyapc1__addJobResponse(soap, data), 0) || soap_put_PointerTo_nyapc1__addJobResponse(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_nyapc1__addJobResponse(struct soap*, _nyapc1__addJobResponse *const*, const char*, const char*);

#define soap_read_PointerTo_nyapc1__addJobResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_nyapc1__addJobResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__addJobResponse ** SOAP_FMAC4 soap_get_PointerTo_nyapc1__addJobResponse(struct soap*, _nyapc1__addJobResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_nyapc1__addJob
#define SOAP_TYPE_PointerTo_nyapc1__addJob (91)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_nyapc1__addJob(struct soap*, _nyapc1__addJob *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_nyapc1__addJob(struct soap*, const char *, int, _nyapc1__addJob *const*, const char *);
SOAP_FMAC3 _nyapc1__addJob ** SOAP_FMAC4 soap_in_PointerTo_nyapc1__addJob(struct soap*, const char*, _nyapc1__addJob **, const char*);

#define soap_write_PointerTo_nyapc1__addJob(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_nyapc1__addJob(soap, data), 0) || soap_put_PointerTo_nyapc1__addJob(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_nyapc1__addJob(struct soap*, _nyapc1__addJob *const*, const char*, const char*);

#define soap_read_PointerTo_nyapc1__addJob(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_nyapc1__addJob(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__addJob ** SOAP_FMAC4 soap_get_PointerTo_nyapc1__addJob(struct soap*, _nyapc1__addJob **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_nyapc1__getJobResponse
#define SOAP_TYPE_PointerTo_nyapc1__getJobResponse (88)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_nyapc1__getJobResponse(struct soap*, _nyapc1__getJobResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_nyapc1__getJobResponse(struct soap*, const char *, int, _nyapc1__getJobResponse *const*, const char *);
SOAP_FMAC3 _nyapc1__getJobResponse ** SOAP_FMAC4 soap_in_PointerTo_nyapc1__getJobResponse(struct soap*, const char*, _nyapc1__getJobResponse **, const char*);

#define soap_write_PointerTo_nyapc1__getJobResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_nyapc1__getJobResponse(soap, data), 0) || soap_put_PointerTo_nyapc1__getJobResponse(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_nyapc1__getJobResponse(struct soap*, _nyapc1__getJobResponse *const*, const char*, const char*);

#define soap_read_PointerTo_nyapc1__getJobResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_nyapc1__getJobResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__getJobResponse ** SOAP_FMAC4 soap_get_PointerTo_nyapc1__getJobResponse(struct soap*, _nyapc1__getJobResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_nyapc1__getJob
#define SOAP_TYPE_PointerTo_nyapc1__getJob (87)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_nyapc1__getJob(struct soap*, _nyapc1__getJob *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_nyapc1__getJob(struct soap*, const char *, int, _nyapc1__getJob *const*, const char *);
SOAP_FMAC3 _nyapc1__getJob ** SOAP_FMAC4 soap_in_PointerTo_nyapc1__getJob(struct soap*, const char*, _nyapc1__getJob **, const char*);

#define soap_write_PointerTo_nyapc1__getJob(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_nyapc1__getJob(soap, data), 0) || soap_put_PointerTo_nyapc1__getJob(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_nyapc1__getJob(struct soap*, _nyapc1__getJob *const*, const char*, const char*);

#define soap_read_PointerTo_nyapc1__getJob(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_nyapc1__getJob(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__getJob ** SOAP_FMAC4 soap_get_PointerTo_nyapc1__getJob(struct soap*, _nyapc1__getJob **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_nyapc1__getVersionResponse
#define SOAP_TYPE_PointerTo_nyapc1__getVersionResponse (84)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_nyapc1__getVersionResponse(struct soap*, _nyapc1__getVersionResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_nyapc1__getVersionResponse(struct soap*, const char *, int, _nyapc1__getVersionResponse *const*, const char *);
SOAP_FMAC3 _nyapc1__getVersionResponse ** SOAP_FMAC4 soap_in_PointerTo_nyapc1__getVersionResponse(struct soap*, const char*, _nyapc1__getVersionResponse **, const char*);

#define soap_write_PointerTo_nyapc1__getVersionResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_nyapc1__getVersionResponse(soap, data), 0) || soap_put_PointerTo_nyapc1__getVersionResponse(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_nyapc1__getVersionResponse(struct soap*, _nyapc1__getVersionResponse *const*, const char*, const char*);

#define soap_read_PointerTo_nyapc1__getVersionResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_nyapc1__getVersionResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__getVersionResponse ** SOAP_FMAC4 soap_get_PointerTo_nyapc1__getVersionResponse(struct soap*, _nyapc1__getVersionResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_nyapc1__getVersion
#define SOAP_TYPE_PointerTo_nyapc1__getVersion (83)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_nyapc1__getVersion(struct soap*, _nyapc1__getVersion *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_nyapc1__getVersion(struct soap*, const char *, int, _nyapc1__getVersion *const*, const char *);
SOAP_FMAC3 _nyapc1__getVersion ** SOAP_FMAC4 soap_in_PointerTo_nyapc1__getVersion(struct soap*, const char*, _nyapc1__getVersion **, const char*);

#define soap_write_PointerTo_nyapc1__getVersion(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_nyapc1__getVersion(soap, data), 0) || soap_put_PointerTo_nyapc1__getVersion(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_nyapc1__getVersion(struct soap*, _nyapc1__getVersion *const*, const char*, const char*);

#define soap_read_PointerTo_nyapc1__getVersion(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_nyapc1__getVersion(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__getVersion ** SOAP_FMAC4 soap_get_PointerTo_nyapc1__getVersion(struct soap*, _nyapc1__getVersion **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_nyapc1__addResponse
#define SOAP_TYPE_PointerTo_nyapc1__addResponse (80)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_nyapc1__addResponse(struct soap*, _nyapc1__addResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_nyapc1__addResponse(struct soap*, const char *, int, _nyapc1__addResponse *const*, const char *);
SOAP_FMAC3 _nyapc1__addResponse ** SOAP_FMAC4 soap_in_PointerTo_nyapc1__addResponse(struct soap*, const char*, _nyapc1__addResponse **, const char*);

#define soap_write_PointerTo_nyapc1__addResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_nyapc1__addResponse(soap, data), 0) || soap_put_PointerTo_nyapc1__addResponse(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_nyapc1__addResponse(struct soap*, _nyapc1__addResponse *const*, const char*, const char*);

#define soap_read_PointerTo_nyapc1__addResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_nyapc1__addResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__addResponse ** SOAP_FMAC4 soap_get_PointerTo_nyapc1__addResponse(struct soap*, _nyapc1__addResponse **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTo_nyapc1__add
#define SOAP_TYPE_PointerTo_nyapc1__add (79)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_nyapc1__add(struct soap*, _nyapc1__add *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_nyapc1__add(struct soap*, const char *, int, _nyapc1__add *const*, const char *);
SOAP_FMAC3 _nyapc1__add ** SOAP_FMAC4 soap_in_PointerTo_nyapc1__add(struct soap*, const char*, _nyapc1__add **, const char*);

#define soap_write_PointerTo_nyapc1__add(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTo_nyapc1__add(soap, data), 0) || soap_put_PointerTo_nyapc1__add(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_nyapc1__add(struct soap*, _nyapc1__add *const*, const char*, const char*);

#define soap_read_PointerTo_nyapc1__add(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTo_nyapc1__add(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 _nyapc1__add ** SOAP_FMAC4 soap_get_PointerTo_nyapc1__add(struct soap*, _nyapc1__add **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTonyapc1__Task
#define SOAP_TYPE_PointerTonyapc1__Task (76)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTonyapc1__Task(struct soap*, nyapc1__Task *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTonyapc1__Task(struct soap*, const char *, int, nyapc1__Task *const*, const char *);
SOAP_FMAC3 nyapc1__Task ** SOAP_FMAC4 soap_in_PointerTonyapc1__Task(struct soap*, const char*, nyapc1__Task **, const char*);

#define soap_write_PointerTonyapc1__Task(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTonyapc1__Task(soap, data), 0) || soap_put_PointerTonyapc1__Task(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTonyapc1__Task(struct soap*, nyapc1__Task *const*, const char*, const char*);

#define soap_read_PointerTonyapc1__Task(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTonyapc1__Task(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 nyapc1__Task ** SOAP_FMAC4 soap_get_PointerTonyapc1__Task(struct soap*, nyapc1__Task **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTonyapc1__JobAtt
#define SOAP_TYPE_PointerTonyapc1__JobAtt (74)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTonyapc1__JobAtt(struct soap*, nyapc1__JobAtt *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTonyapc1__JobAtt(struct soap*, const char *, int, nyapc1__JobAtt *const*, const char *);
SOAP_FMAC3 nyapc1__JobAtt ** SOAP_FMAC4 soap_in_PointerTonyapc1__JobAtt(struct soap*, const char*, nyapc1__JobAtt **, const char*);

#define soap_write_PointerTonyapc1__JobAtt(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTonyapc1__JobAtt(soap, data), 0) || soap_put_PointerTonyapc1__JobAtt(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTonyapc1__JobAtt(struct soap*, nyapc1__JobAtt *const*, const char*, const char*);

#define soap_read_PointerTonyapc1__JobAtt(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTonyapc1__JobAtt(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 nyapc1__JobAtt ** SOAP_FMAC4 soap_get_PointerTonyapc1__JobAtt(struct soap*, nyapc1__JobAtt **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTostd__string
#define SOAP_TYPE_PointerTostd__string (72)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostd__string(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostd__string(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTostd__string(struct soap*, const char*, std::string **, const char*);

#define soap_write_PointerTostd__string(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTostd__string(soap, data), 0) || soap_put_PointerTostd__string(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostd__string(struct soap*, std::string *const*, const char*, const char*);

#define soap_read_PointerTostd__string(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTostd__string(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTostd__string(struct soap*, std::string **, const char*, const char*);

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)


#define soap_serialize__QName(soap, a) soap_serialize_string(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);

#define soap_write__QName(soap, data) ( soap_begin_send(soap) || (soap_serialize__QName(soap, data), 0) || soap_put__QName(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);

#define soap_write_string(soap, data) ( soap_begin_send(soap) || (soap_serialize_string(soap, data), 0) || soap_put_string(soap, data, NULL, NULL) || soap_end_send(soap) )

SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, data, NULL, NULL) || soap_end_recv(soap) )

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTonyapc1__JobAtt
#define SOAP_TYPE_std__vectorTemplateOfPointerTonyapc1__JobAtt (78)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTonyapc1__JobAtt(struct soap*, std::vector<nyapc1__JobAtt * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTonyapc1__JobAtt(struct soap*, const std::vector<nyapc1__JobAtt * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTonyapc1__JobAtt(struct soap*, const char*, int, const std::vector<nyapc1__JobAtt * >*, const char*);
SOAP_FMAC3 std::vector<nyapc1__JobAtt * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTonyapc1__JobAtt(struct soap*, const char*, std::vector<nyapc1__JobAtt * >*, const char*);

#define soap_new_std__vectorTemplateOfPointerTonyapc1__JobAtt(soap, n) ::soap_instantiate_std__vectorTemplateOfPointerTonyapc1__JobAtt(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfPointerTonyapc1__JobAtt(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<nyapc1__JobAtt * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTonyapc1__JobAtt(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTonyapc1__JobAtt(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfint
#define SOAP_TYPE_std__vectorTemplateOfint (77)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfint(struct soap*, std::vector<int >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfint(struct soap*, const std::vector<int >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfint(struct soap*, const char*, int, const std::vector<int >*, const char*);
SOAP_FMAC3 std::vector<int >* SOAP_FMAC4 soap_in_std__vectorTemplateOfint(struct soap*, const char*, std::vector<int >*, const char*);

#define soap_new_std__vectorTemplateOfint(soap, n) ::soap_instantiate_std__vectorTemplateOfint(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfint(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<int > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfint(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfint(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

/* End of soapH.h */
