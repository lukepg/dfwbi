target service:http://192.168.4.45:8080/WebServiceCrawler/services
邯郸日报
handannews_com_cn_27176
http://www.handannews.com.cn/epaper/handrb
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@id=&quot;pgn&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@bgcolor=&quot;#ffffff&quot;]/td[@class=&quot;px12c&quot; and @align=&quot;center&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
邯郸晚报
handannews_com_cn_27179
http://www.handannews.com.cn/epaper/handwb
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@id=&quot;pgn&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@bgcolor=&quot;#ffffff&quot;]/td[@class=&quot;px12c&quot; and @align=&quot;center&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
中原商报
handannews_com_cn_27086
http://www.handannews.com.cn/epaper/zysb
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@id=&quot;pgn&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@bgcolor=&quot;#ffffff&quot;]/td[@class=&quot;px12c&quot; and @align=&quot;center&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
河池日报
hcwang_cn_27006
http://www.hcwang.cn/hcrb/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot; and @class=&quot;juzhong&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@class=&quot;Ltd1&quot;]/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body/table[@class=&quot;juzhong&quot; and @align=&quot;center&quot; and @bgcolor=&quot;#ffffff&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#ffffff&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@class=&quot;juzhong&quot; and @align=&quot;center&quot; and @bgcolor=&quot;#ffffff&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#ffffff&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@id=&quot;pgn&quot;] | /html/body/table[@class=&quot;juzhong&quot; and @align=&quot;center&quot; and @bgcolor=&quot;#ffffff&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#ffffff&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@class=&quot;juzhong&quot; and @align=&quot;center&quot; and @bgcolor=&quot;#ffffff&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#ffffff&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table[@class=&quot;juzhong&quot; and @align=&quot;center&quot; and @bgcolor=&quot;#ffffff&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#ffffff&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@class=&quot;juzhong&quot; and @align=&quot;center&quot; and @bgcolor=&quot;#ffffff&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#ffffff&quot;]/table/tbody/tr[@bgcolor=&quot;#ffffff&quot;]/td[@class=&quot;px12c&quot; and @align=&quot;center&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
海口晚报
hkwb_net_27106
http://www.hkwb.net/szb/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot; and @class=&quot;bg_img&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@class=&quot;bg_img&quot; and @id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/div/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@class=&quot;bg_img&quot; and @id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;middle&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@class=&quot;bg_img&quot; and @id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/div/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@class=&quot;bg_img&quot; and @id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/div/table/tbody/tr/td/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
淮安日报
hynews_net_27100
http://www.hynews.net/harb
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr/td[@align=&quot;center&quot; and @valign=&quot;top&quot;]/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;blue2&quot;]/a[@class=&quot;blue&quot;]"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/table/tbody/tr/td[@class=&quot;title_a&quot; and @valign=&quot;middle&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/table/tbody/tr/td[@class=&quot;title_a&quot; and @valign=&quot;middle&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
淮海晚报
hynews_net_27107
http://www.hynews.net/hhwb
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr/td[@align=&quot;center&quot; and @valign=&quot;top&quot;]/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;blue2&quot;]/a[@class=&quot;blue&quot;]"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/table/tbody/tr/td[@class=&quot;title_a&quot; and @valign=&quot;middle&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/table/tbody/tr/td[@class=&quot;title_a&quot; and @valign=&quot;middle&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
建材商界
jcyzs_net_27320
http://press.idoican.com.cn/detail/newspapers/134/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/form[@id=&quot;Form1&quot;]/div[@id=&quot;main&quot;]/div[@id=&quot;lay1&quot;]/div[@class=&quot;col_1&quot;]/ul[@class=&quot;lst_07&quot;]/li/a"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table[@class=&quot;ft12h&quot; and @align=&quot;left&quot;]/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@align=&quot;left&quot;]/table/tbody/tr/td/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string('')"/> 
          <xsl:variable name="source" select="string('')"/>
          <xsl:variable name="attr" select="string('')"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;lai&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1 | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;c_c&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@id=&quot;articlecontent&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
金华日报
jhnews_com_cn_27134
http://www.jhnews.com.cn/site1/jhrb/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@bgcolor=&quot;#ffffff&quot;]/td[@class=&quot;px12c&quot; and @align=&quot;center&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
金华晚报
jhnews_com_cn_27131
http://www.jhnews.com.cn/site1/jhwb/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@bgcolor=&quot;#ffffff&quot;]/td[@class=&quot;px12c&quot; and @align=&quot;center&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
京江晚报
jsw_com_cn_27114
http://www.jsw.com.cn/site3/jjwb/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
渤海早报
jwb_com_cn_27384
http://www.jwb.com.cn/bhzb
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div[@align=&quot;left&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@bgcolor=&quot;#f7faff&quot;]/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@bgcolor=&quot;#f7faff&quot;]/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@bgcolor=&quot;#f7faff&quot;]/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@bgcolor=&quot;#f7faff&quot;]/tbody/tr/td/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
今晚报
jwb_com_cn_27060
http://www.jwb.com.cn/jwb
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div[@align=&quot;left&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@bgcolor=&quot;#f7faff&quot;]/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@class=&quot;px12&quot; and @align=&quot;left&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@bgcolor=&quot;#f7faff&quot;]/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@bgcolor=&quot;#f7faff&quot;]/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@bgcolor=&quot;#f7faff&quot;]/tbody/tr/td/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
廊坊日报
lfrbnews_com_27147
http://www.lfrbnews.com/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div[@id=&quot;innerHTML&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td/table/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#ffffff&quot;]/table[@class=&quot;line&quot;]/tbody/tr/td[@class=&quot;zi14 jiacu line STYLE6&quot; and @valign=&quot;top&quot; and @align=&quot;middle&quot;]/table/tbody/tr/td[@class=&quot;zi12&quot; and @valign=&quot;middle&quot; and @align=&quot;center&quot;]/table/tbody/tr/td[@class=&quot;zi12&quot;]/div[@align=&quot;center&quot;]/a"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table[@class=&quot;ft12h&quot; and @align=&quot;left&quot;]/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@align=&quot;left&quot;]/table/tbody/tr/td/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string('')"/> 
          <xsl:variable name="source" select="string('')"/>
          <xsl:variable name="attr" select="string('')"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;lai&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1 | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;c_c&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@id=&quot;articlecontent&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
凉山日报
lsrb_cn_27240
http://www.lsrb.cn/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td/table/tbody/tr/td/a[@class=&quot;blue1&quot;]"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@valign=&quot;middle&quot; and @align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@class=&quot;title_a&quot; and @valign=&quot;middle&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="string(&quot;&quot;)"/> 
	  <xsl:variable name="content" select="/html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@valign=&quot;middle&quot; and @align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@class=&quot;title_a&quot; and @valign=&quot;middle&quot; and @align=&quot;center&quot;] | /html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@valign=&quot;middle&quot; and @align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
兰州晨报
lzcbnews_com_27517
http://www.lzcbnews.com
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td/div"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="table/tbody/tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#e6e6e6&quot;]/table[@align=&quot;center&quot; and @bgcolor=&quot;#999999&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@bgcolor=&quot;#ffffff&quot;]/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]/font"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#e6e6e6&quot;]/table/tbody/tr/td/table[@bgcolor=&quot;#999999&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#ffffff&quot;]/table/tbody/tr/td/table"/> 
	  <xsl:variable name="content" select="/html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#e6e6e6&quot;]/table[@align=&quot;center&quot; and @bgcolor=&quot;#999999&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@bgcolor=&quot;#ffffff&quot;]/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#e6e6e6&quot;]/table[@align=&quot;center&quot; and @bgcolor=&quot;#999999&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@bgcolor=&quot;#ffffff&quot;]/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]/font | /html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#e6e6e6&quot;]/table[@align=&quot;center&quot; and @bgcolor=&quot;#999999&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@bgcolor=&quot;#ffffff&quot;]/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
北京晨报
morningpost_com_cn_26986
http://www.morningpost.com.cn/bjcb/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td/table/tbody/tr/td/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@valign=&quot;center&quot; and @align=&quot;middle&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@class=&quot;title_a&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="publishdate" select="string(&quot;&quot;)"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@class=&quot;blue1&quot;]/span[@class=&quot;blue2&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@valign=&quot;center&quot; and @align=&quot;middle&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@class=&quot;title_a&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@valign=&quot;center&quot; and @align=&quot;middle&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
内蒙古晨报
nmgcb_com_cn_27094
http://www.nmgcb.com.cn/nmgcb/html/node_2.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6 STYLE31&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
鞍山日报
qianhuaweb_com_27044
http://www.qianhuaweb.com/asrb/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@bgcolor=&quot;#ffffff&quot;]/table | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@class=&quot;zt00&quot; and @id=&quot;ozoom&quot;]/span[@class=&quot;sz01&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
千山晚报
qianhuaweb_com_27051
http://www.qianhuaweb.com/qswb/html/node_42.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@class=&quot;zt00&quot; and @id=&quot;ozoom&quot;]/span[@class=&quot;sz01&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
青年时报
qnsb_com_27373
http://www.qnsb.com/fzepaper/site1/qnsb/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table[@align=&quot;center&quot;]/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt2&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table[@align=&quot;center&quot;]/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt2&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table[@align=&quot;center&quot;]/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt1&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table[@align=&quot;center&quot;]/tbody/tr/td[@class=&quot;font6&quot; and @valign=&quot;top&quot; and @align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/table[@class=&quot;xilan_content_tt&quot;]/tbody/tr/td[@class=&quot;xilan_content_tt&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
七台河日报
qthdaily_com_27212
http://www.qthdaily.com/szb/qthrb/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/p/font"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
黔西南日报
qxnrb_com_27082
http://www.qxnrb.com/epaper/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot; and @align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/table/tbody/tr/td/p/font"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
迪庆日报
shangri-lanews_com_27241
http://www.shangri-lanews.com/dqrb/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table[@class=&quot;ft12h&quot; and @align=&quot;left&quot;]/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@align=&quot;left&quot;]/table/tbody/tr/td/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string('')"/> 
          <xsl:variable name="source" select="string('')"/>
          <xsl:variable name="attr" select="string('')"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;lai&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1 | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;c_c&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@id=&quot;articlecontent&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
上虞日报
shangyuribao_cn_27370
http://www.shangyuribao.cn/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt1&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt2&quot; and @align=&quot;center&quot;] | /html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt1&quot; and @align=&quot;center&quot;] | /html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/table[@class=&quot;xilan_content_tt&quot;]/tbody/tr/td[@class=&quot;xilan_content_tt&quot;]/founder-content/p | /html/body[@bgcolor=&quot;#e8e8d7&quot;]/table/tbody/tr/td/span[@id=&quot;NewsArticleTitle&quot;] | /html/body[@bgcolor=&quot;#e8e8d7&quot;]/founder-title | /html/body[@bgcolor=&quot;#e8e8d7&quot;]/founder-subtitle"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
今晨6点
shm_com_cn_27348
http://www.shm.com.cn/jcld/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr[@valign=&quot;top&quot;]/td[@class=&quot;default&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;default&quot;]/a/div[@class=&quot;pretitle&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]"/> 
	  <xsl:variable name="content" select="/html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;default&quot;]/a/div[@class=&quot;pretitle&quot;] | /html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;default&quot;]/a/div[@class=&quot;title&quot;] | /html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;] | /html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/p | /html/body[@bgcolor=&quot;#e8e8d7&quot;]/table/tbody/tr/td/span[@id=&quot;NewsArticleTitle&quot;]"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
烟台日报
shm_com_cn_27254
http://www.shm.com.cn/ytrb/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr[@valign=&quot;top&quot;]/td[@class=&quot;default&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]"/> 
	  <xsl:variable name="content" select="/html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;] | /html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
烟台晚报
shm_com_cn_27257
http://www.shm.com.cn/ytwb/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr[@valign=&quot;top&quot;]/td[@class=&quot;default&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="/html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]"/> 
	  <xsl:variable name="content" select="/html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;default&quot;]/a/div[@class=&quot;pretitle&quot;] | /html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;default&quot;]/a/div[@class=&quot;title&quot;] | /html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;] | /html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
汕头都市报
stcd_com_cn_27146
http://www.stcd.com.cn
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot; and @class=&quot;bg_img&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@class=&quot;bg_img&quot; and @id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/div/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@class=&quot;bg_img&quot; and @id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;middle&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@class=&quot;bg_img&quot; and @id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/strong | /html/body/table[@class=&quot;bg_img&quot; and @id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/div/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@class=&quot;bg_img&quot; and @id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/div/table/tbody/tr/td/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
汕头日报
stdaily_com_cn_27031
http://www.stdaily.com.cn/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot; and @class=&quot;bg_img&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@class=&quot;bg_img&quot; and @id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/div/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@class=&quot;bg_img&quot; and @id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;middle&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@class=&quot;bg_img&quot; and @id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/div/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@class=&quot;bg_img&quot; and @id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/div/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@class=&quot;bg_img&quot; and @id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/div/table/tbody/tr/td/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
汕头特区晚报
step_com_cn_27034
http://www.step.com.cn
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot; and @class=&quot;bg_img&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@class=&quot;bg_img&quot; and @id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/div/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@class=&quot;bg_img&quot; and @id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;middle&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@class=&quot;bg_img&quot; and @id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/div/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@class=&quot;bg_img&quot; and @id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/div/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@class=&quot;bg_img&quot; and @id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/div/table/tbody/tr/td/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
赤峰日报
swcf_cn_27105
http://www.swcf.cn/epaper/cfrb/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/span[@class=&quot;px12&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
绍兴县报
sxepaper_com_cn_27272
http://www.sxepaper.com.cn/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt2&quot; and @align=&quot;center&quot;]"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt1&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt2&quot; and @align=&quot;center&quot;] | /html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt1&quot; and @align=&quot;center&quot;] | /html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/table[@class=&quot;xilan_content_tt&quot;]/tbody/tr/td[@class=&quot;xilan_content_tt&quot;]/founder-content/p | /html/body[@bgcolor=&quot;#e8e8d7&quot;]/table/tbody/tr/td/span[@id=&quot;NewsArticleTitle&quot;] | /html/body[@bgcolor=&quot;#e8e8d7&quot;]/founder-title | /html/body[@bgcolor=&quot;#e8e8d7&quot;]/founder-subtitle"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
铜都晨刊
tlnews_cn_27383
http://www.tlnews.cn/szb/tdck/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="string(&quot;&quot;)"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@bgcolor=&quot;#ffffff&quot;]/td[@class=&quot;px12c&quot; and @align=&quot;center&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
铜陵日报
tlnews_cn_27365
http://www.tlnews.cn/szb/tlrb
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@id=&quot;pgn&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@bgcolor=&quot;#ffffff&quot;]/td[@class=&quot;px12c&quot; and @align=&quot;center&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
滕州日报
tzdaily_com_cn_27218
http://www.tzdaily.com.cn
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table[@class=&quot;ft12h&quot; and @align=&quot;left&quot;]/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@align=&quot;left&quot;]/table/tbody/tr/td/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string('')"/> 
          <xsl:variable name="source" select="string('')"/>
          <xsl:variable name="attr" select="string('')"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;lai&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1 | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;c_c&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@id=&quot;articlecontent&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
大江晚报
wuhunews_cn_27053
http://www.wuhunews.cn/newspaper/djwb/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/table/tbody/tr/td/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
金周刊
wuhunews_cn_27397
http://www.wuhunews.cn/newspaper/jzk/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/table/tbody/tr/td/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
芜湖日报
wuhunews_cn_27063
http://www.wuhunews.cn/newspaper/whrb/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/table/tbody/tr/td/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
梧州日报
wuzhoudaily_com_cn_27145
http://www.wuzhoudaily.com.cn/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table[@align=&quot;center&quot;]/tbody/tr/td/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;btsy&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/table/tbody/tr/td/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/strong | /html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;left&quot;] | /html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
科技鑫报
xbnews_cn_27056
http://www.xbnews.cn
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="string(&quot;&quot;)"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/span[@class=&quot;px12&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
西部商报
xbsb_com_cn_27513
http://www.xbsb.com.cn/site1/xbsb/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="table/tbody/tr/td[@valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@class=&quot;px12&quot; and @align=&quot;left&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
新华日报
xhby_net_27161
http://www.xhby.net/xhby/node/node_577.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table[@class=&quot;wz&quot;]/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@class=&quot;menu&quot; and @valign=&quot;middle&quot; and @align=&quot;left&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table[@class=&quot;wz&quot;]/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table[@class=&quot;wz&quot;]/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table[@class=&quot;wz&quot;]/tbody/tr/td[@align=&quot;center&quot;]/div[@class=&quot;content&quot; and @id=&quot;ozoom&quot;]/founder-content/p | /html/body/table/tbody/tr/td/span[@id=&quot;NewsArticleTitle&quot;]"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
西江都市报
xijiangdsb_com_cn_27225
http://www.xijiangdsb.com.cn/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table[@align=&quot;center&quot;]/tbody/tr/td/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;btsy&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;left&quot;]"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/table[@align=&quot;left&quot;]/tbody/tr/td[@valign=&quot;center&quot; and @align=&quot;center&quot;]/table/tbody/tr/td"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/table/tbody/tr/td/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/table[@align=&quot;left&quot;]/tbody/tr/td[@valign=&quot;center&quot; and @align=&quot;center&quot;]/table/tbody/tr/td | /html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
牛城晚报
xtxcm_com_27128
http://www.xtxcm.com/epaper/ncwb/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/span[@class=&quot;px12&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
邢台日报
xtxcm_com_27142
http://www.xtxcm.com/epaper/xtrb
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/span[@class=&quot;px12&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
新快报
ycwb_com_27038
http://www.ycwb.com/ePaper/xkb
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//div[@class=&quot;l&quot;]"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="map/area"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="/html/body/div[@class=&quot;cbody clearfix&quot;]/div[@class=&quot;areaL&quot;]/div[@class=&quot;box&quot;]/div[@class=&quot;conBox&quot;]/div[@class=&quot;banq&quot;]"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;cbody clearfix&quot;]/div[@class=&quot;areaL&quot;]/div[@class=&quot;box&quot;]/div[@class=&quot;conBox&quot;]/h1"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;cbody clearfix&quot;]/div[@class=&quot;areaL&quot;]/div[@class=&quot;box&quot;]/div[@class=&quot;time&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;cbody clearfix&quot;]/div[@class=&quot;areaL&quot;]/div[@class=&quot;box&quot;]/div[@class=&quot;conBox&quot;]/div[@align=&quot;center&quot;] | /html/body/div[@class=&quot;cbody clearfix&quot;]/div[@class=&quot;areaL&quot;]/div[@class=&quot;box&quot;]/div[@class=&quot;conBox&quot;]/h1 | /html/body/div[@class=&quot;cbody clearfix&quot;]/div[@class=&quot;areaL&quot;]/div[@class=&quot;box&quot;]/div[@class=&quot;conBox&quot;]/div[@id=&quot;ozoom&quot;]/content/p | /html/body/div[@class=&quot;cbody clearfix&quot;]/div[@class=&quot;areaL&quot;]/div[@class=&quot;box&quot;]/div[@class=&quot;conBox&quot;]/div[@id=&quot;ozoom&quot;]/span"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
羊城晚报
ycwb_com_27039
http://www.ycwb.com/ePaper/ycwb
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//div[@class=&quot;l&quot;]"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="map/area"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="/html/body/div[@class=&quot;cbody clearfix&quot;]/div[@class=&quot;areaL&quot;]/div[@class=&quot;box&quot;]/div[@class=&quot;conBox&quot;]/div[@class=&quot;banq&quot;]"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;cbody clearfix&quot;]/div[@class=&quot;areaL&quot;]/div[@class=&quot;box&quot;]/div[@class=&quot;conBox&quot;]/h1"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;cbody clearfix&quot;]/div[@class=&quot;areaL&quot;]/div[@class=&quot;box&quot;]/div[@class=&quot;time&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;cbody clearfix&quot;]/div[@class=&quot;areaL&quot;]/div[@class=&quot;box&quot;]/div[@class=&quot;conBox&quot;]/div[@align=&quot;center&quot;] | /html/body/div[@class=&quot;cbody clearfix&quot;]/div[@class=&quot;areaL&quot;]/div[@class=&quot;box&quot;]/div[@class=&quot;conBox&quot;]/h1 | /html/body/div[@class=&quot;cbody clearfix&quot;]/div[@class=&quot;areaL&quot;]/div[@class=&quot;box&quot;]/div[@class=&quot;conBox&quot;]/div[@id=&quot;ozoom&quot;]/content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
羊城晚报(地方版)
ycwb_com_27043
http://www.ycwb.com/ePaper/ycwbdfb
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//div[@class=&quot;l&quot;]"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="map/area"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="/html/body/div[@class=&quot;cbody clearfix&quot;]/div[@class=&quot;areaL&quot;]/div[@class=&quot;box&quot;]/div[@class=&quot;conBox&quot;]/div[@class=&quot;banq&quot;]"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;cbody clearfix&quot;]/div[@class=&quot;areaL&quot;]/div[@class=&quot;box&quot;]/div[@class=&quot;conBox&quot;]/h1"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;cbody clearfix&quot;]/div[@class=&quot;areaL&quot;]/div[@class=&quot;box&quot;]/div[@class=&quot;time&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;cbody clearfix&quot;]/div[@class=&quot;areaL&quot;]/div[@class=&quot;box&quot;]/div[@class=&quot;conBox&quot;]/div[@align=&quot;center&quot;] | /html/body/div[@class=&quot;cbody clearfix&quot;]/div[@class=&quot;areaL&quot;]/div[@class=&quot;box&quot;]/div[@class=&quot;conBox&quot;]/h1 | /html/body/div[@class=&quot;cbody clearfix&quot;]/div[@class=&quot;areaL&quot;]/div[@class=&quot;box&quot;]/div[@class=&quot;conBox&quot;]/div[@id=&quot;ozoom&quot;]/content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
都市生活
ygbcl_com_27771
http://www.ygbcl.com
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/span[@class=&quot;px12&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td/table/tbody/tr/td | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/span[@class=&quot;px12&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
扬州日报
yzrb_com_27173
http://www.yzrb.com/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;middle&quot; and @align=&quot;center&quot;]/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td/table/tbody/tr/td/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot; and @align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
扬州时报
yzsbs_com_27346
http://www.yzsbs.com/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;middle&quot; and @align=&quot;center&quot;]/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;middle&quot;]/table/tbody/tr/td/table/tbody/tr/td/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot; and @align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
周口日报
zhld_com_27202
http://www.zhld.com/zkrb/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;]"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot; and @align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
周口晚报
zhld_com_27205
http://www.zhld.com/zkwb/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot; and @align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
钱江晚报
zjdaily_com_cn_27266
http://www.zjdaily.com.cn/qjwb
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div[@class=&quot;main&quot;]/div[@class=&quot;main-ed&quot;]/div/ul[@class=&quot;main-ed-articlenav-list&quot;]"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="li/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body/div[@class=&quot;main&quot;]/div[@class=&quot;main-article&quot;]/div[@class=&quot;main-article-content&quot;]/div[@class=&quot;main-article-alltitle&quot;]/h6[@class=&quot;main-article-author&quot;]"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;main&quot;]/div[@class=&quot;main-article&quot;]/div[@class=&quot;main-article-content&quot;]/div[@class=&quot;main-article-alltitle&quot;]/h1[@class=&quot;main-article-title&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;main&quot;]/div[@class=&quot;main-article&quot;]/div[@class=&quot;main-article-content&quot;]/div[@class=&quot;main-article-alltitle&quot;]/h3[@class=&quot;main-article-pretitle&quot;] | /html/body/div[@class=&quot;main&quot;]/div[@class=&quot;main-article&quot;]/div[@class=&quot;main-article-content&quot;]/div[@class=&quot;main-article-alltitle&quot;]/h1[@class=&quot;main-article-title&quot;] | /html/body/div[@class=&quot;main&quot;]/div[@class=&quot;main-article&quot;]/div[@class=&quot;main-article-content&quot;]/div[@class=&quot;main-article-alltitle&quot;]/h3[@class=&quot;main-article-subtitle&quot;] | /html/body/div[@class=&quot;main&quot;]/div[@class=&quot;main-article&quot;]/div[@class=&quot;main-article-content&quot;]/div[@class=&quot;main-article-alltitle&quot;]/h6[@class=&quot;main-article-author&quot;] | /html/body/div[@class=&quot;main&quot;]/div[@class=&quot;main-article&quot;]/div[@class=&quot;main-article-content&quot;]/div[@class=&quot;main-article-con&quot; and @id=&quot;ozoom&quot;]/founder-content/p | /html/body/table/tbody/tr/td/span[@id=&quot;NewsArticleTitle&quot;]"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
鹤都晚刊
ztnews_net_27247
http://www.ztnews.net/dubao/hdwk/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="table/tbody/tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot; and @align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
昭通日报
ztnews_net_27244
http://www.ztnews.net/dubao/ztrb/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot; and @align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
浙中新报
w_com_27344
http://www.zzxbw.com/proxy/www.jhnews.com.cn/site1/zzxb/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@bgcolor=&quot;#ffffff&quot;]/td[@class=&quot;px12c&quot; and @align=&quot;center&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
晚霞报
wxb_newssc_org_27066
http://wxb.newssc.org/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/div[@align=&quot;center&quot;]/table[@id=&quot;table1894&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table/tbody/tr/td[@class=&quot;bmdh&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@class=&quot;font7&quot; and @align=&quot;left&quot;]/a"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;left&quot;]/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;font7&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table[@id=&quot;table15&quot;]/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/span/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
消费指南
xfzn_cqn_com_cn_27404
http://xfzn.cqn.com.cn/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="map/area"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr/td"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
上海星期三
xmwb_xinmin_cn_27394
http://xmwb.xinmin.cn/shwed/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div/div[@class=&quot;left&quot;]/div[@class=&quot;newslist&quot;]/ul"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="li[@class=&quot;newslist_li2&quot;]/a[@class=&quot;blue1&quot;]"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/div[@id=&quot;contain&quot;]/div[@class=&quot;right&quot;]/div[@class=&quot;main&quot;]/div[@class=&quot;text_box&quot;]/div[@class=&quot;zhegngwen&quot;]/div[@align=&quot;center&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@id=&quot;contain&quot;]/div[@class=&quot;right&quot;]/div[@class=&quot;main&quot;]/div[@class=&quot;text_box&quot;]/div[@class=&quot;title1 title3&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@id=&quot;contain&quot;]/div[@class=&quot;right&quot;]/div[@class=&quot;main&quot;]/div[@class=&quot;text_box&quot;]/div[@class=&quot;zhegngwen&quot;]/div[@align=&quot;center&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/div[@id=&quot;contain&quot;]/div[@class=&quot;right&quot;]/div[@class=&quot;main&quot;]/div[@class=&quot;text_box&quot;]/div[@class=&quot;zhegngwen&quot;]/div[@align=&quot;center&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/div[@id=&quot;contain&quot;]/div[@class=&quot;right&quot;]/div[@class=&quot;main&quot;]/div[@class=&quot;text_box&quot;]/div[@class=&quot;zhegngwen&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/p/font"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
新民晚报
xmwb_xinmin_cn_27058
http://xmwb.xinmin.cn/xmwb
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div/div[@class=&quot;left&quot;]/div[@class=&quot;newslist&quot;]/ul"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="li[@class=&quot;newslist_li2&quot;]/a[@class=&quot;blue1&quot;]"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/div[@id=&quot;contain&quot;]/div[@class=&quot;right&quot;]/div[@class=&quot;main&quot;]/div[@class=&quot;text_box&quot;]/div[@class=&quot;zhegngwen&quot;]/div[@align=&quot;center&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@id=&quot;contain&quot;]/div[@class=&quot;right&quot;]/div[@class=&quot;main&quot;]/div[@class=&quot;text_box&quot;]/div[@class=&quot;title1 title3&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@id=&quot;contain&quot;]/div[@class=&quot;right&quot;]/div[@class=&quot;main&quot;]/div[@class=&quot;text_box&quot;]/div[@class=&quot;zhegngwen&quot;]/div[@align=&quot;center&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/div[@id=&quot;contain&quot;]/div[@class=&quot;right&quot;]/div[@class=&quot;main&quot;]/div[@class=&quot;text_box&quot;]/div[@class=&quot;zhegngwen&quot;]/div[@align=&quot;center&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/div[@id=&quot;contain&quot;]/div[@class=&quot;right&quot;]/div[@class=&quot;main&quot;]/div[@class=&quot;text_box&quot;]/div[@class=&quot;zhegngwen&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/p/font"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
西南商报
xnsb_newssc_org_27099
http://xnsb.newssc.org/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/div[@align=&quot;center&quot;]/table[@id=&quot;table1894&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table/tbody/tr/td[@class=&quot;bmdh&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@class=&quot;font7&quot; and @align=&quot;left&quot;]/a"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;left&quot;]/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;font7&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table[@id=&quot;table15&quot;]/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/span/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
桂林晚报
guilinlife_com_27220
http://www.guilinlife.com/glwb/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/div"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="table/tbody/tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/table/tbody/tr/td/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
广西日报
gxrb_com_cn_27103
http://www.gxrb.com.cn/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;middle&quot;]/a[@class=&quot;t_title&quot;]"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body/table[@align=&quot;center&quot; and @bgcolor=&quot;#d3aea8&quot;]/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#ffffff&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@class=&quot;px12c&quot; and @valign=&quot;top&quot; and @align=&quot;center&quot;]/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot; and @bgcolor=&quot;#d3aea8&quot;]/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#ffffff&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@class=&quot;px12c&quot; and @valign=&quot;top&quot; and @align=&quot;center&quot;]/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot; and @bgcolor=&quot;#d3aea8&quot;]/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/table/tbody/tr/td/span[@class=&quot;big_title style2&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot; and @bgcolor=&quot;#d3aea8&quot;]/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#ffffff&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@class=&quot;px12c&quot; and @valign=&quot;top&quot; and @align=&quot;center&quot;]/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table[@align=&quot;center&quot; and @bgcolor=&quot;#d3aea8&quot;]/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#ffffff&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@class=&quot;px12c&quot; and @valign=&quot;top&quot; and @align=&quot;center&quot;]/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span/font[@color=&quot;#05006c&quot;]/h1 | /html/body/table[@align=&quot;center&quot; and @bgcolor=&quot;#d3aea8&quot;]/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#ffffff&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@class=&quot;px12c&quot; and @valign=&quot;top&quot; and @align=&quot;center&quot;]/table/tbody/tr[@align=&quot;left&quot;]/td[@class=&quot;aa&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
萧山日报
xsrb_xsnet_cn_27342
http://xsrb.xsnet.cn/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@class=&quot;tbl&quot;]/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot;]/a[@class=&quot;mulu&quot;]"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@bgcolor=&quot;#f7fdff&quot;]/table[@bgcolor=&quot;#ffffff&quot;]/tbody/tr/td/span[@class=&quot;px13&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@bgcolor=&quot;#f7fdff&quot;]/table[@bgcolor=&quot;#ffffff&quot;]/tbody/tr/td/span[@class=&quot;px13&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@bgcolor=&quot;#f7fdff&quot;]/table[@bgcolor=&quot;#ffffff&quot;]/tbody/tr/td/span[@class=&quot;px13&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@bgcolor=&quot;#f7fdff&quot;]/table[@bgcolor=&quot;#ffffff&quot;]/tbody/tr/td/span[@class=&quot;px12&quot;]/span[@class=&quot;px13c&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
宜宾日报
ybrb_newssc_org_27000
http://ybrb.newssc.org/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/table[@id=&quot;table1937&quot; and @bgcolor=&quot;#f7faff&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/span[@class=&quot;bmdh&quot;]/table/tbody/tr/td[@class=&quot;font7&quot; and @align=&quot;left&quot;]/a"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;left&quot;]/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;font7&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table[@id=&quot;table15&quot;]/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/span[@class=&quot;px12&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
宜宾晚报
ybwb_newssc_org_27001
http://ybwb.newssc.org
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/table[@id=&quot;table1937&quot; and @bgcolor=&quot;#f7faff&quot;]/tbody/tr[@bgcolor=&quot;#fbdbdb&quot;]/td[@valign=&quot;top&quot; and @bgcolor=&quot;#ffe8e8&quot;]/div[@align=&quot;center&quot;]/span[@class=&quot;bmdh&quot;]/table/tbody/tr/td[@class=&quot;font7&quot; and @align=&quot;left&quot;]/a"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;left&quot;]/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;font7&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table[@id=&quot;table15&quot;]/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@class=&quot;px12&quot; and @valign=&quot;top&quot; and @align=&quot;left&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/span[@class=&quot;px12&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
羊城地铁报
ycdtb_dayoo_com_27440
http://ycdtb.dayoo.com/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div[@class=&quot;container&quot;]/div[@class=&quot;rightcolumn&quot;]/div[@class=&quot;subcbga&quot;]/div[@class=&quot;listcontent&quot;]/div[@class=&quot;list&quot;]/h4/span[@class=&quot;left&quot;]/a"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div[@class=&quot;container&quot;]/div[@class=&quot;rightcolumn&quot;]/div[@class=&quot;subcbga&quot;]/div[@class=&quot;contentlist&quot;]/div[@class=&quot;left&quot;]/div[@class=&quot;pagecontentlist&quot;]/ul"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="li/span[@class=&quot;left&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="/html/body[@id=&quot;content&quot;]/div[@class=&quot;container&quot;]/div[@class=&quot;leftcolumn&quot;]/div[@class=&quot;tbga&quot;]/div[@class=&quot;rightcolumn&quot;]/div[@class=&quot;subcbga&quot;]/div[@class=&quot;articlecontent&quot;]/div[@class=&quot;article&quot; and @id=&quot;article&quot;]/p[@class=&quot;infor&quot;]/span"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body[@id=&quot;content&quot;]/div[@class=&quot;container&quot;]/div[@class=&quot;leftcolumn&quot;]/div[@class=&quot;tbga&quot;]/div[@class=&quot;rightcolumn&quot;]/div[@class=&quot;subcbga&quot;]/div[@class=&quot;articlecontent&quot;]/div[@class=&quot;article&quot; and @id=&quot;article&quot;]/h3[@id=&quot;artTitle&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/head"/> 
	  <xsl:variable name="content" select="/html/body[@id=&quot;content&quot;]/div[@class=&quot;container&quot;]/div[@class=&quot;leftcolumn&quot;]/div[@class=&quot;tbga&quot;]/div[@class=&quot;rightcolumn&quot;]/div[@class=&quot;subcbga&quot;]/div[@class=&quot;articlecontent&quot;]/div[@class=&quot;article&quot; and @id=&quot;article&quot;]/h3[@id=&quot;artTitle&quot;] | /html/body[@id=&quot;content&quot;]/div[@class=&quot;container&quot;]/div[@class=&quot;leftcolumn&quot;]/div[@class=&quot;tbga&quot;]/div[@class=&quot;rightcolumn&quot;]/div[@class=&quot;subcbga&quot;]/div[@class=&quot;articlecontent&quot;]/div[@class=&quot;article&quot; and @id=&quot;article&quot;]/div[@class=&quot;text&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
燕赵晚报
yzwb_sjzdaily_com_cn_27115
http://yzwb.sjzdaily.com.cn/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@class=&quot;px12&quot; and @align=&quot;left&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/span[@class=&quot;px12&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
浙江日报
zjdaily_zjol_com_cn_27037
http://zjdaily.zjol.com.cn
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div[@class=&quot;main&quot;]/div[@class=&quot;main-ed&quot;]/div/ul[@class=&quot;main-ed-articlenav-list&quot;]"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="li/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body/div[@class=&quot;main&quot;]/div[@class=&quot;main-article&quot;]/div[@class=&quot;main-article-content&quot;]/div[@class=&quot;main-article-alltitle&quot;]/h6[@class=&quot;main-article-author&quot;]"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;main&quot;]/div[@class=&quot;main-article&quot;]/div[@class=&quot;main-article-content&quot;]/div[@class=&quot;main-article-alltitle&quot;]/h6[@class=&quot;main-article-author&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;main&quot;]/div[@class=&quot;main-article&quot;]/div[@class=&quot;main-article-content&quot;]/div[@class=&quot;main-article-alltitle&quot;]/h1[@class=&quot;main-article-title&quot;] | /html/body/div[@class=&quot;main&quot;]/div[@class=&quot;main-article&quot;]/div[@class=&quot;main-article-content&quot;]/div[@class=&quot;main-article-alltitle&quot;]/h6[@class=&quot;main-article-author&quot;] | /html/body/div[@class=&quot;main&quot;]/div[@class=&quot;main-article&quot;]/div[@class=&quot;main-article-content&quot;]/div[@class=&quot;main-article-con&quot; and @id=&quot;ozoom&quot;]/founder-content/p | /html/body/table/tbody/tr/td/span[@id=&quot;NewsArticleTitle&quot;]"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
今日早报
zjdaily_zjol_com_cn_27033
http://zjdaily.zjol.com.cn/jrzb
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div[@class=&quot;main&quot;]/div[@class=&quot;main-ed&quot;]/div/ul[@class=&quot;main-ed-articlenav-list&quot;]"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="li/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;main&quot;]/div[@class=&quot;main-article&quot;]/div[@class=&quot;main-article-content&quot;]/div[@class=&quot;main-article-alltitle&quot;]/h3[@class=&quot;main-article-pretitle&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;main&quot;]/div[@class=&quot;main-article&quot;]/div[@class=&quot;main-article-content&quot;]/div[@class=&quot;main-article-alltitle&quot;]/h3[@class=&quot;main-article-pretitle&quot;] | /html/body/div[@class=&quot;main&quot;]/div[@class=&quot;main-article&quot;]/div[@class=&quot;main-article-content&quot;]/div[@class=&quot;main-article-alltitle&quot;]/h1[@class=&quot;main-article-title&quot;] | /html/body/div[@class=&quot;main&quot;]/div[@class=&quot;main-article&quot;]/div[@class=&quot;main-article-content&quot;]/div[@class=&quot;main-article-con&quot; and @id=&quot;ozoom&quot;]/founder-content/p | /html/body/table/tbody/tr/td/span[@id=&quot;NewsArticleTitle&quot;]"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
浙江法制报
zjfzb_zjol_com_cn_27375
http://zjfzb.zjol.com.cn/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div[@class=&quot;main&quot;]/div[@class=&quot;main-ed&quot;]/div/ul[@class=&quot;main-ed-articlenav-list&quot;]"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="li/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;main&quot;]/div[@class=&quot;main-article&quot;]/div[@class=&quot;main-article-content&quot;]/div[@class=&quot;main-article-alltitle&quot;]/h1[@class=&quot;main-article-title&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;main&quot;]/div[@class=&quot;main-article&quot;]/div[@class=&quot;main-article-content&quot;]/div[@class=&quot;main-article-alltitle&quot;]/h3[@class=&quot;main-article-pretitle&quot;] | /html/body/div[@class=&quot;main&quot;]/div[@class=&quot;main-article&quot;]/div[@class=&quot;main-article-content&quot;]/div[@class=&quot;main-article-alltitle&quot;]/h1[@class=&quot;main-article-title&quot;] | /html/body/div[@class=&quot;main&quot;]/div[@class=&quot;main-article&quot;]/div[@class=&quot;main-article-content&quot;]/div[@class=&quot;main-article-con&quot; and @id=&quot;ozoom&quot;] | /html/body/div[@class=&quot;main&quot;]/div[@class=&quot;main-article&quot;]/div[@class=&quot;main-article-content&quot;]/div[@class=&quot;main-article-con&quot; and @id=&quot;ozoom&quot;]/p | /html/body/table/tbody/tr/td/span[@id=&quot;NewsArticleTitle&quot;]"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
周末报
zm_njnews_cn_27359
http://zm.njnews.cn/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/div"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="table/tbody/tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;]"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot; and @align=&quot;center&quot;]/table[@bgcolor=&quot;#efefef&quot;]/tbody/tr/td/table/tbody/tr/td | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
郑州日报
zzrb_zynews_com_27120
http://zzrb.zynews.com/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="string(&quot;&quot;)"/> 
	  <xsl:variable name="content" select="/html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
潇湘晨报
xxcb_cn_27090
http://www.xxcb.cn/xxcba
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/table[@align=&quot;left&quot;]/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="string(&quot;&quot;)"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/table[@align=&quot;left&quot;]/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/table[@align=&quot;left&quot;]/tbody/tr/td/div[@class=&quot;xilan_content_tt&quot; and @id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
网易财经博客
163_blog_12
http://blog.163.com/financeger.html
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//ol[@class=&quot;first&quot;]/li/a"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
    <xsl:output method="xml" indent="yes"/>
    <xsl:param name="docurl"/>
    <xsl:param name="urlid"/>
    <xsl:variable name="box" select="/html/body"/>
    <xsl:template match="/">
        <Result>
            <xsl:attribute name="url">
                <xsl:value-of select="$docurl"/>
            </xsl:attribute>
            <xsl:attribute name="uid">
                <xsl:value-of select="$urlid"/>
            </xsl:attribute>
            <Column>
                <xsl:variable name="alias" select="//span[@class=&quot;ztag pre&quot;]"/>
                <Alias>
                    <xsl:value-of select="$alias"/>
                </Alias>
                <xsl:for-each select="$box">
                    <xsl:variable name="sub" select=".//div[@class=&quot;nbw-bitm clearfix bdwb bds2 bdc0&quot;]/h3/a[@class=&quot;ztag m2a fc03&quot;]"/>
                    <xsl:for-each select="$sub">
                        <SubItem>
                            <xsl:attribute name="url">
                                <xsl:value-of select="./@href"/>
                            </xsl:attribute>
                            <xsl:for-each select=".|.//*">
                                <xsl:choose>
                                    <xsl:when test="name() = 'SCRIPT' ">
                                        <xsl:text/>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:value-of select="text()"/>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:for-each>
                        </SubItem>
                    </xsl:for-each>
                </xsl:for-each>
            </Column>
        </Result>
    </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font

docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
郑州晚报
zzwb_zynews_com_27123
http://zzwb.zynews.com/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="string(&quot;&quot;)"/> 
	  <xsl:variable name="content" select="/html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
信息时报
informationtimes_dayoo_com_27067
http://informationtimes.dayoo.com
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div[@class=&quot;container&quot;]/div[@class=&quot;rightcolumn&quot;]/div[@class=&quot;subcbga&quot;]/div[@class=&quot;listcontent&quot;]/div[@class=&quot;list&quot;]/h4/span[@class=&quot;left&quot;]/a"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div[@class=&quot;container&quot;]/div[@class=&quot;rightcolumn&quot;]/div[@class=&quot;subcbga&quot;]/div[@class=&quot;contentlist&quot;]/div[@class=&quot;left&quot;]/div[@class=&quot;pagecontentlist&quot;]/ul"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="li/span[@class=&quot;left&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body[@id=&quot;content&quot;]/div[@class=&quot;container&quot;]/div[@class=&quot;leftcolumn&quot;]/div[@class=&quot;tbga&quot;]/div[@class=&quot;rightcolumn&quot;]/div[@class=&quot;subcbga&quot;]/div[@class=&quot;articlecontent&quot;]/div[@class=&quot;article&quot; and @id=&quot;article&quot;]/p[@class=&quot;infor&quot;]/span"/> 
          <xsl:variable name="source" select="/html/body[@id=&quot;content&quot;]/div[@class=&quot;container&quot;]/div[@class=&quot;leftcolumn&quot;]/div[@class=&quot;tbga&quot;]/div[@class=&quot;rightcolumn&quot;]/div[@class=&quot;subcbga&quot;]/div[@class=&quot;articlecontent&quot;]/div[@class=&quot;article&quot; and @id=&quot;article&quot;]/p[@class=&quot;infor&quot;]/span | /html/body[@id=&quot;content&quot;]/div[@class=&quot;container&quot;]/div[@class=&quot;leftcolumn&quot;]/div[@class=&quot;tbga&quot;]/div[@class=&quot;rightcolumn&quot;]/div[@class=&quot;subcbga&quot;]/div[@class=&quot;articlecontent&quot;]/div[@class=&quot;article&quot; and @id=&quot;article&quot;]/p[@class=&quot;infor&quot;]/span"/>
          <xsl:variable name="attr" select="/html/body[@id=&quot;content&quot;]/div[@class=&quot;container&quot;]/div[@class=&quot;leftcolumn&quot;]/div[@class=&quot;tbga&quot;]/div[@class=&quot;rightcolumn&quot;]/div[@class=&quot;subcbga&quot;]/div[@class=&quot;articlecontent&quot;]/div[@class=&quot;article&quot; and @id=&quot;article&quot;]/p[@class=&quot;infor&quot;]/span"/>       
	  <xsl:variable name="title" select="/html/body[@id=&quot;content&quot;]/div[@class=&quot;container&quot;]/div[@class=&quot;leftcolumn&quot;]/div[@class=&quot;tbga&quot;]/div[@class=&quot;rightcolumn&quot;]/div[@class=&quot;subcbga&quot;]/div[@class=&quot;divcontent&quot; and @id=&quot;pagelist&quot;]/ul/li/span[@class=&quot;left&quot;]/a"/> 
	  <xsl:variable name="publishdate" select="/html/head | /html/head"/> 
	  <xsl:variable name="content" select="/html/body[@id=&quot;content&quot;]/div[@class=&quot;container&quot;]/div[@class=&quot;leftcolumn&quot;]/div[@class=&quot;tbga&quot;]/div[@class=&quot;rightcolumn&quot;]/div[@class=&quot;subcbga&quot;]/div[@class=&quot;divcontent&quot; and @id=&quot;pagelist&quot;]/ul/li/span[@class=&quot;left&quot;]/a | /html/body[@id=&quot;content&quot;]/div[@class=&quot;container&quot;]/div[@class=&quot;leftcolumn&quot;]/div[@class=&quot;tbga&quot;]/div[@class=&quot;rightcolumn&quot;]/div[@class=&quot;subcbga&quot;]/div[@class=&quot;articlecontent&quot;]/div[@class=&quot;article&quot; and @id=&quot;article&quot;]/h3[@id=&quot;artTitle&quot;] | /html/body[@id=&quot;content&quot;]/div[@class=&quot;container&quot;]/div[@class=&quot;leftcolumn&quot;]/div[@class=&quot;tbga&quot;]/div[@class=&quot;rightcolumn&quot;]/div[@class=&quot;subcbga&quot;]/div[@class=&quot;articlecontent&quot;]/div[@class=&quot;article&quot; and @id=&quot;article&quot;]/div[@class=&quot;text&quot;]/founder-content/p | /html/body[@id=&quot;content&quot;]/div[@class=&quot;container&quot;]/div[@class=&quot;leftcolumn&quot;]/div[@class=&quot;tbga&quot;]/div[@class=&quot;rightcolumn&quot;]/div[@class=&quot;subcbga&quot;]/div[@class=&quot;articlecontent&quot;]/div[@class=&quot;divcontent&quot; and @id=&quot;pagelistb&quot;]/ul/li/span[@class=&quot;left&quot;]/a"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
经济参考报
202_84_17_25_26976
http://202.84.17.25/www/pages/jjckb/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@align=&quot;center&quot; and @class=&quot;hei12&quot; and @valign=&quot;top&quot;]/table[@class=&quot;hei12&quot;]/tbody/tr[@align=&quot;left&quot;]/td[@class=&quot;hei12&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;hei12&quot; and @valign=&quot;middle&quot;]/a[@class=&quot;hei12&quot;]"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body[@bgcolor=&quot;#2e3092&quot;]/table[@align=&quot;center&quot; and @bgcolor=&quot;#ffffff&quot;]/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr/td[@class=&quot;hei12&quot; and @align=&quot;center&quot;]"/> 
          <xsl:variable name="source" select="/html/body[@bgcolor=&quot;#2e3092&quot;]/table[@align=&quot;center&quot; and @bgcolor=&quot;#ffffff&quot;]/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr/td[@class=&quot;hei12&quot; and @align=&quot;center&quot;]"/>
          <xsl:variable name="attr" select="/html/body[@bgcolor=&quot;#2e3092&quot;]/table[@align=&quot;center&quot; and @bgcolor=&quot;#ffffff&quot;]/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr/td[@class=&quot;hei12&quot; and @align=&quot;center&quot;]"/>       
	  <xsl:variable name="title" select="/html/body[@bgcolor=&quot;#2e3092&quot;]/table[@align=&quot;center&quot; and @bgcolor=&quot;#ffffff&quot;]/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr/td[@class=&quot;hei16b&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body[@bgcolor=&quot;#2e3092&quot;]/table[@align=&quot;center&quot; and @bgcolor=&quot;#ffffff&quot;]/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr/td[@class=&quot;hei12&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="content" select="/html/body[@bgcolor=&quot;#2e3092&quot;]/table[@align=&quot;center&quot; and @bgcolor=&quot;#ffffff&quot;]/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr/td[@class=&quot;hei16b&quot; and @align=&quot;left&quot;] | /html/body[@bgcolor=&quot;#2e3092&quot;]/table[@align=&quot;center&quot; and @bgcolor=&quot;#ffffff&quot;]/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr/td[@class=&quot;hei16b&quot; and @align=&quot;center&quot;] | /html/body[@bgcolor=&quot;#2e3092&quot;]/table[@align=&quot;center&quot; and @bgcolor=&quot;#ffffff&quot;]/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td[@class=&quot;hei14&quot; and @align=&quot;center&quot;]/table/tbody/tr/td[@class=&quot;font6&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
哈尔滨日报
61_167_35_147_27126
http://61.167.35.147/hb
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table[@class=&quot;ft12h&quot; and @align=&quot;left&quot;]/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@align=&quot;left&quot;]/table/tbody/tr/td/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt11a&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr/td/table/tbody/tr/td[@align=&quot;center&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt11a&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt11&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr/td/table/tbody/tr/td[@class=&quot;ft11&quot; and @align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
新晚报
61_167_35_147_27013
http://61.167.35.147/xwb
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table[@class=&quot;ft12h&quot; and @align=&quot;left&quot;]/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@align=&quot;left&quot;]/table/tbody/tr/td/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt11&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr/td/table/tbody/tr/td[@align=&quot;center&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt11a&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt11&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr/td/table/tbody/tr/td[@class=&quot;ft11&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
安庆日报
aqdzb_aqnews_com_cn_27377
http://aqdzb.aqnews.com.cn/aqrb/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@id=&quot;pgn&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot; and @align=&quot;right&quot;]/td[@class=&quot;px13&quot; and @valign=&quot;middle&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@bgcolor=&quot;#ffffff&quot;]/td[@class=&quot;px13c&quot; and @align=&quot;center&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
安庆晚报
aqdzb_aqnews_com_cn_27378
http://aqdzb.aqnews.com.cn/aqwb
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot; and @align=&quot;right&quot;]/td[@class=&quot;px13&quot; and @valign=&quot;middle&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@bgcolor=&quot;#ffffff&quot;]/td[@class=&quot;px13c&quot; and @align=&quot;center&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
白城日报
bcrbszb_chinajilin_com_cn_27214
http://bcrbszb.chinajilin.com.cn/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table[@class=&quot;ft12h&quot; and @align=&quot;left&quot;]/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@align=&quot;left&quot;]/table/tbody/tr/td/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string('')"/> 
          <xsl:variable name="source" select="string('')"/>
          <xsl:variable name="attr" select="string('')"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;lai&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1 | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;c_c&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@id=&quot;articlecontent&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
中国品牌
brand_cqn_com_cn_27417
http://brand.cqn.com.cn/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="map/area"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;]"/> 
          <xsl:variable name="source" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr/td"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
巴中日报
bzrb_newssc_org_27230
http://bzrb.newssc.org/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/div[@align=&quot;center&quot;]/table[@id=&quot;table1894&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table/tbody/tr/td[@class=&quot;bmdh&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@class=&quot;font7&quot; and @align=&quot;left&quot;]/a"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;left&quot;]/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;font7&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table[@id=&quot;table15&quot;]/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@class=&quot;px12&quot; and @valign=&quot;top&quot; and @align=&quot;left&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/span/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
青岛财经日报
caijing_qingdaonews_com_27162
http://caijing.qingdaonews.com
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id=&quot;pageLink&quot;]"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/span[@class=&quot;px12&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
长白山日报
cbsrbszb_chinajilin_com_cn_27215
http://cbsrbszb.chinajilin.com.cn/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/span[@class=&quot;px12&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
长春日报
ccrbszb_chinajilin_com_cn_27216
http://ccrbszb.chinajilin.com.cn/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/span[@class=&quot;px12&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
成都日报
cdrb_newssc_org_27541
http://cdrb.newssc.org/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/table[@id=&quot;table1937&quot; and @bgcolor=&quot;#f7faff&quot;]/tbody/tr[@bgcolor=&quot;#fbdbdb&quot;]/td[@valign=&quot;top&quot; and @bgcolor=&quot;#ffe8e8&quot;]/div[@align=&quot;center&quot;]/span[@class=&quot;bmdh&quot;]/table/tbody/tr/td[@class=&quot;font7&quot; and @align=&quot;left&quot;]/a"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;left&quot;]/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;font7&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table[@id=&quot;table15&quot;]/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/span[@class=&quot;px12&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
成都商报
cdsb_newssc_org_27095
http://cdsb.newssc.org/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/div[@align=&quot;center&quot;]/table[@id=&quot;table1894&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table/tbody/tr/td[@class=&quot;bmdh&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@class=&quot;font7&quot; and @align=&quot;left&quot;]/a"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;left&quot;]/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;font7&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;]"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table[@id=&quot;table15&quot;]/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/span/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
成都晚报
cdwb_newssc_org_27542
http://cdwb.newssc.org/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/div[@align=&quot;center&quot;]/table[@id=&quot;table1894&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@class=&quot;bmdh&quot; and @valign=&quot;top&quot;]/div/table/tbody/tr/td[@class=&quot;font7&quot; and @align=&quot;left&quot;]/a"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;left&quot;]/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;font7&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td/table[@bgcolor=&quot;#cc0000&quot;]/tbody/tr/td/div[@class=&quot;STYLE2&quot; and @align=&quot;center&quot;]"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table[@id=&quot;table15&quot;]/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@class=&quot;px12&quot; and @valign=&quot;top&quot; and @align=&quot;left&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/span/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
城市导报
citynews_eastday_com_27096
http://citynews.eastday.com/csdb
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div/div[@class=&quot;left&quot;]/div[@class=&quot;newslist&quot;]/ul"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="li[@class=&quot;newslist_li2&quot;]/a[@class=&quot;blue1&quot;]"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/div[@id=&quot;contain&quot;]/div[@class=&quot;right&quot;]/div[@class=&quot;main&quot;]/div[@class=&quot;text_box&quot;]/div[@class=&quot;zhegngwen&quot;]/div[@align=&quot;center&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@id=&quot;contain&quot;]/div[@class=&quot;right&quot;]/div[@class=&quot;main&quot;]/div[@class=&quot;text_box&quot;]/div[@class=&quot;title1 title3&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@id=&quot;contain&quot;]/div[@class=&quot;right&quot;]/div[@class=&quot;main&quot;]/div[@class=&quot;text_box&quot;]/div[@class=&quot;zhegngwen&quot;]/div[@align=&quot;center&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/div[@id=&quot;contain&quot;]/div[@class=&quot;right&quot;]/div[@class=&quot;main&quot;]/div[@class=&quot;text_box&quot;]/div[@class=&quot;zhegngwen&quot;]/div[@align=&quot;center&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/div[@id=&quot;contain&quot;]/div[@class=&quot;right&quot;]/div[@class=&quot;main&quot;]/div[@class=&quot;text_box&quot;]/div[@class=&quot;zhegngwen&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/p/font"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
经理日报
cjb_newssc_org_27235
http://cjb.newssc.org/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/div"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="table/tbody/tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt1&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/head"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td[@class=&quot;domain&quot; and @align=&quot;center&quot;]/span[@class=&quot;bt3&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt1&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/table/tbody/tr/td[@class=&quot;STYLE33&quot; and @align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/span/table[@class=&quot;xilan_content_tt&quot;]/tbody/tr/td[@class=&quot;xilan_content_tt&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
长江日报
cjrb_cnhan_com_27441
http://cjrb.cnhan.com/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr/td[@align=&quot;center&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot; and @valign=&quot;top&quot;]/div/div[@align=&quot;left&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@align=&quot;left&quot;]/td[@class=&quot;whitenav&quot;]/font[@color=&quot;#ffffff&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/span[@class=&quot;px12&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
中国国门时报
cngm_cqn_com_cn_27393
http://cngm.cqn.com.cn/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;]"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
城市晚报
cswbszb_chinajilin_com_cn_27219
http://cswbszb.chinajilin.com.cn/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/span[@class=&quot;px12&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
昆明日报
daily_clzg_cn_27307
http://daily.clzg.cn/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div/div[@class=&quot;index&quot;]/div[@class=&quot;misc&quot;]/div[@class=&quot;idx&quot;]/div[@class=&quot;items&quot;]"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="div[@class=&quot;item&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/div[@id=&quot;content&quot;]/div[@class=&quot;index&quot;]/div[@class=&quot;cont&quot;]/div[@class=&quot;con&quot;]/div[@class=&quot;tl&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@id=&quot;content&quot;]/div[@class=&quot;nav&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@id=&quot;content&quot;]/div[@class=&quot;index&quot;]/div[@class=&quot;cont&quot;]/div[@class=&quot;con&quot;]/div[@class=&quot;tl&quot;] | /html/body/div[@id=&quot;content&quot;]/div[@class=&quot;index&quot;]/div[@class=&quot;cont&quot;]/div[@class=&quot;con&quot;]/div[@class=&quot;cons&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
东南商报
daily_cnnb_com_cn_27163
http://daily.cnnb.com.cn/dnsb/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class='default' and @valign='top']/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table[@align=&quot;center&quot;]/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt1&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table[@align=&quot;center&quot;]/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt2&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table[@align=&quot;center&quot;]/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt1&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table[@align=&quot;center&quot;]/tbody/tr/td[@class=&quot;font6&quot; and @valign=&quot;top&quot; and @align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/table[@class=&quot;xilan_content_tt&quot;]/tbody/tr/td[@class=&quot;xilan_content_tt&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
宁波日报
daily_cnnb_com_cn_27127
http://daily.cnnb.com.cn/nbrb/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table[@align=&quot;center&quot;]/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt1&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table[@align=&quot;center&quot;]/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt2&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table[@align=&quot;center&quot;]/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt1&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table[@align=&quot;center&quot;]/tbody/tr/td[@class=&quot;font6&quot; and @valign=&quot;top&quot; and @align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/table[@class=&quot;xilan_content_tt&quot;]/tbody/tr/td[@class=&quot;xilan_content_tt&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
宁波晚报
daily_cnnb_com_cn_27265
http://daily.cnnb.com.cn/nbwb/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table[@align=&quot;center&quot;]/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt2&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table[@align=&quot;center&quot;]/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt2&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table[@align=&quot;center&quot;]/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt1&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table[@align=&quot;center&quot;]/tbody/tr/td[@class=&quot;font6&quot; and @valign=&quot;top&quot; and @align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/table[@class=&quot;xilan_content_tt&quot;]/tbody/tr/td[@class=&quot;xilan_content_tt&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
东方卫报
dfwb_njnews_cn_27502
http://dfwb.njnews.cn
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
东莞时报
dgtime_timedg_com_27152
http://dgtime.timedg.com
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot; and @class=&quot;bjsz&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td/table/tbody/tr/td[@class=&quot;STYLE32&quot; and @valign=&quot;top&quot;]/table/tbody/tr"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="td/table/tbody/tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@class=&quot;bjsz&quot; and @align=&quot;center&quot; and @bgcolor=&quot;#cccccc&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@bgcolor=&quot;#fafeff&quot;]/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]/b"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@class=&quot;bjsz&quot; and @align=&quot;center&quot; and @bgcolor=&quot;#cccccc&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;] | /html/body/table[@class=&quot;bjsz&quot; and @align=&quot;center&quot; and @bgcolor=&quot;#cccccc&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot; and @bgcolor=&quot;#fafeff&quot;]/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@class=&quot;bjsz&quot; and @align=&quot;center&quot; and @bgcolor=&quot;#cccccc&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@bgcolor=&quot;#fafeff&quot;]/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@class=&quot;bjsz&quot; and @align=&quot;center&quot; and @bgcolor=&quot;#cccccc&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@bgcolor=&quot;#fafeff&quot;]/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]/b | /html/body/table[@class=&quot;bjsz&quot; and @align=&quot;center&quot; and @bgcolor=&quot;#cccccc&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@bgcolor=&quot;#fafeff&quot;]/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/span[@class=&quot;content&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
东南快报
digi_dnkb_com_cn_27014
http://digi.dnkb.com.cn/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div[@class=&quot;area&quot;]/div/div[@class=&quot;list_right&quot;]/div[@class=&quot;list_r_center&quot;]/ul/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;area&quot;]/div[@class=&quot;content_left&quot;]/div[@class=&quot;content_l_center&quot; and @id=&quot;pd_left&quot;]/div[@class=&quot;content_title&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt1&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;area&quot;]/div[@class=&quot;content_left&quot;]/div[@class=&quot;content_l_center&quot; and @id=&quot;pd_left&quot;]/div[@class=&quot;content_top_bg&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;area&quot;]/div[@class=&quot;search_01&quot;]/div[@class=&quot;search_center_01&quot;]/div[@class=&quot;qikan_content&quot; and @id=&quot;upqi&quot;]/span[@class=&quot;dqposition fB&quot;]/a[@class=&quot;cBlack&quot;]/span[@class=&quot;bt3&quot;] | /html/body/div[@class=&quot;area&quot;]/div[@class=&quot;content_left&quot;]/div[@class=&quot;content_l_center&quot; and @id=&quot;pd_left&quot;]/div[@class=&quot;content_title&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt2&quot; and @align=&quot;center&quot;] | /html/body/div[@class=&quot;area&quot;]/div[@class=&quot;content_left&quot;]/div[@class=&quot;content_l_center&quot; and @id=&quot;pd_left&quot;]/div[@class=&quot;content_title&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt1&quot; and @align=&quot;center&quot;] | /html/body/div[@class=&quot;area&quot;]/div[@class=&quot;content_left&quot;]/div[@class=&quot;content_l_center&quot; and @id=&quot;pd_left&quot;]/div[@class=&quot;content_top_bg&quot;]/div[@class=&quot;banci_title&quot;] | /html/body/div[@class=&quot;area&quot;]/div[@class=&quot;content_left&quot;]/div[@class=&quot;content_l_center&quot; and @id=&quot;pd_left&quot;]/div[@class=&quot;content_pic&quot;]/table[@bgcolor=&quot;#efefef&quot;]/tbody/tr/td/table/tbody/tr/td | /html/body/div[@class=&quot;area&quot;]/div[@class=&quot;content_left&quot;]/div[@class=&quot;content_l_center&quot; and @id=&quot;pd_left&quot;]/div[@class=&quot;content_text&quot;]/div[@id=&quot;ozoom&quot;]/table[@class=&quot;xilan_content_tt&quot;]/tbody/tr/td[@class=&quot;xilan_content_tt&quot;]/founder-content/p | /html/body/div[@class=&quot;area&quot;]/div[@class=&quot;content_right&quot; and @id=&quot;pd_right&quot;]/div[@class=&quot;newspaper_top&quot;]/p/strong"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
科技日报
digitalpaper_stdaily_com_27269
http://digitalpaper.stdaily.com:81/kjrb/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
东亚经贸新闻
dnews_dyxw_com_27204
http://dnews.dyxw.com/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@class=&quot;epback&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@class=&quot;bacd1&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@class=&quot;epback&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@class=&quot;bacd1&quot;]/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@class=&quot;epback&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@class=&quot;bacd1&quot;]/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@class=&quot;epback&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@class=&quot;bacd1&quot;]/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table[@class=&quot;epback&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@class=&quot;bacd1&quot;]/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@class=&quot;epback&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@class=&quot;bacd1&quot;]/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/span[@class=&quot;px12&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
都市快报
dskb_hangzhou_com_cn_27139
http://dskb.hangzhou.com.cn/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table[@class=&quot;ft12h&quot; and @align=&quot;left&quot;]/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@align=&quot;left&quot;]/table/tbody/tr/td/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string('')"/> 
          <xsl:variable name="source" select="string('')"/>
          <xsl:variable name="attr" select="string('')"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;lai&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1 | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;c_c&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@id=&quot;articlecontent&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
德阳日报
dyrb_newssc_org_27572
http://dyrb.newssc.org
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/div[@align=&quot;center&quot;]/table[@id=&quot;table1894&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table/tbody/tr/td[@class=&quot;bmdh&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@class=&quot;font7&quot; and @align=&quot;left&quot;]/a"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;left&quot;]/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;font7&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table[@id=&quot;table15&quot;]/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/span/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
江门日报
dzb_jmrb_com_27029
http://dzb.jmrb.com:8080/jmrb
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@id=&quot;mainbody&quot;]/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@class=&quot;px12&quot; and @align=&quot;left&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@id=&quot;mainbody&quot;]/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@id=&quot;mainbody&quot;]/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@id=&quot;mainbody&quot;]/tbody/tr/td/span[@class=&quot;px12&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
大众证券报
dzzq_njnews_cn_27154
http://dzzq.njnews.cn
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table[@class=&quot;ft12h&quot; and @align=&quot;left&quot;]/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@align=&quot;left&quot;]/table/tbody/tr/td/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string('')"/> 
          <xsl:variable name="source" select="string('')"/>
          <xsl:variable name="attr" select="string('')"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;lai&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1 | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;c_c&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@id=&quot;articlecontent&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
新文化报
enews_xwhb_net_27016
http://enews.xwhb.net/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table[@class=&quot;STYLE1&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@class=&quot;STYLE1&quot;]/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@id=&quot;clickeye_content&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@bgcolor=&quot;#eaeaea&quot;]/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@bgcolor=&quot;#de1005&quot;]/table[@class=&quot;STYLE1b&quot; and @align=&quot;center&quot;]/tbody/tr/td/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@id=&quot;clickeye_content&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@id=&quot;clickeye_content&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@id=&quot;clickeye_content&quot;]/table/tbody/tr/td/span[@class=&quot;px12&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@id=&quot;clickeye_content&quot;]/table/tbody/tr/td/span[@class=&quot;px12&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p/clk"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
右江日报
epaper_bsyjrb_com_27226
http://epaper.bsyjrb.com/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@bgcolor=&quot;#ffffff&quot;]/td[@class=&quot;px12c&quot; and @align=&quot;center&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
西藏日报
epaper_chinatibetnews_com_27078
http://epaper.chinatibetnews.com/xzrb
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td[@valign=&quot;top&quot;]"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
西藏商报
epaper_chinatibetnews_com_27076
http://epaper.chinatibetnews.com/xzsb
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td[@valign=&quot;top&quot;]"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@bgcolor=&quot;#ffffff&quot;]/table | /html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
安康日报
epaper_cnwest_com_27797
http://epaper.cnwest.com/akrb
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table[@class=&quot;ft12h&quot; and @align=&quot;left&quot;]/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@align=&quot;left&quot;]/table/tbody/tr/td/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string('')"/> 
          <xsl:variable name="source" select="string('')"/>
          <xsl:variable name="attr" select="string('')"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;lai&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1 | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;c_c&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@id=&quot;articlecontent&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
商洛日报
epaper_cnwest_com_27563
http://epaper.cnwest.com/slrb
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr/td[@valign=&quot;top&quot;]"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="table[@align=&quot;center&quot;]/tbody/tr/td/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#ffffff&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;bottom&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#ffffff&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#ffffff&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr/td[@class=&quot;content&quot; and @align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
铜川日报
epaper_cnwest_com_27770
http://epaper.cnwest.com/tcrb
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table[@class=&quot;ft12h&quot; and @align=&quot;left&quot;]/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@align=&quot;left&quot;]/table/tbody/tr/td/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string('')"/> 
          <xsl:variable name="source" select="string('')"/>
          <xsl:variable name="attr" select="string('')"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;lai&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1 | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;c_c&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@id=&quot;articlecontent&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
渭南日报
epaper_cnwest_com_27809
http://epaper.cnwest.com/wnrb/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr/td[@valign=&quot;top&quot;]"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="table[@align=&quot;center&quot;]/tbody/tr/td/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#ffffff&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@id=&quot;pgn&quot; and @align=&quot;left&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;bottom&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#ffffff&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#ffffff&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#ffffff&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr/td[@class=&quot;content&quot; and @align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
咸阳日报
epaper_cnwest_com_27565
http://epaper.cnwest.com/xyrb/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr/td[@valign=&quot;top&quot;]"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="table[@align=&quot;center&quot;]/tbody/tr/td/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#ffffff&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;bottom&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#ffffff&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#ffffff&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#ffffff&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr/td[@class=&quot;content&quot; and @align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
延安日报
epaper_cnwest_com_27800
http://epaper.cnwest.com/yarb
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table[@class=&quot;ft12h&quot; and @align=&quot;left&quot;]/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@align=&quot;left&quot;]/table/tbody/tr/td/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string('')"/> 
          <xsl:variable name="source" select="string('')"/>
          <xsl:variable name="attr" select="string('')"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;lai&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1 | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;c_c&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@id=&quot;articlecontent&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
榆林日报
epaper_cnwest_com_27805
http://epaper.cnwest.com/ylrb
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr/td[@valign=&quot;top&quot;]"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="table[@align=&quot;center&quot;]/tbody/tr/td/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#ffffff&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;bottom&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#ffffff&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#ffffff&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr/td[@class=&quot;content&quot; and @align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
中国质量报
epaper_cqn_com_cn_27772
http://epaper.cqn.com.cn/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;middle&quot; and @align=&quot;center&quot;]/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
大庆日报
epaper_dqdaily_com_27208
http://epaper.dqdaily.com/dqrb
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@align=&quot;left&quot; and @class=&quot;default&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="string(&quot;&quot;)"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/strong"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
大庆晚报
epaper_dqdaily_com_27209
http://epaper.dqdaily.com/dqwb
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/table"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
大庆星期五
epaper_dqdaily_com_27083
http://epaper.dqdaily.com/dqxqw/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/table/tbody/tr/td/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
大晚周刊
epaper_dqdaily_com_27011
http://epaper.dqdaily.com/dwzk
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/div"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="table/tbody/tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot;]/table/tbody/tr/td/table/tbody/tr/td"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/table"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot;]/table/tbody/tr/td/table/tbody/tr/td | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
当代生活报
epaper_gxnews_com_cn_27022
http://epaper.gxnews.com.cn/ddshb
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/p[@class=&quot;px12c&quot;]/table[@align=&quot;center&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span/font[@color=&quot;#05006c&quot;]/h1"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/p[@class=&quot;px12c&quot;]/table[@align=&quot;center&quot;]/tbody/tr[@valign=&quot;top&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/p[@class=&quot;px12c&quot;]/table[@align=&quot;center&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/p[@class=&quot;px12c&quot;]/table[@align=&quot;center&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span/font[@color=&quot;#05006c&quot;]/h1 | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/p[@class=&quot;px12c&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
健报
epaper_gxnews_com_cn_27223
http://epaper.gxnews.com.cn/jb
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/p[@class=&quot;px12c&quot;]/table[@align=&quot;center&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/p[@class=&quot;px12c&quot;]/table[@align=&quot;center&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/p[@class=&quot;px12c&quot;]/table[@align=&quot;center&quot;]/tbody/tr[@valign=&quot;top&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/p[@class=&quot;px12c&quot;]/table[@align=&quot;center&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/p[@class=&quot;px12c&quot;]/table[@align=&quot;center&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span/font[@color=&quot;#05006c&quot;]/h1 | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/p[@class=&quot;px12c&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
南国城报
epaper_gxnews_com_cn_27024
http://epaper.gxnews.com.cn/ngcb
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/p[@class=&quot;px12c&quot;]/table[@align=&quot;center&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/p[@class=&quot;px12c&quot;]/table[@align=&quot;center&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span/font[@color=&quot;#05006c&quot;]/h1"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/p[@class=&quot;px12c&quot;]/table[@align=&quot;center&quot;]/tbody/tr[@valign=&quot;top&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@class=&quot;px12&quot; and @align=&quot;left&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/p[@class=&quot;px12c&quot;]/table[@align=&quot;center&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/p[@class=&quot;px12c&quot;]/table[@align=&quot;center&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span/font[@color=&quot;#05006c&quot;]/h1 | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/p[@class=&quot;px12c&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
南国今报
epaper_gxnews_com_cn_27229
http://epaper.gxnews.com.cn/ngjb
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/p[@class=&quot;px12c&quot;]/table[@align=&quot;center&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/p[@class=&quot;px12c&quot;]/table[@align=&quot;center&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/p[@class=&quot;px12c&quot;]/table[@align=&quot;center&quot;]/tbody/tr[@valign=&quot;top&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/p[@class=&quot;px12c&quot;]/table[@align=&quot;center&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/p[@class=&quot;px12c&quot;]/table[@align=&quot;center&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span/font[@color=&quot;#05006c&quot;]/h1 | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/p[@class=&quot;px12c&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
半岛晨报
epaper_hilizi_com_27071
http://epaper.hilizi.com/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot; and @valign=&quot;top&quot;]"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@bgcolor=&quot;#ffffff&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@bgcolor=&quot;#ffffff&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot; and @bgcolor=&quot;#e8e8e8&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@bgcolor=&quot;#ffffff&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@bgcolor=&quot;#ffffff&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@bgcolor=&quot;#ffffff&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
黑龙江日报
epaper_hljnews_cn_27130
http://epaper.hljnews.cn/hljrb/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr/td/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;z12h24&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@bgcolor=&quot;#adadad&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#ffffff&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/span[@class=&quot;STYLE1&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@bgcolor=&quot;#adadad&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#ffffff&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/span | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@bgcolor=&quot;#adadad&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#ffffff&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@bgcolor=&quot;#adadad&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#ffffff&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
老年日报
epaper_hljnews_cn_27035
http://epaper.hljnews.cn/lnrb
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr/td/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;z12h24&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@bgcolor=&quot;#adadad&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#ffffff&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/span[@class=&quot;STYLE1&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@bgcolor=&quot;#adadad&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#ffffff&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@bgcolor=&quot;#adadad&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#ffffff&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
农村报
epaper_hljnews_cn_27174
http://epaper.hljnews.cn/ncb/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr/td/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;z12h24&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@bgcolor=&quot;#adadad&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#ffffff&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@id=&quot;pgn&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/span[@class=&quot;STYLE1&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@bgcolor=&quot;#adadad&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#ffffff&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@bgcolor=&quot;#adadad&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#ffffff&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
生活报
epaper_hljnews_cn_27042
http://epaper.hljnews.cn/shb/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr/td/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;z12h24&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@bgcolor=&quot;#adadad&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#ffffff&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@bgcolor=&quot;#adadad&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#ffffff&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/span[@class=&quot;STYLE1&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@bgcolor=&quot;#adadad&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#ffffff&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/span | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@bgcolor=&quot;#adadad&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#ffffff&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@bgcolor=&quot;#adadad&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#ffffff&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
新都市报
epaper_hljnews_cn_27045
http://epaper.hljnews.cn/xdsb/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td/table/tbody/tr/td/table/tbody/tr/td[@class=&quot;z12h24&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@bgcolor=&quot;#adadad&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#ffffff&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/span[@class=&quot;STYLE1&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@class=&quot;z12hong&quot;]/a | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr/td[@class=&quot;STYLE1&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@bgcolor=&quot;#adadad&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#ffffff&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@bgcolor=&quot;#adadad&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#ffffff&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
解放日报
epaper_jfdaily_com_26968
http://press.idoican.com.cn/detail/newspapers/040/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/form[@id=&quot;Form1&quot;]/div[@id=&quot;main&quot;]/div[@id=&quot;lay1&quot;]/div[@class=&quot;col_1&quot;]/ul[@class=&quot;lst_07&quot;]/li/a"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/form/div/div/div[@class=&quot;col_1&quot;]/div[@class=&quot;newsLst&quot;]/div[@class=&quot;pageAriticle&quot;]"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="dl/dt/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="/html/body/form[@id=&quot;from1&quot;]/div[@id=&quot;main&quot;]/div[@id=&quot;lay1&quot;]/div[@class=&quot;article&quot;]/h3"/>
          <xsl:variable name="attr" select="/html/body/form[@id=&quot;from1&quot;]/div[@id=&quot;main&quot;]/div[@id=&quot;lay1&quot;]/div[@class=&quot;article&quot;]/h3"/>       
	  <xsl:variable name="title" select="/html/body/form[@id=&quot;from1&quot;]/div[@id=&quot;main&quot;]/div[@id=&quot;lay1&quot;]/div[@class=&quot;article&quot;]/div[@class=&quot;page1&quot; and @id=&quot;ArticleTipComponent1_tipContainer&quot;]/em[@class=&quot;fl&quot;]/a"/> 
	  <xsl:variable name="publishdate" select="/html/body/form[@id=&quot;from1&quot;]/div[@id=&quot;main&quot;]/div[@id=&quot;lay1&quot;]/div[@class=&quot;article&quot;]/h3"/> 
	  <xsl:variable name="content" select="/html/body/form[@id=&quot;from1&quot;]/div[@id=&quot;main&quot;]/div[@id=&quot;lay1&quot;]/div[@class=&quot;article&quot;]/h1/span[@id=&quot;labArticleTitle&quot;] | /html/body/form[@id=&quot;from1&quot;]/div[@id=&quot;main&quot;]/div[@id=&quot;lay1&quot;]/div[@class=&quot;article&quot;]/h2[@id=&quot;firstTitle&quot;] | /html/body/form[@id=&quot;from1&quot;]/div[@id=&quot;main&quot;]/div[@id=&quot;lay1&quot;]/div[@class=&quot;article&quot;]/div[@class=&quot;content&quot; and @id=&quot;pArticleContent&quot;] | /html/body/form[@id=&quot;from1&quot;]/div[@id=&quot;main&quot;]/div[@id=&quot;lay1&quot;]/div[@class=&quot;article&quot;]/div[@class=&quot;page1&quot; and @id=&quot;ArticleTipComponent1_tipContainer&quot;]/em[@class=&quot;fl&quot;]/a | /html/body/form[@id=&quot;from1&quot;]/div[@id=&quot;main&quot;]/div[@id=&quot;lay1&quot;]/div[@class=&quot;article&quot;]/div[@class=&quot;page1&quot; and @id=&quot;ArticleTipComponent1_tipContainer&quot;]/em[@class=&quot;fr&quot;]/a | /html/body/form[@id=&quot;from1&quot;]/div[@id=&quot;main&quot;]/div[@id=&quot;lay1&quot;]/div[@class=&quot;col_1&quot;]/ul[@class=&quot;lst_11&quot; and @id=&quot;ArticlesComponent1_articlesContainer&quot;]/li/a | /html/body/form[@id=&quot;from1&quot;]/div[@id=&quot;main&quot;]/div[@id=&quot;lay1&quot;]/div[@class=&quot;col_1&quot;]/div[@id=&quot;ArticlesRelateComponent1_relateContainer&quot;]/div[@class=&quot;title&quot;]/a | /html/body/form[@id=&quot;from1&quot;]/div[@id=&quot;main&quot;]/div[@id=&quot;lay1&quot;]/div[@class=&quot;col_1&quot;]/div[@id=&quot;ArticlesRelateComponent1_relateContainer&quot;]/ul[@class=&quot;lst_12&quot;]/li/em/a | /html/body/form[@id=&quot;from1&quot;]/div[@id=&quot;main&quot;]/div[@id=&quot;lay1&quot;]/div[@class=&quot;col_1&quot;]/div[@id=&quot;ArticlesRelateComponent1_relateContainer&quot;]/ul[@class=&quot;lst_12&quot;]/li/a"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
江西日报
epaper_jxnews_com_cn_27047
http://epaper.jxnews.com.cn/jxrb/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;left&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@id=&quot;pgn&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@bgcolor=&quot;#ffffff&quot;]/td[@class=&quot;px12c&quot; and @align=&quot;center&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
焦作日报
epaper_jzrb_com_27189
http://epaper.jzrb.com
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
焦作晚报
epaper_jzrb_com_27553
http://epaper.jzrb.com/shck
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span"/> 
          <xsl:variable name="source" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span"/>
          <xsl:variable name="attr" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
凉都晚报
epaper_lpswz_com_27079
http://epaper.lpswz.com/ldwb
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@bgcolor=&quot;#ffffff&quot;]/table"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot; and @align=&quot;left&quot;]/div/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
六盘水日报
epaper_lpswz_com_27073
http://epaper.lpswz.com/lpsrb
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;]"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@bgcolor=&quot;#ffffff&quot;]/table"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot; and @align=&quot;left&quot;]/div/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
厦门商报
xmnn_cn_27594
http://www.xmnn.cn/dzbk/xmsb/epaper/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div[@class=&quot;sun_area_main&quot;]/div/div[@class=&quot;content&quot;]/table[@align=&quot;right&quot;]/tbody/tr[@valign=&quot;top&quot;]/td/div[@class=&quot;new_02&quot;]/div[@class=&quot;new_02_cont&quot;]/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;font7&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="/html/body/div"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;sun_area_main&quot;]/div[@id=&quot;mainContent&quot;]/div[@class=&quot;content&quot;]/table[@align=&quot;right&quot;]/tbody/tr[@valign=&quot;top&quot;]/td/div[@class=&quot;new-1_01_title02&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt1&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;sun_area_main&quot;]/div[@id=&quot;mainContent&quot;]/div[@class=&quot;content&quot;]/table[@align=&quot;right&quot;]/tbody/tr[@valign=&quot;top&quot;]/td/table"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;sun_area_main&quot;]/div[@id=&quot;mainContent&quot;]/div[@class=&quot;content&quot;]/table[@align=&quot;right&quot;]/tbody/tr[@valign=&quot;top&quot;]/td/div[@class=&quot;new-1_01_title02&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt1&quot; and @align=&quot;center&quot;] | /html/body/div[@class=&quot;sun_area_main&quot;]/div[@id=&quot;mainContent&quot;]/div[@class=&quot;content&quot;]/table[@align=&quot;right&quot;]/tbody/tr[@valign=&quot;top&quot;]/td/div[@class=&quot;new-1_01_cont&quot;]/div[@id=&quot;ozoom&quot;]/table[@class=&quot;xilan_content_tt&quot;]/tbody/tr/td[@class=&quot;xilan_content_tt&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
中国民航报
202_106_77_40_27295
http://202.106.77.40/mhb
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table[@class=&quot;ft12h&quot; and @align=&quot;left&quot;]/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@align=&quot;left&quot;]/table/tbody/tr/td/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string('')"/> 
          <xsl:variable name="source" select="string('')"/>
          <xsl:variable name="attr" select="string('')"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;lai&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1 | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;c_c&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@id=&quot;articlecontent&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
丽水日报
epaper_lsnews_com_cn_27407
http://epaper.lsnews.com.cn/lsrb/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@bgcolor=&quot;#ffffff&quot;]/table | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
南阳日报
epaper_nydaily_com_cn_27118
http://epaper.nydaily.com.cn/nyrb
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;]"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
曲靖日报
epaper_qjrb_cn_27309
http://epaper.qjrb.cn/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;]"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
证券时报
epaper_secutimes_com_27367
http://epaper.secutimes.com/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/table/tbody/tr/td/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
绍兴晚报
epaper_shaoxing_com_cn_27270
http://epaper.shaoxing.com.cn/sxwb
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;center&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@align=&quot;center&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/span[@class=&quot;px12&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
天天商报
epaper_shaoxing_com_cn_27167
http://epaper.shaoxing.com.cn/ttsb
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;right&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@align=&quot;center&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/span[@class=&quot;px12&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
京九晚报
epaper_sqrb_cn_27171
http://epaper.sqrb.cn/jjwb/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="string(&quot;&quot;)"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6 STYLE8&quot;]/div[@id=&quot;ozoom&quot;]/div[@id=&quot;copytext&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
商丘日报
epaper_sqrb_cn_27170
http://epaper.sqrb.cn/sqrb/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="string(&quot;&quot;)"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6 STYLE8&quot;]/div[@id=&quot;ozoom&quot;]/div[@id=&quot;copytext&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
沈阳E报
epaper_syd_com_cn_27122
http://epaper.syd.com.cn/syjb/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table[@class=&quot;ft12h&quot; and @align=&quot;left&quot;]/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@align=&quot;left&quot;]/table/tbody/tr/td/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string('')"/> 
          <xsl:variable name="source" select="string('')"/>
          <xsl:variable name="attr" select="string('')"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;lai&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1 | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;c_c&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@id=&quot;articlecontent&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
沈阳日报
epaper_syd_com_cn_26996
http://epaper.syd.com.cn/syrb/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div[@align=&quot;center&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;middle&quot;]/table[@id=&quot;table2606&quot;]/tbody/tr[@valign=&quot;top&quot;]/td/table[@align=&quot;center&quot; and @bgcolor=&quot;#ffffff&quot;]/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;middle&quot;]/table[@id=&quot;table2606&quot;]/tbody/tr[@valign=&quot;top&quot;]/td/table[@align=&quot;center&quot; and @bgcolor=&quot;#ffffff&quot;]/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;middle&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/font[@color=&quot;#ffffff&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;middle&quot;]/table[@id=&quot;table2606&quot;]/tbody/tr[@valign=&quot;top&quot;]/td/table[@align=&quot;center&quot; and @bgcolor=&quot;#ffffff&quot;]/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;middle&quot;]/table[@id=&quot;table2606&quot;]/tbody/tr[@valign=&quot;top&quot;]/td/table[@align=&quot;center&quot; and @bgcolor=&quot;#ffffff&quot;]/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong[@id=&quot;TitleID&quot;] | /html/body/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;middle&quot;]/table[@id=&quot;table2606&quot;]/tbody/tr[@valign=&quot;top&quot;]/td/table[@align=&quot;center&quot; and @bgcolor=&quot;#ffffff&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/table/tbody/tr/td/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
沈阳晚报
epaper_syd_com_cn_27005
http://epaper.syd.com.cn/sywb/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td/table/tbody/tr/td[@align=&quot;middle&quot; and @valign=&quot;top&quot;]/div/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;middle&quot;]/table[@id=&quot;table2606&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@align=&quot;center&quot;]/table[@align=&quot;center&quot; and @bgcolor=&quot;#ffffff&quot;]/tbody/tr/td/strong"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;middle&quot;]/table[@id=&quot;table2606&quot;]/tbody/tr[@valign=&quot;top&quot;]/td/table[@align=&quot;center&quot; and @bgcolor=&quot;#ffffff&quot;]/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong[@id=&quot;TitleID&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;middle&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/font[@color=&quot;#ffffff&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;middle&quot;]/table[@id=&quot;table2606&quot;]/tbody/tr[@valign=&quot;top&quot;]/td/table[@align=&quot;center&quot; and @bgcolor=&quot;#ffffff&quot;]/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;middle&quot;]/table[@id=&quot;table2606&quot;]/tbody/tr[@valign=&quot;top&quot;]/td/table[@align=&quot;center&quot; and @bgcolor=&quot;#ffffff&quot;]/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong[@id=&quot;TitleID&quot;] | /html/body/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;middle&quot;]/table[@id=&quot;table2606&quot;]/tbody/tr[@valign=&quot;top&quot;]/td/table[@align=&quot;center&quot; and @bgcolor=&quot;#ffffff&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/table/tbody/tr/td/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
新京报
epaper_thebeijingnews_com_27036
http://epaper.thebeijingnews.com
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @class=&quot;mulu&quot;]/ul[@class=&quot;ul02_l&quot;]"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="li/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td/table/tbody/tr/td[@class=&quot;inp&quot;]/form[@id=&quot;frm_search&quot;]/select[@class=&quot;slect&quot; and @id=&quot;lst_search&quot;]/option"/> 
          <xsl:variable name="source" select="/html/body/table/tbody/tr/td[@align=&quot;center&quot;]/table[@class=&quot;footerbg1&quot; and @align=&quot;center&quot;]/tbody/tr/td[@align=&quot;center&quot;]"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="string(&quot;&quot;)"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
城市快报
epaper_tianjinwe_com_27059
http://epaper.tianjinwe.com/cskb
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr[@valign=&quot;top&quot;]/td[@class=&quot;default&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
假日100天
epaper_tianjinwe_com_27092
http://epaper.tianjinwe.com/jr100
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;default&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;default&quot;]/a"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;default&quot;]/a | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
每日新报
epaper_tianjinwe_com_27062
http://epaper.tianjinwe.com/mrxb
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr[@valign=&quot;top&quot;]/td[@class=&quot;default&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;default&quot;]/a | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
天津日报
epaper_tianjinwe_com_27008
http://epaper.tianjinwe.com/tjrb
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr[@valign=&quot;top&quot;]/td[@class=&quot;default&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
东莞日报
epaper_timedg_com_27151
http://epaper.timedg.com
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot; and @class=&quot;bjsz&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td/table/tbody/tr/td[@class=&quot;STYLE32&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@class=&quot;bjsz&quot; and @align=&quot;center&quot; and @bgcolor=&quot;#cccccc&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@bgcolor=&quot;#fafeff&quot;]/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@class=&quot;bjsz&quot; and @align=&quot;center&quot; and @bgcolor=&quot;#cccccc&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot; and @bgcolor=&quot;#fafeff&quot;]/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@class=&quot;bjsz&quot; and @align=&quot;center&quot; and @bgcolor=&quot;#cccccc&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@bgcolor=&quot;#fafeff&quot;]/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@class=&quot;bjsz&quot; and @align=&quot;center&quot; and @bgcolor=&quot;#cccccc&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@bgcolor=&quot;#fafeff&quot;]/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]/b | /html/body/table[@class=&quot;bjsz&quot; and @align=&quot;center&quot; and @bgcolor=&quot;#cccccc&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@bgcolor=&quot;#fafeff&quot;]/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/span[@class=&quot;content&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
大众卫生报
epaper_voc_com_cn_27353
http://epaper.voc.com.cn/dzwsb/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6 STYLE31&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
湖南日报
epaper_voc_com_cn_27321
http://epaper.voc.com.cn/hnrb/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6 STYLE31&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
家庭导报
epaper_voc_com_cn_27355
http://epaper.voc.com.cn/jtdb/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/div"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="table/tbody/tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6 STYLE31&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
科技新报
epaper_voc_com_cn_27518
http://epaper.voc.com.cn/kjxb/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;]"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6 STYLE31&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
三湘都市报
epaper_voc_com_cn_27345
http://epaper.voc.com.cn/sxdsb/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6 STYLE31&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
文萃
epaper_voc_com_cn_27356
http://epaper.voc.com.cn/wcb/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table[@class=&quot;ft12h&quot; and @align=&quot;left&quot;]/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@align=&quot;left&quot;]/table/tbody/tr/td/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string('')"/> 
          <xsl:variable name="source" select="string('')"/>
          <xsl:variable name="attr" select="string('')"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;lai&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1 | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;c_c&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@id=&quot;articlecontent&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
西安日报
epaper_xawb_com_27436
http://epaper.xawb.com/xarb/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td/a[@class=&quot;dotitle&quot;]"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot; and @bgcolor=&quot;#f4f4f4&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt1&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot; and @bgcolor=&quot;#f4f4f4&quot;]/tbody/tr/td"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@bgcolor=&quot;#ffffff&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot; and @bgcolor=&quot;#f4f4f4&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt2&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot; and @bgcolor=&quot;#f4f4f4&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt1&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot; and @bgcolor=&quot;#f4f4f4&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@class=&quot;font6&quot; and @valign=&quot;top&quot; and @align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/table[@class=&quot;xilan_content_tt&quot;]/tbody/tr/td[@class=&quot;xilan_content_tt&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
西安晚报
epaper_xawb_com_27437
http://epaper.xawb.com/xawb
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot; and @bgcolor=&quot;#f4f4f4&quot;]/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt1&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td/font[@color=&quot;#990000&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot; and @bgcolor=&quot;#f4f4f4&quot;]/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt2&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot; and @bgcolor=&quot;#f4f4f4&quot;]/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt1&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot; and @bgcolor=&quot;#f4f4f4&quot;]/tbody/tr/td[@class=&quot;font6&quot; and @valign=&quot;top&quot; and @align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/table[@class=&quot;xilan_content_tt&quot;]/tbody/tr/td[@class=&quot;xilan_content_tt&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
皖南晨刊
er_xuanwww_com_27388
http://epaper.xuanwww.com/wnck/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt1&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt2&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt1&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td[@class=&quot;font6&quot; and @valign=&quot;top&quot; and @align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/table[@class=&quot;xilan_content_tt&quot;]/tbody/tr/td[@class=&quot;xilan_content_tt&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
宣城日报
er_xuanwww_com_27380
http://epaper.xuanwww.com/xcrb/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt2&quot; and @align=&quot;center&quot;]"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt1&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt2&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt1&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td[@class=&quot;font6&quot; and @valign=&quot;top&quot; and @align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/table[@class=&quot;xilan_content_tt&quot;]/tbody/tr/td[@class=&quot;xilan_content_tt&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
扬子晚报
epaper_yangtse_com_27522
http://epaper.yangtse.com
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
福建日报
fjrb_fjnet_cn_26972
http://fjrb.fjnet.cn
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td[@align=&quot;center&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt1&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt1&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table[@align=&quot;center&quot; and @bgcolor=&quot;#fffaec&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table[@align=&quot;center&quot; and @bgcolor=&quot;#fffaec&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;right&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt2&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt1&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt4&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td[@class=&quot;font6&quot; and @valign=&quot;top&quot; and @align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/table[@class=&quot;xilan_content_tt&quot;]/tbody/tr/td[@class=&quot;xilan_content_tt&quot;]/founder-content/p | /html/body/table/tbody/tr/td/span[@id=&quot;NewsEditionName&quot;] | /html/body/table/tbody/tr/td/span[@id=&quot;NewsArticleTitle&quot;] | /html/body/table/tbody/tr/td/span[@id=&quot;NewsArticleAuthor&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt1&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt4&quot; and @align=&quot;center&quot;] | /html/body/table/tbody/tr/td/span[@id=&quot;NewsArticleTitle&quot;] | /html/body/table/tbody/tr/td/span[@id=&quot;NewsArticleAuthor&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td[@class=&quot;font6&quot; and @valign=&quot;top&quot; and @align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/table[@class=&quot;xilan_content_tt&quot;]/tbody/tr/td[@class=&quot;xilan_content_tt&quot;]/founder-content/p/font"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
广州日报
gzdaily_dayoo_com_26994
http://gzdaily.dayoo.com
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div[@class=&quot;container&quot;]/div[@class=&quot;rightcolumn&quot;]/div[@class=&quot;subcbga&quot;]/div[@class=&quot;listcontent&quot;]/div[@class=&quot;list&quot;]/h4/span[@class=&quot;left&quot;]/a"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div[@class=&quot;bg&quot;]/div[@class=&quot;container&quot;]/div[@class=&quot;rightcolumn&quot;]/div[@class=&quot;subcbga&quot;]/div[@class=&quot;contentlist&quot;]/div[@class=&quot;left&quot;]/div[@class=&quot;pagecontentlist&quot;]/ul"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="li/span[@class=&quot;left&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body[@id=&quot;content&quot;]/div[@class=&quot;container&quot;]/div[@class=&quot;rightcolumn&quot;]/div[@class=&quot;subcbga&quot;]/div[@class=&quot;articlecontent&quot;]/div[@class=&quot;article&quot; and @id=&quot;article&quot;]/p[@class=&quot;infor&quot;]/span"/> 
          <xsl:variable name="source" select="/html/body[@id=&quot;content&quot;]/div[@class=&quot;container&quot;]/div[@class=&quot;rightcolumn&quot;]/div[@class=&quot;subcbga&quot;]/div[@class=&quot;articlecontent&quot;]/div[@class=&quot;article&quot; and @id=&quot;article&quot;]/p[@class=&quot;infor&quot;]/span | /html/body[@id=&quot;content&quot;]/div[@class=&quot;container&quot;]/div[@class=&quot;rightcolumn&quot;]/div[@class=&quot;subcbga&quot;]/div[@class=&quot;articlecontent&quot;]/div[@class=&quot;article&quot; and @id=&quot;article&quot;]/p[@class=&quot;infor&quot;]/span"/>
          <xsl:variable name="attr" select="/html/body[@id=&quot;content&quot;]/div[@class=&quot;container&quot;]/div[@class=&quot;rightcolumn&quot;]/div[@class=&quot;subcbga&quot;]/div[@class=&quot;articlecontent&quot;]/div[@class=&quot;article&quot; and @id=&quot;article&quot;]/p[@class=&quot;infor&quot;]/span"/>       
	  <xsl:variable name="title" select="/html/body[@id=&quot;content&quot;]/div[@class=&quot;container&quot;]/div[@class=&quot;rightcolumn&quot;]/div[@class=&quot;subcbga&quot;]/div[@class=&quot;divcontent&quot; and @id=&quot;pagelist&quot;]/ul/li/span[@class=&quot;left&quot;]/a"/> 
	  <xsl:variable name="publishdate" select="/html/head | /html/head"/> 
	  <xsl:variable name="content" select="/html/body[@id=&quot;content&quot;]/div[@class=&quot;container&quot;]/div[@class=&quot;leftcolumn&quot;]/div[@class=&quot;leftcolumncontent&quot;]/div[@class=&quot;pagecontentlist&quot;]/p[@class=&quot;title&quot;]/span[@class=&quot;left&quot;]/a | /html/body[@id=&quot;content&quot;]/div[@class=&quot;container&quot;]/div[@class=&quot;rightcolumn&quot;]/div[@class=&quot;subcbga&quot;]/div[@class=&quot;divcontent&quot; and @id=&quot;pagelist&quot;]/ul/li/span[@class=&quot;left&quot;]/a | /html/body[@id=&quot;content&quot;]/div[@class=&quot;container&quot;]/div[@class=&quot;rightcolumn&quot;]/div[@class=&quot;subcbga&quot;]/div[@class=&quot;articlecontent&quot;]/div[@class=&quot;article&quot; and @id=&quot;article&quot;]/h3[@id=&quot;artTitle&quot;] | /html/body[@id=&quot;content&quot;]/div[@class=&quot;container&quot;]/div[@class=&quot;rightcolumn&quot;]/div[@class=&quot;subcbga&quot;]/div[@class=&quot;articlecontent&quot;]/div[@class=&quot;article&quot; and @id=&quot;article&quot;]/div[@class=&quot;text&quot;]/founder-content/p | /html/body[@id=&quot;content&quot;]/div[@class=&quot;container&quot;]/div[@class=&quot;rightcolumn&quot;]/div[@class=&quot;subcbga&quot;]/div[@class=&quot;articlecontent&quot;]/div[@class=&quot;divcontent&quot; and @id=&quot;pagelistb&quot;]/ul/li/span[@class=&quot;left&quot;]/a | /html/body[@id=&quot;content&quot;]/div[@class=&quot;container&quot;]/div[@class=&quot;rightcolumn&quot;]/div[@class=&quot;subcbga&quot;]/div[@class=&quot;articlecontent&quot;]/div[@class=&quot;article&quot; and @id=&quot;article&quot;]/h3[@id=&quot;artTitle&quot;]"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
鹤壁日报
hbrb_hebiw_com_27186
http://hbrb.hebiw.com/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table[@class=&quot;ft12h&quot; and @align=&quot;left&quot;]/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@align=&quot;left&quot;]/table/tbody/tr/td/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string('')"/> 
          <xsl:variable name="source" select="string('')"/>
          <xsl:variable name="attr" select="string('')"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;lai&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1 | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;c_c&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@id=&quot;articlecontent&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
海南日报
hnrb_hinews_cn_27108
http://hnrb.hinews.cn/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt2&quot; and @align=&quot;center&quot;]"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt2&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt2&quot; and @align=&quot;center&quot;] | /html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt1&quot; and @align=&quot;center&quot;] | /html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@class=&quot;font6&quot; and @align=&quot;center&quot;]/div[@id=&quot;ozoom&quot;]/table[@class=&quot;xilan_content_tt&quot;]/tbody/tr/td[@class=&quot;xilan_content_tt&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
杭州日报
hzdaily_hangzhou_com_cn_27028
http://hzdaily.hangzhou.com.cn/hzrb
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table/tbody/tr[@valign=&quot;top&quot;]/td/table[@align=&quot;center&quot;]/tbody/tr/td/table/tbody/tr/td/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table/tbody/tr[@valign=&quot;top&quot;]/td/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@bgcolor=&quot;EDBCBC&quot;]/tbody/tr/td[@valign=&quot;bottom&quot; and @bgcolor=&quot;#fff3f5&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt2&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td[@align=&quot;center&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table/tbody/tr[@valign=&quot;top&quot;]/td/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@bgcolor=&quot;EDBCBC&quot;]/tbody/tr/td[@valign=&quot;bottom&quot; and @bgcolor=&quot;#fff3f5&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt2&quot; and @align=&quot;center&quot;] | /html/body/table/tbody/tr[@valign=&quot;top&quot;]/td/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@bgcolor=&quot;EDBCBC&quot;]/tbody/tr/td[@valign=&quot;bottom&quot; and @bgcolor=&quot;#fff3f5&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt1&quot; and @align=&quot;center&quot;] | /html/body/table/tbody/tr[@valign=&quot;top&quot;]/td/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@bgcolor=&quot;EDBCBC&quot;]/tbody/tr/td[@valign=&quot;bottom&quot; and @bgcolor=&quot;#fff3f5&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/table[@class=&quot;xilan_content_tt&quot;]/tbody/tr/td[@class=&quot;xilan_content_tt&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
每日商报
hzdaily_hangzhou_com_cn_27165
http://hzdaily.hangzhou.com.cn/mrsb/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table/tbody/tr[@valign=&quot;top&quot;]/td/table[@align=&quot;center&quot;]/tbody/tr/td/table/tbody/tr/td/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table/tbody/tr[@valign=&quot;top&quot;]/td/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt1&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td[@align=&quot;center&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table/tbody/tr[@valign=&quot;top&quot;]/td/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt2&quot; and @align=&quot;center&quot;] | /html/body/table/tbody/tr[@valign=&quot;top&quot;]/td/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt1&quot; and @align=&quot;center&quot;] | /html/body/table/tbody/tr[@valign=&quot;top&quot;]/td/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/table[@class=&quot;xilan_content_tt&quot;]/tbody/tr/td[@class=&quot;xilan_content_tt&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
江城日报
jcrbszb_chinajilin_com_cn_27015
http://jcrbszb.chinajilin.com.cn/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/span[@class=&quot;px12&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
晋江经济报
jjjjb_fjnet_cn_27133
http://jjjjb.fjnet.cn
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@align=&quot;center&quot; and @valign=&quot;top&quot;]/table[@align=&quot;left&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;left&quot;]/table[@align=&quot;left&quot;]/tbody/tr/td/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;big&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;left&quot;]/table[@align=&quot;left&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@id=&quot;article_txt&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr[@align=&quot;center&quot;]/td/table | /html/body/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;left&quot;]/table/tbody/tr/td[@class=&quot;default&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;left&quot;]/table[@align=&quot;left&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@id=&quot;article_txt&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;left&quot;]/table[@align=&quot;left&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@id=&quot;article_txt&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;] | /html/body/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;left&quot;]/table[@align=&quot;left&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@id=&quot;article_txt&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
金陵晚报
jlwb_njnews_cn_27157
http://jlwb.njnews.cn
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
安吉日报
jraj_ajnews_cn_27402
http://jraj.ajnews.cn/site1/ajrb/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;center&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@align=&quot;center&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
江苏法制报
jsfzb_xhby_net_27332
http://jsfzb.xhby.net
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table[@class=&quot;wz&quot;]/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@class=&quot;menu&quot; and @valign=&quot;middle&quot; and @align=&quot;left&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table[@class=&quot;wz&quot;]/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table[@class=&quot;wz&quot;]/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table[@class=&quot;wz&quot;]/tbody/tr/td[@align=&quot;center&quot;]/div[@class=&quot;content&quot; and @id=&quot;ozoom&quot;]/founder-content/p | /html/body/table/tbody/tr/td/span[@id=&quot;NewsArticleTitle&quot;]"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
江苏经济报
jsjjb_xhby_net_27328
http://jsjjb.xhby.net/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table[@class=&quot;wz&quot;]/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@class=&quot;menu&quot; and @valign=&quot;middle&quot; and @align=&quot;left&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table[@class=&quot;wz&quot;]/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table[@class=&quot;wz&quot;]/tbody/tr/td[@align=&quot;center&quot;]/div[@class=&quot;content&quot; and @id=&quot;ozoom&quot;]/founder-content/p | /html/body/table/tbody/tr/td/span[@id=&quot;NewsArticleTitle&quot;]"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
江苏商报
jssb_njnews_cn_27159
http://jssb.njnews.cn
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@bgcolor=&quot;#ffffff&quot;]/table | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
嘉兴日报
jxrb_cnjxol_com_27136
http://jxrb.cnjxol.com/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;px12&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@bgcolor=&quot;#ffffff&quot;]/td[@class=&quot;px12c&quot; and @align=&quot;center&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
现代快报
kuaibao_xinhuanet_com_27516
http://kuaibao.xinhuanet.com
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr/td[@valign=&quot;top&quot;]/table[@class=&quot;rightxuk&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@class=&quot;lefttxuk&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong/span[@id=&quot;contenttitle&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@bgcolor=&quot;#f6f6f6&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td/span[@class=&quot;px12&quot;]/strong | /html/body/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr/td[@valign=&quot;top&quot;]/table[@class=&quot;rightxuk&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@class=&quot;lefttxuk&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong/span[@id=&quot;contenttitle&quot;] | /html/body/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr/td[@valign=&quot;top&quot;]/table[@class=&quot;rightxuk&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@class=&quot;leftxuk&quot;]/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;] | /html/body/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr/td[@valign=&quot;top&quot;]/table[@class=&quot;rightxuk&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@class=&quot;leftxuk&quot;]/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
乐山日报
lsrb_newssc_org_27236
http://lsrb.newssc.org/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/div[@align=&quot;center&quot;]/table[@id=&quot;table1894&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table/tbody/tr/td[@class=&quot;bmdh&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@class=&quot;font7&quot; and @align=&quot;left&quot;]/a"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;left&quot;]/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;font7&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table[@id=&quot;table15&quot;]/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/span/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
三江都市报
lswb_newssc_org_27238
http://lswb.newssc.org/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/div[@align=&quot;center&quot;]/table[@id=&quot;table1894&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table/tbody/tr/td[@class=&quot;bmdh&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@class=&quot;font7&quot; and @align=&quot;left&quot;]/a"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;left&quot;]/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;font7&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table[@id=&quot;table15&quot;]/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@class=&quot;px12&quot; and @valign=&quot;top&quot; and @align=&quot;left&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/span/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
洛阳日报
lyrb_lyd_com_cn_27191
http://lyrb.lyd.com.cn/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr[@valign=&quot;top&quot;]/td[@class=&quot;default&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span/b"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;default&quot;]/a/div[@class=&quot;title&quot;] | /html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span/b | /html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;] | /html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
辽源日报
lyrbszb_chinajilin_com_cn_27221
http://lyrbszb.chinajilin.com.cn/html/node_206.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/span[@class=&quot;px12&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
洛阳晚报
lywb_lyd_com_cn_27192
http://lywb.lyd.com.cn/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr[@valign=&quot;top&quot;]/td[@class=&quot;default&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span/b | /html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;] | /html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
泸州日报
lzrb_newssc_org_27243
http://lzrb.newssc.org/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/table/tbody/tr/td[@class=&quot;default&quot; and @bgcolor=&quot;#e8e8e8&quot;]/table/tbody/tr/td[@class=&quot;bmdh&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@class=&quot;font7&quot; and @align=&quot;left&quot;]/a"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;left&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr[@align=&quot;left&quot;]/td[@class=&quot;style02&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;font7&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/span[@class=&quot;px12&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
闽南日报
mnrbszb_mnrb_net_27021
http://mnrbszb.mnrb.net/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/table/tbody/tr/td/div"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="table/tbody/tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td[@bgcolor=&quot;#ffffff&quot;]/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table[@class=&quot;STYLEqs&quot;]/tbody/tr/td[@align=&quot;left&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td[@bgcolor=&quot;#ffffff&quot;]/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td[@bgcolor=&quot;#ffffff&quot;]/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td[@bgcolor=&quot;#ffffff&quot;]/div/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
眉山日报
msrb_newssc_org_27245
http://msrb.newssc.org
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/div[@align=&quot;center&quot;]/table[@id=&quot;table1894&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table/tbody/tr/td[@class=&quot;bmdh&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@class=&quot;font7&quot; and @align=&quot;left&quot;]/a"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;left&quot;]/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;font7&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;]"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table[@id=&quot;table15&quot;]/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/span/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
绵阳日报
myrb_newssc_org_27246
http://myrb.newssc.org
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/div[@align=&quot;center&quot;]/table[@id=&quot;table1894&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table/tbody/tr/td[@class=&quot;bmdh&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@class=&quot;font7&quot; and @align=&quot;left&quot;]/a"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;left&quot;]/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;font7&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td/table/tbody/tr/td/div[@class=&quot;STYLE2&quot; and @align=&quot;center&quot;]"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table[@id=&quot;table15&quot;]/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/span/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
南充日报
ncrb_newssc_org_27253
http://ncrb.newssc.org
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/div[@align=&quot;center&quot;]/table[@id=&quot;table1894&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table/tbody/tr/td[@class=&quot;bmdh&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@class=&quot;font7&quot; and @align=&quot;left&quot;]/a"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;left&quot;]/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;font7&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table[@id=&quot;table15&quot;]/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/span/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
北京晚报
newepaper_bjd_com_cn_26989
http://newepaper.bjd.com.cn/bjwb
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;right&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="table/tbody/tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;]"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot; and @align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
河南日报
newpaper_dahe_cn_27552
http://newpaper.dahe.cn/hnrb
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div[@class=&quot;dCon&quot;]/div[@class=&quot;dConL&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body/div[@class=&quot;dCon dDetailAll&quot; and @id=&quot;con1&quot;]/div[@class=&quot;dConR dDetail&quot;]/div[@class=&quot;dTit2&quot;]/span/a"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;dCon dDetailAll&quot; and @id=&quot;con1&quot;]/div[@class=&quot;dConR dDetail&quot;]/div[@class=&quot;dTit2&quot;]/h1/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;dCon dDetailAll&quot; and @id=&quot;con1&quot;]/div[@class=&quot;dConR dDetail&quot;]/div[@class=&quot;dSearch&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;dCon dDetailAll&quot; and @id=&quot;con1&quot;]/div[@class=&quot;dConR dDetail&quot;]/div[@class=&quot;dTit2&quot;]/h1/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/div[@class=&quot;dCon dDetailAll&quot; and @id=&quot;con1&quot;]/div[@class=&quot;dConR dDetail&quot;]/div[@class=&quot;dTit2&quot;]/h1/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/div[@class=&quot;dCon dDetailAll&quot; and @id=&quot;con1&quot;]/div[@class=&quot;dConR dDetail&quot;]/div[@class=&quot;dContents&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
河南日报农村版
newpaper_dahe_cn_27032
http://newpaper.dahe.cn/hnrbncb/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div[@class=&quot;dCon&quot;]/div[@class=&quot;dConL&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body/div[@class=&quot;dCon dDetailAll&quot; and @id=&quot;con1&quot;]/div[@class=&quot;dConR dDetail&quot;]/div[@class=&quot;dTit2&quot;]/span/a"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;dCon dDetailAll&quot; and @id=&quot;con1&quot;]/div[@class=&quot;dConR dDetail&quot;]/div[@class=&quot;dTit2&quot;]/h1/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;dCon dDetailAll&quot; and @id=&quot;con1&quot;]/div[@class=&quot;dConR dDetail&quot;]/div[@class=&quot;dSearch&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;dCon dDetailAll&quot; and @id=&quot;con1&quot;]/div[@class=&quot;dConR dDetail&quot;]/div[@class=&quot;dTit2&quot;]/h1/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/div[@class=&quot;dCon dDetailAll&quot; and @id=&quot;con1&quot;]/div[@class=&quot;dConR dDetail&quot;]/div[@class=&quot;dContents&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
宿迁日报
epaper_sqdaily_com_27148
http://epaper.sqdaily.com/sqrb
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/table/tbody/tr/td/table/tbody/tr/td/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@bgcolor=&quot;#f8f5f0&quot;]/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;bottom&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td/table/tbody/tr/td[@align=&quot;left&quot;]/span/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@bgcolor=&quot;#f8f5f0&quot;]/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@bgcolor=&quot;#f8f5f0&quot;]/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@bgcolor=&quot;#f8f5f0&quot;]/div/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/span[@class=&quot;font6&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
宿迁晚报
epaper_sqdaily_com_27153
http://epaper.sqdaily.com/sqwb
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/table/tbody/tr/td/table/tbody/tr/td/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@bgcolor=&quot;#f8f5f0&quot;]/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;bottom&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@bgcolor=&quot;#f8f5f0&quot;]/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@bgcolor=&quot;#f8f5f0&quot;]/div/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/span[@class=&quot;font6&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
河南商报
newpaper_dahe_cn_27538
http://newpaper.dahe.cn/hnsb/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div[@class=&quot;dCon&quot;]/div[@class=&quot;dConL&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body/div[@class=&quot;dCon dDetailAll&quot; and @id=&quot;con1&quot;]/div[@class=&quot;dConR dDetail&quot;]/div[@class=&quot;dTit2&quot;]/span/a"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;dCon dDetailAll&quot; and @id=&quot;con1&quot;]/div[@class=&quot;dConR dDetail&quot;]/div[@class=&quot;dTit2&quot;]/h1/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;dCon dDetailAll&quot; and @id=&quot;con1&quot;]/div[@class=&quot;dConR dDetail&quot;]/div[@class=&quot;dSearch&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;dCon dDetailAll&quot; and @id=&quot;con1&quot;]/div[@class=&quot;dConR dDetail&quot;]/div[@class=&quot;dTit2&quot;]/h1/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/div[@class=&quot;dCon dDetailAll&quot; and @id=&quot;con1&quot;]/div[@class=&quot;dConR dDetail&quot;]/div[@class=&quot;dTit2&quot;]/h1/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/div[@class=&quot;dCon dDetailAll&quot; and @id=&quot;con1&quot;]/div[@class=&quot;dConR dDetail&quot;]/div[@class=&quot;dContents&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
河南法制报
newpaper_dahe_cn_27030
http://newpaper.dahe.cn/jrab/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div[@class=&quot;dCon&quot;]/div[@class=&quot;dConL&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body/div[@class=&quot;dCon dDetailAll&quot; and @id=&quot;con1&quot;]/div[@class=&quot;dConR dDetail&quot;]/div[@class=&quot;dTit2&quot;]/span/a"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;dCon dDetailAll&quot; and @id=&quot;con1&quot;]/div[@class=&quot;dConR dDetail&quot;]/div[@class=&quot;dTit2&quot;]/h1/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;dCon dDetailAll&quot; and @id=&quot;con1&quot;]/div[@class=&quot;dConR dDetail&quot;]/div[@class=&quot;dSearch&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;dCon dDetailAll&quot; and @id=&quot;con1&quot;]/div[@class=&quot;dConR dDetail&quot;]/div[@class=&quot;dTit2&quot;]/h1/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/div[@class=&quot;dCon dDetailAll&quot; and @id=&quot;con1&quot;]/div[@class=&quot;dConR dDetail&quot;]/div[@class=&quot;dTit2&quot;]/h1/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/div[@class=&quot;dCon dDetailAll&quot; and @id=&quot;con1&quot;]/div[@class=&quot;dConR dDetail&quot;]/div[@class=&quot;dContents&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
今日消费
newpaper_dahe_cn_27010
http://newpaper.dahe.cn/jrxf/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div[@class=&quot;dCon&quot;]/div[@class=&quot;dConL&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body/div[@class=&quot;dCon dDetailAll&quot; and @id=&quot;con1&quot;]/div[@class=&quot;dConR dDetail&quot;]/div[@class=&quot;dTit2&quot;]/span/a"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;dCon dDetailAll&quot; and @id=&quot;con1&quot;]/div[@class=&quot;dConR dDetail&quot;]/div[@class=&quot;dTit2&quot;]/h1/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;dCon dDetailAll&quot; and @id=&quot;con1&quot;]/div[@class=&quot;dConL&quot;] | /html/body/div[@class=&quot;dCon dDetailAll&quot; and @id=&quot;con1&quot;]/div[@class=&quot;dConR dDetail&quot;]/div[@class=&quot;dSearch&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;dCon dDetailAll&quot; and @id=&quot;con1&quot;]/div[@class=&quot;dConR dDetail&quot;]/div[@class=&quot;dTit2&quot;]/h1/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/div[@class=&quot;dCon dDetailAll&quot; and @id=&quot;con1&quot;]/div[@class=&quot;dConR dDetail&quot;]/div[@class=&quot;dContents&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
奉贤报
news_idoican_com_cn_27109
http://news.idoican.com.cn/fxb
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div[@class=&quot;frame&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@class=&quot;bmList&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td/a[@class=&quot;redtit&quot;]"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string('')"/> 
          <xsl:variable name="source" select="string('')"/>
          <xsl:variable name="attr" select="string('')"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;lai&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1 | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;c_c&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@id=&quot;articlecontent&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
河北科技报
news_idoican_com_cn_27150
http://news.idoican.com.cn/hbkejib
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="table/tbody/tr/td/table/tbody/tr/td/a[@class=&quot;blue1&quot;]"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@valign=&quot;middle&quot; and @align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@class=&quot;title_a&quot; and @valign=&quot;middle&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="string(&quot;&quot;)"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@class=&quot;blue1&quot; and @valign=&quot;top&quot;]/span[@class=&quot;blue2&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@valign=&quot;middle&quot; and @align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@class=&quot;title_a&quot; and @valign=&quot;middle&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@valign=&quot;middle&quot; and @align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
荆门日报
news_idoican_com_cn_27443
http://news.idoican.com.cn/jingmrb/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@id=&quot;pgn&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody/tr[@bgcolor=&quot;#ffffff&quot;]/td[@class=&quot;px12c&quot; and @align=&quot;center&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
荆门晚报
news_idoican_com_cn_32421
http://news.idoican.com.cn/jingmwb/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span"/> 
	  <xsl:variable name="publishdate" select="string(&quot;&quot;)"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@class=&quot;px12&quot; and @align=&quot;left&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody/tr[@bgcolor=&quot;#ffffff&quot;]/td[@class=&quot;px12c&quot; and @align=&quot;center&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
江阴日报
news_idoican_com_cn_27112
http://news.idoican.com.cn/jyrb/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div/ul/li/div[@class=&quot;td3bg&quot;]/div[@class=&quot;td7&quot;]/div[@class=&quot;bt_list&quot;]/ul"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="li/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;contantlist&quot; and @id=&quot;bigpicpage&quot;]/ul/li[@class=&quot;contantlist_middle&quot;]/div[@class=&quot;contantlist_middle_c&quot;]/div[@class=&quot;activetile&quot;]/h2"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@id=&quot;top&quot;]/div[@class=&quot;header&quot;]/div[@class=&quot;zuangt&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;contantlist&quot; and @id=&quot;bigpicpage&quot;]/ul/li[@class=&quot;contantlist_middle&quot;]/div[@class=&quot;contantlist_middle_c&quot;]/div[@class=&quot;activetile&quot;]/h2 | /html/body/div[@class=&quot;contantlist&quot; and @id=&quot;bigpicpage&quot;]/ul/li[@class=&quot;contantlist_middle&quot;]/div[@class=&quot;contantlist_middle_c&quot;]/div[@class=&quot;activetile&quot;]/div[@class=&quot;scroll1&quot; and @id=&quot;newsDiv&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
七都晚刊
news_idoican_com_cn_27256
http://news.idoican.com.cn/qdwk/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div/ul/li/div[@class=&quot;td3bg&quot;]/div[@class=&quot;td7&quot;]/div[@class=&quot;bt_list&quot;]/ul"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="li/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;contantlist&quot; and @id=&quot;bigpicpage&quot;]/ul/li[@class=&quot;contantlist_middle&quot;]/div[@class=&quot;contantlist_middle_c&quot;]/div[@class=&quot;activetile&quot;]/h2"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@id=&quot;top&quot;]/div[@class=&quot;header&quot;]/div[@class=&quot;zuangt&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;contantlist&quot; and @id=&quot;bigpicpage&quot;]/ul/li[@class=&quot;contantlist_middle&quot;]/div[@class=&quot;contantlist_middle_c&quot;]/div[@class=&quot;activetile&quot;]/h2 | /html/body/div[@class=&quot;contantlist&quot; and @id=&quot;bigpicpage&quot;]/ul/li[@class=&quot;contantlist_middle&quot;]/div[@class=&quot;contantlist_middle_c&quot;]/div[@class=&quot;activetile&quot;]/div[@class=&quot;scroll1&quot; and @id=&quot;newsDiv&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
文山日报
news_idoican_com_cn_27242
http://news.idoican.com.cn/wsrb/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table[@class=&quot;ft12h&quot; and @align=&quot;left&quot;]/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@align=&quot;left&quot;]/table/tbody/tr/td/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string('')"/> 
          <xsl:variable name="source" select="string('')"/>
          <xsl:variable name="attr" select="string('')"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;lai&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1 | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;c_c&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@id=&quot;articlecontent&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
营口日报
news_idoican_com_cn_27055
http://news.idoican.com.cn/ykrb
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="table/tbody/tr/td/table/tbody/tr/td/a[@class=&quot;blue1&quot;]"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string('')"/> 
          <xsl:variable name="source" select="string('')"/>
          <xsl:variable name="attr" select="string('')"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;lai&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1 | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;c_c&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@id=&quot;articlecontent&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
华商晨报
news_liao1_com_26962
http://news.liao1.com/epaper/hscb/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div[@class=&quot;main&quot;]/div[@class=&quot;right&quot;]/div[@class=&quot;sub_left margin_t&quot;]/div"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@bgcolor=&quot;#e8e8e8&quot;]/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table/tbody/tr/td[@bgcolor=&quot;#f4f4f4&quot;]/span[@class=&quot;px12&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
齐齐哈尔日报
newspaper_northeast_cn_27075
http://newspaper.dbw.cn/qqherb/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@class=&quot;black12&quot;]/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr[@valign=&quot;top&quot;]/td[@class=&quot;default&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body[@bgcolor=&quot;#e8e8d7&quot;]/style | /html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;] | /html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
三江晚报
newspaper_northeast_cn_27072
http://newspaper.dbw.cn/sjwb/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@class=&quot;black12&quot;]/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr[@valign=&quot;top&quot;]/td[@class=&quot;default&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body[@bgcolor=&quot;#e8e8d7&quot;]/style | /html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
检察日报
newspaper_jcrb_com_26995
http://newspaper.jcrb.com
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr/td[@class=&quot;whitenav&quot; and @align=&quot;center&quot; and @bgcolor=&quot;#a90110&quot;]/p/span[@class=&quot;whitenav&quot;]/a"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/table/tbody/tr/td/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot;]/span/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
鹤城晚报
newspaper_northeast_cn_27077
http://newspaper.dbw.cn/hcwb
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@class=&quot;black12&quot;]/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td[@class=&quot;default&quot; and @align=&quot;left&quot;]/a[@id=&quot;pageLink&quot;]|/html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@class=&quot;black12&quot;]/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr[@bgcolor=&quot;#e0e0c9&quot;]/td[@class=&quot;default&quot; and @align=&quot;left&quot;]/a[@id=&quot;pageLink&quot;]"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@class=&quot;black12&quot;]/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr[@valign=&quot;top&quot;]/td[@class=&quot;default&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body[@bgcolor=&quot;#e8e8d7&quot;]/style | /html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;] | /html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
黑龙江晨报
newspaper_northeast_cn_27085
http://newspaper.dbw.cn/hljcb/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@class=&quot;black12&quot;]/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td[@class=&quot;default&quot; and @align=&quot;left&quot;]/a[@id=&quot;pageLink&quot;]|/html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@class=&quot;black12&quot;]/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr[@bgcolor=&quot;#e0e0c9&quot;]/td[@class=&quot;default&quot; and @align=&quot;left&quot;]/a[@id=&quot;pageLink&quot;]"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@class=&quot;black12&quot;]/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr[@valign=&quot;top&quot;]/td[@class=&quot;default&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body[@bgcolor=&quot;#e8e8d7&quot;]/style | /html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
佳木斯日报
newspaper_northeast_cn_27069
http://newspaper.dbw.cn/jmsrb/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@class=&quot;black12&quot;]/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td[@class=&quot;default&quot; and @align=&quot;left&quot;]/a[@id=&quot;pageLink&quot;]|/html/body[@bgcolor=&quot;#e8e8d7&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@class=&quot;black12&quot;]/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr[@bgcolor=&quot;#e0e0c9&quot;]/td[@class=&quot;default&quot; and @align=&quot;left&quot;]/a[@id=&quot;pageLink&quot;]"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table[@class=&quot;ft12h&quot; and @align=&quot;left&quot;]/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@align=&quot;left&quot;]/table/tbody/tr/td/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string('')"/> 
          <xsl:variable name="source" select="string('')"/>
          <xsl:variable name="attr" select="string('')"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;lai&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1 | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;c_c&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@id=&quot;articlecontent&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
南国都市报
ngdsb_hinews_cn_27007
http://ngdsb.hinews.cn/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt1&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/strong | /html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt1&quot; and @align=&quot;center&quot;] | /html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@class=&quot;font6&quot; and @align=&quot;center&quot;]/div[@id=&quot;ozoom&quot;]/table[@class=&quot;xilan_content_tt&quot;]/tbody/tr/td[@class=&quot;xilan_content_tt&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
南国早报
ngzb_gxnews_com_cn_27144
http://ngzb.gxnews.com.cn/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span/font[@color=&quot;#05006c&quot;]/h1"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div/table/tbody/tr/td"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span/font[@color=&quot;#05006c&quot;]/h1 | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
南湖晚报
nhwb_cnjxol_com_27129
http://nhwb.cnjxol.com/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;px12&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@bgcolor=&quot;#ffffff&quot;]/td[@class=&quot;px12c&quot; and @align=&quot;center&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
经济日报
paper_ce_cn_27444
http://paper.ce.cn/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body[@id=&quot;content&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div[@align=&quot;center&quot;]/table/tbody/tr/td[@class=&quot;STYLE32&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;]"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body[@id=&quot;content&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div[@align=&quot;center&quot;]/table/tbody/tr/td[@class=&quot;STYLE32&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body[@id=&quot;content&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/table/tbody/tr/td/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body[@id=&quot;content&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div[@align=&quot;center&quot;]/table/tbody/tr/td[@class=&quot;STYLE32&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body[@id=&quot;content&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div[@align=&quot;center&quot;]/table/tbody/tr/td[@class=&quot;STYLE32&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body[@id=&quot;content&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div[@align=&quot;center&quot;]/table/tbody/tr/td[@class=&quot;font6 STYLE32&quot; and @align=&quot;center&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
中国高新技术产业导报
paper_chinahightech_com_cn_26967
http://paper.chinahightech.com.cn/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
上海证券报
paper_cnstock_com_27782
http://paper.cnstock.com
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div[@id=&quot;pgn&quot;]/li/a"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@align=&quot;left&quot; and @valign=&quot;middle&quot;]/a[@class=&quot;jf_paper_title&quot;]"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;middle&quot; and @bgcolor=&quot;#f5f5f5&quot;]/span[@class=&quot;cn001&quot;]"/> 
          <xsl:variable name="source" select="/html/body/table/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/div[@id=&quot;Main&quot;]/div[@id=&quot;content&quot;]/div/div[@id=&quot;content_about&quot;]"/>
          <xsl:variable name="attr" select="/html/body/table/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/div[@id=&quot;Main&quot;]/div[@id=&quot;content&quot;]/div/div[@id=&quot;content_about&quot;]"/>       
	  <xsl:variable name="title" select="/html/body/table/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/div[@id=&quot;Main&quot;]/div[@id=&quot;content&quot;]/div[@id=&quot;content_title&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/table/tbody/tr[@valign=&quot;top&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@id=&quot;oan&quot;]/ul/li/a | /html/body/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/table[@bgcolor=&quot;#edece7&quot;]/tbody/tr/td[@align=&quot;center&quot;]/table[@class=&quot;title_cn_14 &quot;]/tbody/tr/td[@align=&quot;left&quot;]/a[@class=&quot;jf_paper_nav_txt&quot;] | /html/body/table/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/div[@id=&quot;Main&quot;]/div[@id=&quot;content&quot;]/div[@id=&quot;content_title&quot;] | /html/body/table/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/div[@id=&quot;Main&quot;]/div[@id=&quot;content&quot;]/div[@id=&quot;content_article&quot;] | /html/body/table/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/div[@id=&quot;Main&quot;]/div[@id=&quot;content&quot;]/div[@id=&quot;content_article&quot;]/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
中国证券报
paper_cs_com_cn_26980
http://paper.cs.com.cn/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot; and @class=&quot;outbg&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/div/span[@class=&quot;modbd&quot;]/ul[@class=&quot;ul02_l&quot;]"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="li/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@class=&quot;outbg&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@class=&quot;outbg&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="content" select="/html/body/table[@class=&quot;outbg&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@class=&quot;outbg&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@class=&quot;outbg&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
大兴安岭日报
paper_dxalrb_com_27080
http://paper.dxalrb.com/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
河北经济日报
paper_hbjjrb_com_27084
http://paper.hbjjrb.com/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/div/table/tbody/tr/td/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body[@bgcolor=&quot;#446cc1&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#ffffff&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#ffffff&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#f5f5f5&quot;]/div[@id=&quot;article1&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#efefef&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body[@bgcolor=&quot;#446cc1&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#ffffff&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@bgcolor=&quot;#ffffff&quot;]/table[@bgcolor=&quot;#ffffff&quot;]"/> 
	  <xsl:variable name="content" select="/html/body[@bgcolor=&quot;#446cc1&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#ffffff&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#ffffff&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#f5f5f5&quot;]/div[@id=&quot;article1&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#efefef&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body[@bgcolor=&quot;#446cc1&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#ffffff&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#ffffff&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#f5f5f5&quot;]/div[@id=&quot;article1&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#efefef&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body[@bgcolor=&quot;#446cc1&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#ffffff&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#ffffff&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#f5f5f5&quot;]/div[@id=&quot;article1&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#efefef&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
中国教育报
paper_jyb_cn_27019
http://paper.jyb.cn/zgjyb
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/div[@class=&quot;infos&quot;]/div[@class=&quot;full&quot;]/div[@class=&quot;news_block&quot;]/div[@class=&quot;fint2&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/div[@class=&quot;nev&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/div[@id=&quot;contact&quot;]/table/tbody/tr/td[@class=&quot;z12h24&quot; and @valign=&quot;middle&quot; and @align=&quot;left&quot;]/strong | /html/body/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/div/table/tbody/tr/td[@class=&quot;font6&quot; and @align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
现代金报
paper_lifeningbo_com_cn_27411
http://paper.lifeningbo.com.cn/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/div/span[@class=&quot;modbd&quot;]/ul[@class=&quot;ul02_l&quot;]"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="li/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/font | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/font"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
台州商报
paper_taizhou_com_cn_27166
http://paper.taizhou.com.cn/tzsb/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a[@class=&quot;le_12black&quot;]"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@class=&quot;detail_table&quot;]/tbody/tr/td[@bgcolor=&quot;#ffffff&quot;]/div[@align=&quot;center&quot;]/span[@class=&quot;px12&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="string(&quot;&quot;)"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@class=&quot;detail_table&quot;]/tbody/tr/td[@bgcolor=&quot;#ffffff&quot;]/div[@align=&quot;center&quot;]/span[@class=&quot;px12&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@class=&quot;detail_table&quot;]/tbody/tr/td[@bgcolor=&quot;#ffffff&quot;]/div[@align=&quot;center&quot;]/span[@class=&quot;px12&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@class=&quot;detail_table&quot;]/tbody/tr/td[@bgcolor=&quot;#ffffff&quot;]/div[@align=&quot;center&quot;]/span[@class=&quot;px12c&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
番禺日报
pyrb_dayoo_com_27025
http://pyrb.dayoo.com
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div[@class=&quot;container&quot;]/div[@class=&quot;rightcolumn&quot;]/div[@class=&quot;subcbga&quot;]/div[@class=&quot;listcontent&quot;]/div[@class=&quot;list&quot;]/h4/span[@class=&quot;left&quot;]/a"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div[@class=&quot;container&quot;]/div[@class=&quot;rightcolumn&quot;]/div[@class=&quot;subcbga&quot;]/div[@class=&quot;contentlist&quot;]/div[@class=&quot;left&quot;]/div[@class=&quot;pagecontentlist&quot;]/ul"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="li/span[@class=&quot;left&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="/html/body[@id=&quot;content&quot;]/div[@class=&quot;container&quot;]/div[@class=&quot;leftcolumn&quot;]/div[@class=&quot;tbga&quot;]/div[@class=&quot;rightcolumn&quot;]/div[@class=&quot;subcbga&quot;]/div[@class=&quot;articlecontent&quot;]/div[@class=&quot;article&quot; and @id=&quot;article&quot;]/p[@class=&quot;infor&quot;]/span"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body[@id=&quot;content&quot;]/div[@class=&quot;container&quot;]/div[@class=&quot;leftcolumn&quot;]/div[@class=&quot;tbga&quot;]/div[@class=&quot;rightcolumn&quot;]/div[@class=&quot;subcbga&quot;]/div[@class=&quot;articlecontent&quot;]/div[@class=&quot;article&quot; and @id=&quot;article&quot;]/h3[@id=&quot;artTitle&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/head"/> 
	  <xsl:variable name="content" select="/html/body[@id=&quot;content&quot;]/div[@class=&quot;container&quot;]/div[@class=&quot;leftcolumn&quot;]/div[@class=&quot;tbga&quot;]/div[@class=&quot;rightcolumn&quot;]/div[@class=&quot;subcbga&quot;]/div[@class=&quot;articlecontent&quot;]/div[@class=&quot;article&quot; and @id=&quot;article&quot;]/h3[@id=&quot;artTitle&quot;] | /html/body[@id=&quot;content&quot;]/div[@class=&quot;container&quot;]/div[@class=&quot;leftcolumn&quot;]/div[@class=&quot;tbga&quot;]/div[@class=&quot;rightcolumn&quot;]/div[@class=&quot;subcbga&quot;]/div[@class=&quot;articlecontent&quot;]/div[@class=&quot;article&quot; and @id=&quot;article&quot;]/div[@class=&quot;text&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
攀枝花日报
pzhrb_newssc_org_26961
http://pzhrb.newssc.org/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/table[@id=&quot;table1895&quot; and @bgcolor=&quot;#f7faff&quot;]/tbody/tr/td[@class=&quot;bmdh&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@class=&quot;font7&quot; and @align=&quot;left&quot;]/a"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table[@class=&quot;ft12h&quot; and @align=&quot;left&quot;]/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@align=&quot;left&quot;]/table/tbody/tr/td/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string('')"/> 
          <xsl:variable name="source" select="string('')"/>
          <xsl:variable name="attr" select="string('')"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;lai&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1 | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;c_c&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@id=&quot;articlecontent&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
淇河晨报
qbwb_hebiw_com_27199
http://qbwb.hebiw.com/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/span[@class=&quot;px12&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
瑞安日报
rarb_zjol_com_cn_27399
http://rarb.zjol.com.cn/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table[@class=&quot;wz&quot;]/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@class=&quot;menu&quot; and @valign=&quot;middle&quot; and @align=&quot;left&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table[@class=&quot;wz&quot;]/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table[@class=&quot;wz&quot;]/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table[@class=&quot;wz&quot;]/tbody/tr/td[@align=&quot;center&quot;]/div[@class=&quot;content&quot; and @id=&quot;ozoom&quot;]/founder-content/p | /html/body/table/tbody/tr/td/span[@id=&quot;NewsEditionName&quot;] | /html/body/table/tbody/tr/td/span[@id=&quot;NewsArticleTitle&quot;]"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
青岛日报
ribao_qingdaonews_com_27185
http://press.idoican.com.cn/detail/newspapers/229/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/form[@id=&quot;Form1&quot;]/div[@id=&quot;main&quot;]/div[@id=&quot;lay1&quot;]/div[@class=&quot;col_1&quot;]/ul[@class=&quot;lst_07&quot;]/li/a"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table[@class=&quot;ft12h&quot; and @align=&quot;left&quot;]/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@align=&quot;left&quot;]/table/tbody/tr/td/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string('')"/> 
          <xsl:variable name="source" select="string('')"/>
          <xsl:variable name="attr" select="string('')"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;lai&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1 | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;c_c&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@id=&quot;articlecontent&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
四川工人日报
scgrrb_newssc_org_27017
http://scgrrb.newssc.org/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/div[@align=&quot;center&quot;]/table[@id=&quot;table1894&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table/tbody/tr/td[@class=&quot;bmdh&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@class=&quot;font7&quot; and @align=&quot;left&quot;]/a"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;left&quot;]/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;font7&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table[@id=&quot;table15&quot;]/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/span[@class=&quot;px12&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
四川经济日报
scjjrb_newssc_org_27540
http://scjjrb.newssc.org/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/table/tbody/tr/td[@class=&quot;default&quot; and @bgcolor=&quot;#e8e8e8&quot;]/table/tbody/tr/td[@class=&quot;bmdh&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@class=&quot;font7&quot; and @align=&quot;left&quot;]/a"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;left&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr[@align=&quot;left&quot;]/td[@class=&quot;style02&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;font7&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/span[@class=&quot;px12&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
四川科技报
sckjb_newssc_org_27081
http://sckjb.newssc.org/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/div[@align=&quot;center&quot;]/table[@id=&quot;table1894&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table/tbody/tr/td[@class=&quot;bmdh&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@class=&quot;font7&quot; and @align=&quot;left&quot;]/a"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;left&quot;]/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;font7&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table[@id=&quot;table15&quot;]/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@class=&quot;px12&quot; and @valign=&quot;top&quot; and @align=&quot;left&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/span/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
四川政协报
sczxb_newssc_org_27057
http://sczxb.newssc.org
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/table/tbody/tr/td/div[@align=&quot;center&quot;]/table[@id=&quot;table1894&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@bgcolor=&quot;#ffe383&quot;]/tbody/tr/td[@class=&quot;bmdh&quot; and @valign=&quot;top&quot; and @bgcolor=&quot;#ffb239&quot;]/table/tbody/tr/td[@class=&quot;font7&quot; and @align=&quot;left&quot;]/a"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;left&quot;]/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;font7&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table[@id=&quot;table15&quot;]/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/span[@class=&quot;px12&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
石家庄日报
sjzrb_sjzdaily_com_cn_27113
http://sjzrb.sjzdaily.com.cn/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/span[@class=&quot;px12&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
四平日报
sprbszb_chinajilin_com_cn_27224
http://sprbszb.chinajilin.com.cn/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/span[@class=&quot;px12&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
徐州日报
sqtg_cnxz_com_cn_27169
http://epaper.cnxz.com.cn/xzrb
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id=&quot;pageLink&quot;]"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div/div[@class=&quot;left&quot;]/div[@class=&quot;newslist&quot;]/ul"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="li[@class=&quot;newslist_li2&quot;]/a[@class=&quot;blue1&quot;]"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/div[@id=&quot;contain&quot;]/div[@class=&quot;right&quot;]/div[@class=&quot;main&quot;]/div[@class=&quot;text_box&quot;]/div[@class=&quot;zhegngwen&quot;]/div[@align=&quot;center&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@id=&quot;contain&quot;]/div[@class=&quot;right&quot;]/div[@class=&quot;main&quot;]/div[@class=&quot;text_box&quot;]/div[@class=&quot;title1 title3&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@id=&quot;contain&quot;]/div[@class=&quot;right&quot;]/div[@class=&quot;main&quot;]/div[@class=&quot;text_box&quot;]/div[@class=&quot;zhegngwen&quot;]/div[@align=&quot;center&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/div[@id=&quot;contain&quot;]/div[@class=&quot;right&quot;]/div[@class=&quot;main&quot;]/div[@class=&quot;text_box&quot;]/div[@class=&quot;zhegngwen&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/font/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
松原日报
syrbszb_chinajilin_com_cn_27227
http://syrbszb.chinajilin.com.cn/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/span[@class=&quot;px12&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
巢湖日报
szb_ch365_com_cn_27050
http://szb.ch365.com.cn/chrb/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;center&quot;]/table[@class=&quot;putt&quot;]/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/span[@class=&quot;px12&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
巢湖晨刊
szb_ch365_com_cn_29435
http://szb.ch365.com.cn/dsck/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table/tbody/tr/td[@align=&quot;center&quot; and @valign=&quot;top&quot;]/table[@class=&quot;putt&quot;]/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/span[@class=&quot;px12&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
临夏民族日报
szb_chinalxnet_com_27064
http://szb.chinalxnet.com
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@bgcolor=&quot;#ffffff&quot;]/td[@class=&quot;px12c&quot; and @align=&quot;center&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
大连日报
szb_dlxww_com_27046
http://szb.dlxww.com/dlrb/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/span[@class=&quot;paperdate&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p | /html/body/table/tbody/tr/td/span[@id=&quot;NewsArticleTitle&quot;]"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
新商报
szb_dlxww_com_27603
http://szb.dlxww.com/xsb/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/span[@class=&quot;paperdate&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p | /html/body/table/tbody/tr/td/span[@id=&quot;NewsArticleTitle&quot;]"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
北方新报
szb_northnews_cn_27091
http://szb.northnews.cn/bfxb/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;CENTER&quot;]/tbody/tr/td[@align=&quot;CENTER&quot; and @valign=&quot;TOP&quot;]/table[@align=&quot;RIGHT&quot;]/tbody/tr/td[@valign=&quot;TOP&quot;]/table/tbody/tr/td[@valign=&quot;TOP&quot;]/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;CENTER&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;TOP&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/b"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;CENTER&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@class=&quot;cWhite fB&quot; and @align=&quot;CENTER&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;CENTER&quot;]/tbody/tr/td[@valign=&quot;TOP&quot; and @align=&quot;CENTER&quot;]/table[@align=&quot;RIGHT&quot;]/tbody/tr/td[@valign=&quot;TOP&quot;]/table[@class=&quot;unnamed1&quot;]/tbody/tr/td/font[@class=&quot;cBlue&quot;] | /html/body/table[@align=&quot;CENTER&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;TOP&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/b | /html/body/table[@align=&quot;CENTER&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/div[@id=&quot;ozoom&quot;]/content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
北方周末报
szb_northnews_cn_27101
http://szb.northnews.cn/bfzm/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;CENTER&quot;]/tbody/tr/td[@align=&quot;CENTER&quot; and @valign=&quot;TOP&quot;]/table[@align=&quot;RIGHT&quot;]/tbody/tr/td[@valign=&quot;TOP&quot;]/table/tbody/tr/td[@valign=&quot;TOP&quot;]/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;CENTER&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;TOP&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/b"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;CENTER&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@class=&quot;cWhite fB&quot; and @align=&quot;CENTER&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;CENTER&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;TOP&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/b | /html/body/table[@align=&quot;CENTER&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/div[@id=&quot;ozoom&quot;]/content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
内蒙古日报
szb_northnews_cn_27093
http://szb.northnews.cn/nmgrb/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;CENTER&quot;]/tbody/tr/td[@align=&quot;CENTER&quot; and @valign=&quot;TOP&quot;]/table[@align=&quot;RIGHT&quot;]/tbody/tr/td[@valign=&quot;TOP&quot;]/table/tbody/tr/td[@valign=&quot;TOP&quot;]/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;CENTER&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;TOP&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/b"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;CENTER&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@class=&quot;cWhite fB&quot; and @align=&quot;CENTER&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;CENTER&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;TOP&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;] | /html/body/table[@align=&quot;CENTER&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;TOP&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/b | /html/body/table[@align=&quot;CENTER&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/div[@id=&quot;ozoom&quot;]/content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
东南早报
szb_qzwb_com_27263
http://szb.qzwb.com/dnzb
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot; and @class=&quot;bg_img&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@class=&quot;bg_img&quot; and @id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/div/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@class=&quot;bg_img&quot; and @id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;bottom&quot; and @align=&quot;right&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@class=&quot;bg_img&quot; and @id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/div/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@class=&quot;bg_img&quot; and @id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/div/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@class=&quot;bg_img&quot; and @id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/div/table/tbody/tr/td/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@align=&quot;center&quot;]/table[@bgcolor=&quot;#d8d9bd&quot;]/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr/td | /html/body/table[@class=&quot;bg_img&quot; and @id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/div/table/tbody/tr/td/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
泉州晚报(海外版)
szb_qzwb_com_27276
http://szb.qzwb.com/hwb
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot; and @class=&quot;bg_img&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string('')"/> 
          <xsl:variable name="source" select="string('')"/>
          <xsl:variable name="attr" select="string('')"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;lai&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1 | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;c_c&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@id=&quot;articlecontent&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
泉州晚报
szb_qzwb_com_27277
http://szb.qzwb.com/qzwb/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot; and @class=&quot;bg_img&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@class=&quot;bg_img&quot; and @id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/div/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@class=&quot;bg_img&quot; and @id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;bottom&quot; and @align=&quot;right&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@class=&quot;bg_img&quot; and @id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/strong | /html/body/table[@class=&quot;bg_img&quot; and @id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/div/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@class=&quot;bg_img&quot; and @id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/div/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@class=&quot;bg_img&quot; and @id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/div/table/tbody/tr/td/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
银川晚报
szb_ycen_com_cn_27433
http://szb.ycen.com.cn/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@class=&quot;px12&quot; and @align=&quot;left&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
滁州日报
szbk_chuzhou_cn_27379
http://szbk.chuzhou.cn/czrb/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td/table[@align=&quot;center&quot; and @class=&quot;table_1&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@class=&quot;table_2&quot;]/tbody/tr/td/div[@align=&quot;center&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td/table[@class=&quot;table_1&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@class=&quot;table_2&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#f6f7f1&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td/table[@class=&quot;table_1&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@class=&quot;table_2&quot; and @bgcolor=&quot;#ffffff&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td/table[@class=&quot;table_1&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@class=&quot;table_2&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td/table[@class=&quot;table_1&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@class=&quot;table_2&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#f6f7f1&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td/table[@class=&quot;table_1&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@class=&quot;table_2&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#f6f7f1&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td/table[@class=&quot;table_1&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@class=&quot;table_2&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#f6f7f1&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot; and @align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
皖东晨刊
szbk_chuzhou_cn_27386
http://szbk.chuzhou.cn/wdck/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td/table[@align=&quot;center&quot; and @class=&quot;table_1&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@class=&quot;table_2&quot;]/tbody/tr/td/div[@align=&quot;center&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td/table[@class=&quot;table_1&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@class=&quot;table_2&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#f6f7f1&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;]"/> 
          <xsl:variable name="source" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td/table[@class=&quot;table_1&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@class=&quot;table_2&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#f6f7f1&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td/table[@class=&quot;table_1&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@class=&quot;table_2&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td/table[@class=&quot;table_1&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@class=&quot;table_2&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#f6f7f1&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td/table[@class=&quot;table_1&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@class=&quot;table_2&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#f6f7f1&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td/table[@class=&quot;table_1&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@class=&quot;table_2&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#f6f7f1&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot; and @align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
嵊州日报
sznews_zjol_com_cn_27405
http://sznews.zjol.com.cn/szrb/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@class=&quot;rlk_1&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td/table/tbody/tr/td/div[@align=&quot;right&quot;]/a"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@bgcolor=&quot;#eef8ff&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot; and @bgcolor=&quot;#eef8ff&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;h1&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table[@align=&quot;right&quot;]/tbody/tr/td[@class=&quot;rlk_1&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@bgcolor=&quot;#eef8ff&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot; and @bgcolor=&quot;#eef8ff&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;ft&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@bgcolor=&quot;#eef8ff&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot; and @bgcolor=&quot;#eef8ff&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;h1&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@bgcolor=&quot;#eef8ff&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#eef8ff&quot;]/div[@class=&quot;STYLE10&quot; and @id=&quot;ozoom&quot;]/span[@id=&quot;articleContent&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
通化日报
thrbszb_chinajilin_com_cn_27228
http://thrbszb.chinajilin.com.cn/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@class=&quot;px12&quot; and @align=&quot;left&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/span[@class=&quot;px12&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/span[@class=&quot;px12&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
都市时报
times_clzg_cn_27249
http://times.clzg.cn/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div/div[@class=&quot;index&quot;]/div[@class=&quot;misc&quot;]/div[@class=&quot;idx&quot;]/div[@class=&quot;items&quot;]"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="div[@class=&quot;item&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/div[@id=&quot;content&quot;]/div[@class=&quot;index&quot;]/div[@class=&quot;cont&quot;]/div[@class=&quot;con&quot;]/div[@class=&quot;tl&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@id=&quot;content&quot;]/div[@class=&quot;nav&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@id=&quot;content&quot;]/div[@class=&quot;index&quot;]/div[@class=&quot;cont&quot;]/div[@class=&quot;con&quot;]/div[@class=&quot;tl&quot;] | /html/body/div[@id=&quot;content&quot;]/div[@class=&quot;index&quot;]/div[@class=&quot;cont&quot;]/div[@class=&quot;con&quot;]/div[@class=&quot;cons&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
投资时报
tzsb_cnhan_com_27413
http://tzsb.cnhan.com/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr/td[@align=&quot;center&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot; and @valign=&quot;top&quot;]/div/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@align=&quot;left&quot;]/td[@class=&quot;whitenav&quot;]/font[@color=&quot;#ffffff&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/span[@class=&quot;px12&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
华西都市报
wccdaily_scol_com_cn_27102
http://wccdaily.scol.com.cn/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;STYLE31&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;right&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;STYLE31&quot;]/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt1&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@class=&quot;STYLE31&quot; and @valign=&quot;top&quot; and @align=&quot;center&quot;]/span[@class=&quot;STYLE32&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;STYLE31&quot;]/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;bt1&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;STYLE31&quot;]/table/tbody/tr/td/table/tbody/tr/td[@class=&quot;STYLE33&quot; and @align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/span/table[@class=&quot;xilan_content_tt&quot;]/tbody/tr/td[@class=&quot;xilan_content_tt&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
潍坊日报
wfrb_wfnews_com_cn_27260
http://wfrb.wfnews.com.cn
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font05&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;middle&quot; and @align=&quot;center&quot;]/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font06&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font05&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/span[@class=&quot;font06&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
潍坊晚报
wfwb_wfnews_com_cn_27261
http://wfwb.wfnews.com.cn
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="map/area"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font05&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;middle&quot; and @align=&quot;center&quot;]/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font06&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font05&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/span[@class=&quot;font06&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
武汉晨报
whcb_cnhan_com_27426
http://whcb.cnhan.com/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr/td[@align=&quot;center&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot; and @valign=&quot;top&quot;]/div/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@align=&quot;left&quot;]/td[@class=&quot;whitenav&quot;]/font[@color=&quot;#ffffff&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/span[@class=&quot;px12&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
武汉晚报
whwb_cnhan_com_27428
http://whwb.cnhan.com/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr/td[@align=&quot;center&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@align=&quot;center&quot; and @valign=&quot;top&quot;]/div/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@align=&quot;left&quot;]/td[@class=&quot;whitenav&quot;]/font[@color=&quot;#ffffff&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/span[@class=&quot;px12&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
温岭日报
wldaily_zjol_com_cn_27376
http://wldaily.zjol.com.cn/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
安徽市场报
ahscb_com_27389
http://www.ahscb.com/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@bgcolor=&quot;#ffffff&quot;]/td[@class=&quot;px12c&quot; and @align=&quot;center&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
包头日报
baotounews_com_cn_27119
http://www.baotounews.com.cn/epaper/btrb
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@bgcolor=&quot;#ffffff&quot;]/table | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
包头晚报
baotounews_com_cn_27121
http://www.baotounews.com.cn/epaper/btwb/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td[@class=&quot;px12&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
都市7
baotounews_com_cn_27125
http://www.baotounews.com.cn/epaper/dsbk
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/div"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="table/tbody/tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/span[@class=&quot;px12&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
北京商报
bjbusiness_com_cn_26975
http://www.bjbusiness.com.cn/site1/bjsb/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr[@bgcolor=&quot;#a90110&quot;]/td[@align=&quot;center&quot; and @bgcolor=&quot;#006ea2&quot;]/table/tbody/tr/td[@class=&quot;whitenav&quot;]"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;daohang&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@bgcolor=&quot;#ffffff&quot;]/td[@class=&quot;px12c&quot; and @align=&quot;center&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
中国文化报
ccdy_cn_27507
http://www.ccdy.cn/dynamic/newsindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table[@class=&quot;ft12h&quot; and @align=&quot;left&quot;]/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@align=&quot;left&quot;]/table/tbody/tr/td/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string('')"/> 
          <xsl:variable name="source" select="string('')"/>
          <xsl:variable name="attr" select="string('')"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;lai&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1 | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;c_c&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@id=&quot;articlecontent&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
承德日报
cddaily_com_cn_27149
http://www.cddaily.com.cn/site1/cdrb/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@bgcolor=&quot;#ffffff&quot;]/table | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot; and @align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
承德晚报
cddaily_com_cn_27172
http://www.cddaily.com.cn/site1/cdwb/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/table/tbody/tr/td/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/table/tbody/tr/td/table/tbody/tr/td[@class=&quot;px12&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
内江日报
njrb_newssc_org_27318
http://njrb.newssc.org/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/div[@align=&quot;center&quot;]/table[@id=&quot;table1894&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table/tbody/tr/td[@class=&quot;bmdh&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td[@class=&quot;font7&quot; and @align=&quot;left&quot;]/a"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;left&quot;]/div[@align=&quot;center&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;font7&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table[@id=&quot;table15&quot;]/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/div[@align=&quot;center&quot;]/table[@id=&quot;table2&quot;]/tbody/tr/td/table[@id=&quot;table14&quot;]/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;middle&quot;]/table/tbody/tr/td/span/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
南京日报
njrb_njnews_cn_26969
http://njrb.njnews.cn
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/div[@align=&quot;left&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
吉林日报
chinajilin_com_cn_27135
http://www.chinajilin.com.cn/jlrb/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/span[@class=&quot;px12&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
解放军报
chinamil_com_cn_27480
http://www.chinamil.com.cn/jfjbmap/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div[@class=&quot;frame&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/div[@class=&quot;con001&quot;]/ul/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;frame&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/div[@class=&quot;content&quot;]/h1"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;frame&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;bottom&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;frame&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/div[@class=&quot;content&quot;]/h1 | /html/body/div[@class=&quot;frame&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/div[@class=&quot;content&quot;]/h1/span | /html/body/div[@class=&quot;frame&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/div[@class=&quot;content&quot;]/div/span[@id=&quot;ozoom&quot;]/founder-content/p | /html/body/div[@class=&quot;frame&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/div[@class=&quot;content&quot;]/div/span[@id=&quot;ozoom&quot;]/founder-content/p/strong"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
中国邮政报
chinapostnews_com_cn_26973
http://www.chinapostnews.com.cn
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font03&quot; and @align=&quot;center&quot;]"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@class=&quot;whitenav&quot; and @align=&quot;right&quot;]/p[@align=&quot;center&quot;]/strong/script"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font03&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
中国贸易报
chinatradenews_com_cn_26978
http://www.chinatradenews.com.cn/founder/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;]"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
池州日报
chiznews_com_27052
http://www.chiznews.com/site1/czrb
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;left&quot;]/span | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@bgcolor=&quot;#ffffff&quot;]/td[@class=&quot;px12c&quot; and @align=&quot;center&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
东至新闻
chiznews_com_27471
http://www.chiznews.com/site1/dzxw/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@bgcolor=&quot;#ffffff&quot;]/td[@class=&quot;px12c&quot; and @align=&quot;center&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
贵池新闻
chiznews_com_27469
http://www.chiznews.com/site1/gcxw/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table[@class=&quot;ft12h&quot; and @align=&quot;left&quot;]/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@align=&quot;left&quot;]/table/tbody/tr/td/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string('')"/> 
          <xsl:variable name="source" select="string('')"/>
          <xsl:variable name="attr" select="string('')"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;lai&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1 | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;c_c&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@id=&quot;articlecontent&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
九华周末
chiznews_com_27460
http://www.chiznews.com/site1/jhzm/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="table/tbody/tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@align=&quot;right&quot;]/td[@class=&quot;px12&quot; and @valign=&quot;center&quot; and @align=&quot;middle&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@bgcolor=&quot;#ffffff&quot;]/td[@class=&quot;px12c&quot; and @align=&quot;center&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
青阳新闻
chiznews_com_27474
http://www.chiznews.com/site1/qyxw/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table[@class=&quot;ft12h&quot; and @align=&quot;left&quot;]/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@align=&quot;left&quot;]/table/tbody/tr/td/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string('')"/> 
          <xsl:variable name="source" select="string('')"/>
          <xsl:variable name="attr" select="string('')"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;lai&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1 | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;c_c&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@id=&quot;articlecontent&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
石台新闻
chiznews_com_27476
http://www.chiznews.com/site1/stxw/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table/tbody/tr/td/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table[@class=&quot;ft12h&quot; and @align=&quot;left&quot;]/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@align=&quot;left&quot;]/table/tbody/tr/td/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string('')"/> 
          <xsl:variable name="source" select="string('')"/>
          <xsl:variable name="attr" select="string('')"/>       
	  <xsl:variable name="title" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1"/> 
	  <xsl:variable name="publishdate" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;lai&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/h1 | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@class=&quot;list_t&quot;]/div[@class=&quot;text_c&quot;]/div[@class=&quot;c_c&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p | /html/body/div[@class=&quot;content&quot;]/div[@class=&quot;right_c&quot;]/div[@id=&quot;articlecontent&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
中国中医药报
cntcmvideo_com_27435
http://www.cntcmvideo.com/zgzyyb/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@align=&quot;center&quot;]/table/tbody/tr/td[@align=&quot;center&quot;]/font[@color=&quot;#666666&quot;]"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@bgcolor=&quot;#ffffff&quot;]/table"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot; and @align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
彭城晚报
cnxz_com_cn_27116
http://press.idoican.com.cn/detail/newspapers/139/
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/form[@id=&quot;Form1&quot;]/div[@id=&quot;main&quot;]/div[@id=&quot;lay1&quot;]/div[@class=&quot;col_1&quot;]/ul[@class=&quot;lst_07&quot;]/li/a"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/div/table/tbody/tr/td[@align=&quot;center&quot; and @valign=&quot;top&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td/table/tbody/tr/td[@align=&quot;left&quot; and @class=&quot;le_12black&quot;]/a[@class=&quot;blue1&quot;]"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="/html/body/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table[@bgcolor=&quot;#fff4ed&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#fff4ed&quot;]/table/tbody/tr/td"/>
          <xsl:variable name="attr" select="/html/body/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@align=&quot;middle&quot;]/td[@class=&quot;le_14black&quot;]/div[@id=&quot;Layer1&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td/table | /html/body/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@align=&quot;middle&quot;]/td[@class=&quot;le_14black&quot;]/div[@id=&quot;Layer1&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td/table/tbody | /html/body/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@align=&quot;middle&quot;]/td[@class=&quot;le_14black&quot;]/div[@id=&quot;Layer1&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td/table/tbody/tr[@align=&quot;middle&quot;]"/>       
	  <xsl:variable name="title" select="/html/body/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table[@bgcolor=&quot;#fff4ed&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#fff4ed&quot;]/table/tbody/tr/td[@class=&quot;le_ht14black&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@class=&quot;le_ht14black&quot; and @align=&quot;middle&quot;]/div[@align=&quot;center&quot;]/span[@class=&quot;le_ht20black&quot;]/b"/> 
	  <xsl:variable name="publishdate" select="/html/body/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@align=&quot;middle&quot;]/td[@class=&quot;le_14black&quot;]/strong[@class=&quot;le_12color&quot;] | /html/body/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@align=&quot;middle&quot;]/td[@class=&quot;le_14black&quot;]/div[@id=&quot;Layer1&quot;]/table[@align=&quot;center&quot;]/tbody/tr/td/table"/> 
	  <xsl:variable name="content" select="/html/body/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr/td/div[@align=&quot;center&quot;]/span[@class=&quot;le_14black&quot;]/strong | /html/body/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@bgcolor=&quot;#ffcdab&quot;]/table/tbody/tr/td[@class=&quot;le_12black&quot;]/table/tbody/tr/td[@class=&quot;le_12black&quot;]/div[@align=&quot;center&quot;]/a[@class=&quot;preart&quot;] | /html/body/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table[@bgcolor=&quot;#fff4ed&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#fff4ed&quot;]/table/tbody/tr/td[@class=&quot;le_ht14black&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@class=&quot;le_ht14black&quot; and @align=&quot;middle&quot;]/div[@align=&quot;center&quot;]/span[@class=&quot;le_ht20black&quot;]/b | /html/body/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table[@bgcolor=&quot;#fff4ed&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#fff4ed&quot;]/table/tbody/tr/td[@class=&quot;le_ht14black&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@class=&quot;le_ht14black&quot; and @align=&quot;middle&quot;]/div[@align=&quot;center&quot;]/b/b/span[@class=&quot;le_14black&quot;] | /html/body/table/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table[@bgcolor=&quot;#fff4ed&quot;]/tbody/tr/td[@valign=&quot;top&quot; and @bgcolor=&quot;#fff4ed&quot;]/table/tbody/tr/td/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
大理日报
dalidaily_com_27237
http://www.dalidaily.com/dianzi/site1/dlrb/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="/html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@id=&quot;logoTable&quot; and @align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
达州日报
dzrbs_com_27317
http://www.dzrbs.com/dzrbspage/dzrb/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot; and @align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
达州晚报
dzrbs_com_27327
http://www.dzrbs.com/dzrbspage/dzwb/paperindex.htm
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@align=&quot;right&quot;]/tbody/tr/td[@align=&quot;middle&quot;]/table/tbody/tr/td[@align=&quot;left&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td/div/table/tbody"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="tr/td[@class=&quot;default&quot; and @valign=&quot;top&quot;]/a"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;]"/> 
	  <xsl:variable name="publishdate" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/span[@class=&quot;default&quot;]"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font02&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@class=&quot;font01&quot; and @align=&quot;center&quot;] | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr[@valign=&quot;top&quot;]/td/table/tbody/tr/td/div/table/tbody/tr/td[@class=&quot;font6&quot; and @align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
法制晚报
fawan_com_26963
http://www.fawan.com/html
1
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="//a[@id='pageLink']"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Columns>
	<xsl:for-each select="$box">
	  <Column>
	    <xsl:attribute name="name">
	      <xsl:for-each select=".|.//*">
                <xsl:choose>       
                  <xsl:when test="name() = 'SCRIPT' "> 
		    <xsl:text/>
		  </xsl:when> 
		  <xsl:otherwise> 
		    <xsl:value-of select="text()"/>
		  </xsl:otherwise> 
		</xsl:choose> 
	      </xsl:for-each>
	    </xsl:attribute>
	    <xsl:attribute name="url">
	      <xsl:value-of select="./@href"/>
	    </xsl:attribute>
	  </Column>
	</xsl:for-each>
      </Columns>
    </Result>
  </xsl:template>
</xsl:stylesheet>

docatt=@nyapc.com/XPCOM/nsNDDocAtt;1###cluster=@nyapc.com/XPCOM/nsUrlCluster;1###generator=@nyapc.com/XPCOM/nsChlVarGenerator_1;1###doccount=1###path_atts=class;id
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/> 
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table[@class=&quot;table_footer&quot;]/tbody/tr/td[@align=&quot;center&quot; and @valign=&quot;top&quot;]/table/tbody/tr/td"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Column>
	<xsl:for-each select="$box">
	  <xsl:variable name="sub" select="table[@align=&quot;center&quot;]/tbody/tr/td/a[@class=&quot;mulu&quot;]"/> 
	    <xsl:for-each select="$sub">
	      <SubItem>
		<xsl:attribute name="url">
		  <xsl:value-of select="./@href"/>
		</xsl:attribute>
		<xsl:for-each select=".|.//*">
                  <xsl:choose>       
                    <xsl:when test="name() = 'SCRIPT' "> 
		      <xsl:text/>
		    </xsl:when> 
		    <xsl:otherwise> 
		      <xsl:value-of select="text()"/>
		    </xsl:otherwise> 
		  </xsl:choose> 
		</xsl:for-each>
	      </SubItem>
	    </xsl:for-each>
	</xsl:for-each>
      </Column>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/nsDocAtt;1###cluster=@nyapc.com/XPCOM/nsCluster;1###generator=@nyapc.com/XPCOM/nsColVarGenerator;1###doccount=2###dim=AREA_RATE;STYLE_PAR;STYLE_SIB;DEPTH;WH_RATE###classcount=3###res_path_atts=class;valign;halign;align;font
<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes"/>
  <xsl:param name="docurl"/>
  <xsl:param name="urlid"/>
  <xsl:variable name="box" select="/html/body"/> 
  <xsl:template match="/">
    <Result>
      <xsl:attribute name="url">
	<xsl:value-of select="$docurl"/>
      </xsl:attribute>
	<xsl:attribute name="uid">
	  <xsl:value-of select="$urlid"/>
	</xsl:attribute>
      <Content>
	<xsl:for-each select="$box">
          <xsl:variable name="author" select="string(&quot;&quot;)"/> 
          <xsl:variable name="source" select="string(&quot;&quot;)"/>
          <xsl:variable name="attr" select="string(&quot;&quot;)"/>       
	  <xsl:variable name="title" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/table[@id=&quot;Table_01&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span"/> 
	  <xsl:variable name="publishdate" select="string(&quot;&quot;)"/> 
	  <xsl:variable name="content" select="/html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/table[@id=&quot;Table_01&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/span | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/table[@id=&quot;Table_01&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td/table/tbody/tr[@valign=&quot;top&quot;]/td[@align=&quot;center&quot;]/strong | /html/body/table[@align=&quot;center&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;top&quot; and @align=&quot;center&quot;]/table[@id=&quot;Table_01&quot;]/tbody/tr/td[@valign=&quot;top&quot;]/table/tbody/tr/td[@valign=&quot;bottom&quot; and @align=&quot;left&quot;]/table/tbody/tr/td[@align=&quot;left&quot;]/div[@id=&quot;ozoom&quot;]/founder-content/p"/> 
	    <ContAtts>
	      <Att name="#DRETITLE ">
                <xsl:if test="string-length($title)&gt;0">
		<xsl:value-of select="$title"/>
                </xsl:if>
	      </Att>
	      <Att name="#DREFIELD PUBLISHDATE=">
		<xsl:value-of select="$publishdate"/>
	      </Att>
              <Att name="#DREFIELD AUTHOR=">
                <xsl:if test="string-length($author)&gt;0">
		<xsl:value-of select="$author"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD SOURCE=">
                <xsl:if test="string-length($source)&gt;0">
		<xsl:value-of select="$source"/>
                </xsl:if>
	      </Att>
              <Att name="#DREFIELD ATTR=">
                <xsl:if test="string-length($attr)&gt;0">
		<xsl:value-of select="$attr"/>
                </xsl:if>
	      </Att>
              <Att name="#DREDBNAME ">
		<xsl:value-of select="string('NEWS')"/>
	      </Att>
	    </ContAtts>  
	    <Content>
	       <xsl:for-each select="$content">
		 <xsl:choose>       
                   <xsl:when test="name() = 'SCRIPT' "> 
		     <xsl:text/>
		   </xsl:when> 
		   <xsl:otherwise> 
		     <xsl:value-of select="text()"/>
		   </xsl:otherwise> 
		 </xsl:choose> 
	       </xsl:for-each>
	    </Content>
	</xsl:for-each>
      </Content>
    </Result>
  </xsl:template>
</xsl:stylesheet>
docatt=@nyapc.com/XPCOM/ContentDocAtt;1###cluster=@nyapc.com/XPCOM/ThresholdCluster;1###generator=@nyapc.com/XPCOM/ContentVarGen;1###doccount=5###similar_node_th=0.7
